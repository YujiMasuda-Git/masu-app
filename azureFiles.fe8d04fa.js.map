{"version":3,"sources":["../../src/pipeline.ts","../../src/log.common.ts","../../src/log-browser.mts","node_modules/process/browser.js","../../src/debug.ts","../../src/index.ts","../../src/log.ts","../../src/AbortError.ts","../../src/createAbortablePromise.ts","../../src/delay.ts","../../src/aborterUtils.ts","../../src/random.ts","../../src/object.ts","../../src/error.ts","../../src/bytesEncoding.common.ts","../../src/bytesEncoding-browser.mts","../../src/sha256.common.ts","../../src/sha256-browser.mts","../../src/typeGuards.ts","../../src/uuidUtils.common.ts","../../src/uuidUtils-browser.mts","../../src/checkEnvironment.ts","../../../src/util/sanitizer.ts","../../../src/policies/logPolicy.ts","../../../src/policies/redirectPolicy.ts","../../../src/util/userAgentPlatform-browser.mts","../../src/constants.ts","../../../src/util/userAgent.ts","../../../src/policies/userAgentPolicy.ts","../../../src/util/typeGuards.ts","../../../src/util/file.ts","../../../src/util/concat.common.ts","../../../src/util/concat-browser.mts","../../../src/policies/multipartPolicy.ts","../../../src/policies/decompressResponsePolicy-browser.mts","../../../src/util/helpers.ts","../../../src/retryStrategies/throttlingRetryStrategy.ts","../../../src/retryStrategies/exponentialRetryStrategy.ts","../../../src/policies/retryPolicy.ts","../../../src/policies/defaultRetryPolicy.ts","../../src/httpHeaders.ts","../../../src/policies/formDataPolicy.ts","../../../src/policies/proxyPolicy.common.ts","../../../src/policies/proxyPolicy-browser.mts","../../../src/policies/setClientRequestIdPolicy.ts","../../../src/policies/tlsPolicy.ts","../../src/tracingContext.ts","../../src/state-browser.mts","../../src/instrumenter.ts","../../src/tracingClient.ts","../../../src/util/inspect.common.ts","../../../src/util/inspect-browser.mts","../../src/restError.ts","../../../src/policies/tracingPolicy.ts","../../src/createPipelineFromOptions.ts","../../src/fetchHttpClient.ts","../../src/defaultHttpClient-browser.mts","../../src/pipelineRequest.ts","../../../src/policies/exponentialRetryPolicy.ts","../../../src/policies/systemErrorRetryPolicy.ts","../../../src/policies/throttlingRetryPolicy.ts","../../../src/util/tokenCycler.ts","../../../src/policies/bearerTokenAuthenticationPolicy.ts","../../../src/policies/ndJsonPolicy.ts","../../../src/policies/auxiliaryAuthenticationHeaderPolicy.ts","node_modules/tslib/tslib.es6.js","../../src/azureKeyCredential.ts","../../src/keyCredential.ts","../../src/azureNamedKeyCredential.ts","../../src/azureSASCredential.ts","../../src/tokenCredential.ts","../../../src/policies/disableKeepAlivePolicy.ts","../../src/base64-browser.mts","../../src/interfaces.ts","../../src/utils.ts","../../src/serializer.ts","../../src/operationHelpers.ts","../../src/deserializationPolicy.ts","../../src/interfaceHelpers.ts","../../src/serializationPolicy.ts","../../src/httpClientCache.ts","../../src/urlHelpers.ts","../../src/serviceClient.ts","../../src/authorizeRequestOnClaimChallenge.ts","../../src/authorizeRequestOnTenantChallenge.ts","../../src/util.ts","../../src/response.ts","../../src/extendedClient.ts","../../../src/policies/requestPolicyFactoryPolicy.ts","../../src/httpClientAdapter.ts","../../src/xml.common.ts","../../src/xml-browser.mts","../../../src/log.ts","../../src/AbortSignal.ts","../../src/AbortController.ts","../../../../src/policies/RequestPolicy.ts","../../../../src/utils/constants.ts","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","../../../../src/utils/utils.common.ts","../../../../src/policies/StorageRetryPolicy.ts","../../../src/StorageRetryPolicyFactory.ts","../../../../src/credentials/StorageSharedKeyCredential.browser.ts","../../../../src/policies/CredentialPolicy.ts","../../../../src/policies/AnonymousCredentialPolicy.ts","../../../../src/credentials/Credential.ts","../../../../src/credentials/AnonymousCredential.ts","../../../../src/utils/cache.ts","../../../../src/policies/StorageBrowserPolicyV2.ts","../../../../src/policies/StorageRetryPolicyV2.ts","../../../../src/policies/StorageSharedKeyCredentialPolicyV2.browser.ts","../../../../src/policies/StorageBrowserPolicy.ts","../../../src/StorageBrowserPolicyFactory.ts","../../../../src/policies/StorageCorrectContentLengthPolicy.browser.ts","../../../src/Pipeline.ts","../../../../../../src/generated/src/models/index.ts","../../../../../../src/generated/src/models/mappers.ts","../../../../../../src/generated/src/models/parameters.ts","../../../../../../src/generated/src/operations/service.ts","../../../../../../src/generated/src/operations/container.ts","../../../../../../src/generated/src/operations/blob.ts","../../../../../../src/generated/src/operations/pageBlob.ts","../../../../../../src/generated/src/operations/appendBlob.ts","../../../../../../src/generated/src/operations/blockBlob.ts","../../../../../../src/generated/src/operations/index.ts","../../../../../src/generated/src/storageClient.ts","../../../../../../src/generated/src/operationsInterfaces/index.ts","../../../../../src/generated/src/index.ts","../../../src/StorageContextClient.ts","../../../src/StorageClient.ts","../../../../src/utils/tracing.ts","../../../../src/sas/BlobSASPermissions.ts","../../../../src/sas/ContainerSASPermissions.ts","../../../../src/credentials/UserDelegationKeyCredential.browser.ts","../../../../src/sas/SasIPRange.ts","../../../../src/sas/SASQueryParameters.ts","../../../../src/sas/BlobSASSignatureValues.ts","../../../src/BlobLeaseClient.ts","../../../src/BlobDownloadResponse.browser.ts","../../../src/BlobQueryResponse.browser.ts","../../../src/models.ts","../../../src/PageBlobRangeResponse.ts","../../src/logger.ts","../../../src/poller/constants.ts","../../../src/poller/operation.ts","../../../src/http/operation.ts","../../../src/poller/poller.ts","../../../src/http/poller.ts","../../../../src/legacy/lroEngine/operation.ts","../../../src/legacy/poller.ts","../../../../src/legacy/lroEngine/lroEngine.ts","../../../../src/legacy/lroEngine/index.ts","../../../../src/pollers/BlobStartCopyFromUrlPoller.ts","../../../src/Range.ts","node_modules/events/events.js","../../../../src/utils/Batch.ts","../../../../storage-common/src/BufferScheduler.browser.ts","../../../../storage-common/src/index.browser.ts","../../../../src/utils/utils.browser.ts","../../../src/Clients.ts","../../../src/BatchUtils.browser.ts","../../../src/BatchResponseParser.ts","../../../../src/utils/Mutex.ts","../../../src/BlobBatch.ts","../../../src/BlobBatchClient.ts","../../../src/ContainerClient.ts","../../../../src/sas/AccountSASPermissions.ts","../../../../src/sas/AccountSASResourceTypes.ts","../../../../src/sas/AccountSASServices.ts","../../../../src/sas/AccountSASSignatureValues.ts","../../../src/BlobServiceClient.ts","../../../src/generatedModels.ts","../../../src/index.browser.ts","azureFiles.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","TypeError","String","__","constructor","create","__assign","assign","t","s","n","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","kind","descriptor","_","done","context","access","addInitializer","result","get","set","init","unshift","__runInitializers","thisArg","value","useValue","__propKey","x","__setFunctionName","prefix","description","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","then","__generator","body","label","sent","trys","ops","y","g","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","undefined","__esModule","writable","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","awaitReturn","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","state","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","async","dispose","inner","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","message","__disposeResources","fail","hasError","rec","_default","R","ReflectApply","Function","ReflectOwnKeys","ownKeys","getOwnPropertyNames","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","arg","RangeError","getPrototypeOf","setMaxListeners","_getMaxListeners","that","getMaxListeners","type","doError","events","er","err","handler","arrayClone","_addListener","prepend","existing","newListener","warned","w","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","wrapped","bind","list","position","originalListener","spliceOne","keys","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","index","ret","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","_regeneratorRuntime","u","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","h","GeneratorFunction","GeneratorFunctionPrototype","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","_sent","dispatchException","abrupt","return","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","awrap","reverse","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_createForOfIteratorHelper","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","test","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","_return","throw","_require","require","BlobServiceClient","fileNameID","document","getElementsByName","containerNames","folderList","fileList","selectedFolder","selectedFile","containerIndex","blobSasUrl","blobServiceClient","main","reDrawView","_reDrawView","_callee2","_callee2$","_context2","setContainer","folderNames","fileNames","_x","_x2","_main","_callee3","containerNamePrefix","options","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","containerItem","select","option","text","_callee3$","_context3","log","includeDeleted","includeMetadata","includeSystem","listContainers","getElementById","createElement","createTextNode","appendChild","t0","selectContainerFunc","createFolderFunc","loadFileFunc","deleteFileFunc","uploadFileFunc","_ref","_callee","promises","filename","_iterator2","_step2","file","containerClient","blockBlobClient","_callee$","_context","files","getContainerClient","getBlockBlobClient","uploadData","all","_createFolderFunc","_callee4","content","blobName","uploadBlobResponse","_callee4$","_context4","upload","_selectContainerFunc","_callee5","_callee5$","_context5","selectedIndex","_loadFileFunc","_callee6","blobClient","downloadBlockBlobResponse","blobBody","downloaded","exportLink","blob","_callee6$","_context6","checked","getBlobClient","download","blobPromiseRead","Blob","href","URL","createObjectURL","click","_x3","_blobPromiseRead","_callee7","fileReader","_callee7$","_context7","FileReader","onloadend","ev","onerror","readAsArrayBuffer","_deleteFileFunc","_callee8","deleteBlobResponse","_callee8$","_context8","delete","_setContainer","_callee9","delimiter","iter","blobItem","_callee9$","_context9","listBlobsByHierarchy","listBlobsFlat","changeFolder","folderNameID","_folderNames","_callee10","folderID","parent","_iterator3","_step3","element","input","br","_callee10$","_context10","parentElement","remove","endsWith","_fileNames","_callee11","checkFolder","_iterator4","_step4","element2","_label","_input","_br","_callee11$","_context11","filesId","substr","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","deps","cached","cache","some","cb"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxvDA,IAAA,iBAAA,GAAA,OAAA;AACA,IAAA,SAAA,GAAA,OAAA;AAiBA,IAAA,UAAA,GAAA,OAAA;AAKqB,SAAA,QAAA,CAAA,sCAAA,OAAA,wBAAA,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,yBAAA,MAAA,IAAA,CAAA,CA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","file":"azureFiles.fe8d04fa.js","sourceRoot":"..","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\nconst ValidPhaseNames = new Set<PipelinePhase>([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\ninterface PipelineDescriptor {\n  policy: PipelinePolicy;\n  options: AddPolicyOptions;\n}\n\ninterface PolicyGraphNode {\n  policy: PipelinePolicy;\n  dependsOn: Set<PolicyGraphNode>;\n  dependants: Set<PolicyGraphNode>;\n  afterPhase?: Phase;\n}\n\ninterface Phase {\n  name: PipelinePhase | \"None\";\n  policies: Set<PolicyGraphNode>;\n  hasRun: boolean;\n  hasAfterPolicies: boolean;\n}\n\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline implements Pipeline {\n  private _policies: PipelineDescriptor[] = [];\n  private _orderedPolicies?: PipelinePolicy[];\n\n  private constructor(policies?: PipelineDescriptor[]) {\n    this._policies = policies?.slice(0) ?? [];\n    this._orderedPolicies = undefined;\n  }\n\n  public addPolicy(policy: PipelinePolicy, options: AddPolicyOptions = {}): void {\n    if (options.phase && options.afterPhase) {\n      throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n    }\n    if (options.phase && !ValidPhaseNames.has(options.phase)) {\n      throw new Error(`Invalid phase name: ${options.phase}`);\n    }\n    if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n      throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n    }\n    this._policies.push({\n      policy,\n      options,\n    });\n    this._orderedPolicies = undefined;\n  }\n\n  public removePolicy(options: { name?: string; phase?: string }): PipelinePolicy[] {\n    const removedPolicies: PipelinePolicy[] = [];\n\n    this._policies = this._policies.filter((policyDescriptor) => {\n      if (\n        (options.name && policyDescriptor.policy.name === options.name) ||\n        (options.phase && policyDescriptor.options.phase === options.phase)\n      ) {\n        removedPolicies.push(policyDescriptor.policy);\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this._orderedPolicies = undefined;\n\n    return removedPolicies;\n  }\n\n  public sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse> {\n    const policies = this.getOrderedPolicies();\n\n    const pipeline = policies.reduceRight<SendRequest>(\n      (next, policy) => {\n        return (req: PipelineRequest) => {\n          return policy.sendRequest(req, next);\n        };\n      },\n      (req: PipelineRequest) => httpClient.sendRequest(req),\n    );\n\n    return pipeline(request);\n  }\n\n  public getOrderedPolicies(): PipelinePolicy[] {\n    if (!this._orderedPolicies) {\n      this._orderedPolicies = this.orderPolicies();\n    }\n    return this._orderedPolicies;\n  }\n\n  public clone(): Pipeline {\n    return new HttpPipeline(this._policies);\n  }\n\n  public static create(): Pipeline {\n    return new HttpPipeline();\n  }\n\n  private orderPolicies(): PipelinePolicy[] {\n    /**\n     * The goal of this method is to reliably order pipeline policies\n     * based on their declared requirements when they were added.\n     *\n     * Order is first determined by phase:\n     *\n     * 1. Serialize Phase\n     * 2. Policies not in a phase\n     * 3. Deserialize Phase\n     * 4. Retry Phase\n     * 5. Sign Phase\n     *\n     * Within each phase, policies are executed in the order\n     * they were added unless they were specified to execute\n     * before/after other policies or after a particular phase.\n     *\n     * To determine the final order, we will walk the policy list\n     * in phase order multiple times until all dependencies are\n     * satisfied.\n     *\n     * `afterPolicies` are the set of policies that must be\n     * executed before a given policy. This requirement is\n     * considered satisfied when each of the listed policies\n     * have been scheduled.\n     *\n     * `beforePolicies` are the set of policies that must be\n     * executed after a given policy. Since this dependency\n     * can be expressed by converting it into a equivalent\n     * `afterPolicies` declarations, they are normalized\n     * into that form for simplicity.\n     *\n     * An `afterPhase` dependency is considered satisfied when all\n     * policies in that phase have scheduled.\n     *\n     */\n    const result: PipelinePolicy[] = [];\n\n    // Track all policies we know about.\n    const policyMap: Map<string, PolicyGraphNode> = new Map<string, PolicyGraphNode>();\n\n    function createPhase(name: PipelinePhase | \"None\"): Phase {\n      return {\n        name,\n        policies: new Set<PolicyGraphNode>(),\n        hasRun: false,\n        hasAfterPolicies: false,\n      };\n    }\n\n    // Track policies for each phase.\n    const serializePhase = createPhase(\"Serialize\");\n    const noPhase = createPhase(\"None\");\n    const deserializePhase = createPhase(\"Deserialize\");\n    const retryPhase = createPhase(\"Retry\");\n    const signPhase = createPhase(\"Sign\");\n\n    // a list of phases in order\n    const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n\n    // Small helper function to map phase name to each Phase\n    function getPhase(phase: PipelinePhase | undefined): Phase {\n      if (phase === \"Retry\") {\n        return retryPhase;\n      } else if (phase === \"Serialize\") {\n        return serializePhase;\n      } else if (phase === \"Deserialize\") {\n        return deserializePhase;\n      } else if (phase === \"Sign\") {\n        return signPhase;\n      } else {\n        return noPhase;\n      }\n    }\n\n    // First walk each policy and create a node to track metadata.\n    for (const descriptor of this._policies) {\n      const policy = descriptor.policy;\n      const options = descriptor.options;\n      const policyName = policy.name;\n      if (policyMap.has(policyName)) {\n        throw new Error(\"Duplicate policy names not allowed in pipeline\");\n      }\n      const node: PolicyGraphNode = {\n        policy,\n        dependsOn: new Set<PolicyGraphNode>(),\n        dependants: new Set<PolicyGraphNode>(),\n      };\n      if (options.afterPhase) {\n        node.afterPhase = getPhase(options.afterPhase);\n        node.afterPhase.hasAfterPolicies = true;\n      }\n      policyMap.set(policyName, node);\n      const phase = getPhase(options.phase);\n      phase.policies.add(node);\n    }\n\n    // Now that each policy has a node, connect dependency references.\n    for (const descriptor of this._policies) {\n      const { policy, options } = descriptor;\n      const policyName = policy.name;\n      const node = policyMap.get(policyName);\n      if (!node) {\n        throw new Error(`Missing node for policy ${policyName}`);\n      }\n\n      if (options.afterPolicies) {\n        for (const afterPolicyName of options.afterPolicies) {\n          const afterNode = policyMap.get(afterPolicyName);\n          if (afterNode) {\n            // Linking in both directions helps later\n            // when we want to notify dependants.\n            node.dependsOn.add(afterNode);\n            afterNode.dependants.add(node);\n          }\n        }\n      }\n      if (options.beforePolicies) {\n        for (const beforePolicyName of options.beforePolicies) {\n          const beforeNode = policyMap.get(beforePolicyName);\n          if (beforeNode) {\n            // To execute before another node, make it\n            // depend on the current node.\n            beforeNode.dependsOn.add(node);\n            node.dependants.add(beforeNode);\n          }\n        }\n      }\n    }\n\n    function walkPhase(phase: Phase): void {\n      phase.hasRun = true;\n      // Sets iterate in insertion order\n      for (const node of phase.policies) {\n        if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n          // If this node is waiting on a phase to complete,\n          // we need to skip it for now.\n          // Even if the phase is empty, we should wait for it\n          // to be walked to avoid re-ordering policies.\n          continue;\n        }\n        if (node.dependsOn.size === 0) {\n          // If there's nothing else we're waiting for, we can\n          // add this policy to the result list.\n          result.push(node.policy);\n          // Notify anything that depends on this policy that\n          // the policy has been scheduled.\n          for (const dependant of node.dependants) {\n            dependant.dependsOn.delete(node);\n          }\n          policyMap.delete(node.policy.name);\n          phase.policies.delete(node);\n        }\n      }\n    }\n\n    function walkPhases(): void {\n      for (const phase of orderedPhases) {\n        walkPhase(phase);\n        // if the phase isn't complete\n        if (phase.policies.size > 0 && phase !== noPhase) {\n          if (!noPhase.hasRun) {\n            // Try running noPhase to see if that unblocks this phase next tick.\n            // This can happen if a phase that happens before noPhase\n            // is waiting on a noPhase policy to complete.\n            walkPhase(noPhase);\n          }\n          // Don't proceed to the next phase until this phase finishes.\n          return;\n        }\n\n        if (phase.hasAfterPolicies) {\n          // Run any policies unblocked by this phase\n          walkPhase(noPhase);\n        }\n      }\n    }\n\n    // Iterate until we've put every node in the result list.\n    let iteration = 0;\n    while (policyMap.size > 0) {\n      iteration++;\n      const initialResultLength = result.length;\n      // Keep walking each phase in order until we can order every node.\n      walkPhases();\n      // The result list *should* get at least one larger each time\n      // after the first full pass.\n      // Otherwise, we're going to loop forever.\n      if (result.length <= initialResultLength && iteration > 1) {\n        throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return HttpPipeline.create();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function log(...args: any[]): void {\n  if (args.length > 0) {\n    const firstArg = String(args[0]);\n    if (firstArg.includes(\":error\")) {\n      console.error(...args);\n    } else if (firstArg.includes(\":warning\")) {\n      console.warn(...args);\n    } else if (firstArg.includes(\":info\")) {\n      console.info(...args);\n    } else if (firstArg.includes(\":verbose\")) {\n      console.debug(...args);\n    } else {\n      console.debug(...args);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport { log } from \"./log.common.js\";\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport debug, { type Debugger } from \"./debug.js\";\nexport type { Debugger } from \"./debug.js\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \",\n      )}.`,\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`,\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\"),\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level,\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger): boolean {\n  return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Options related to abort controller.\n */\nexport interface AbortOptions {\n  /**\n   * The abortSignal associated with containing operation.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The abort error message associated with containing operation.\n   */\n  abortErrorMsg?: string;\n}\n\n/**\n * Represents a function that returns a promise that can be aborted.\n */\nexport type AbortablePromiseBuilder<T> = (abortOptions: {\n  abortSignal?: AbortSignalLike;\n}) => Promise<T>;\n\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nexport async function cancelablePromiseRace<T extends unknown[]>(\n  abortablePromiseBuilders: AbortablePromiseBuilder<T[number]>[],\n  options?: { abortSignal?: AbortSignalLike },\n): Promise<T[number]> {\n  const aborter = new AbortController();\n  function abortHandler(): void {\n    aborter.abort();\n  }\n  options?.abortSignal?.addEventListener(\"abort\", abortHandler);\n  try {\n    return await Promise.race(\n      abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })),\n    );\n  } finally {\n    aborter.abort();\n    options?.abortSignal?.removeEventListener(\"abort\", abortHandler);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  switch (format) {\n    case \"utf-8\":\n      return uint8ArrayToUtf8String(bytes);\n    case \"base64\":\n      return uint8ArrayToBase64(bytes);\n    case \"base64url\":\n      return uint8ArrayToBase64Url(bytes);\n    case \"hex\":\n      return uint8ArrayToHexString(bytes);\n  }\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  switch (format) {\n    case \"utf-8\":\n      return utf8StringToUint8Array(value);\n    case \"base64\":\n      return base64ToUint8Array(value);\n    case \"base64url\":\n      return base64UrlToUint8Array(value);\n    case \"hex\":\n      return hexStringToUint8Array(value);\n  }\n}\n\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(bytes: Uint8Array): string {\n  return btoa([...bytes].map((x) => String.fromCharCode(x)).join(\"\"));\n}\n\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes: Uint8Array): string {\n  return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(bytes: Uint8Array): string {\n  const decoder = new TextDecoder();\n  const dataString = decoder.decode(bytes);\n  return dataString;\n}\n\n/**\n * Decodes a Uint8Array into a hex string\n * @internal\n */\nexport function uint8ArrayToHexString(bytes: Uint8Array): string {\n  return [...bytes].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value: string): Uint8Array {\n  return new TextEncoder().encode(value);\n}\n\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value: string): Uint8Array {\n  return new Uint8Array([...atob(value)].map((x) => x.charCodeAt(0)));\n}\n\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value: string): Uint8Array {\n  const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  return base64ToUint8Array(base64String);\n}\n\nconst hexDigits = new Set(\"0123456789abcdefABCDEF\");\n\n/**\n * Encodes a hex string into a Uint8Array\n * @internal\n */\nexport function hexStringToUint8Array(value: string): Uint8Array {\n  // If value has odd length, the last character will be ignored, consistent with NodeJS Buffer behavior\n  const bytes = new Uint8Array(value.length / 2);\n  for (let i = 0; i < value.length / 2; ++i) {\n    const highNibble = value[2 * i];\n    const lowNibble = value[2 * i + 1];\n    if (!hexDigits.has(highNibble) || !hexDigits.has(lowNibble)) {\n      // Replicate Node Buffer behavior by exiting early when we encounter an invalid byte\n      return bytes.slice(0, i);\n    }\n\n    bytes[i] = parseInt(`${highNibble}${lowNibble}`, 16);\n  }\n\n  return bytes;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./bytesEncoding.common.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { stringToUint8Array, uint8ArrayToString } from \"./bytesEncoding.js\";\n\n// stubs for browser self.crypto\ninterface JsonWebKey {}\ninterface CryptoKey {}\ntype KeyUsage =\n  | \"decrypt\"\n  | \"deriveBits\"\n  | \"deriveKey\"\n  | \"encrypt\"\n  | \"sign\"\n  | \"unwrapKey\"\n  | \"verify\"\n  | \"wrapKey\";\ninterface Algorithm {\n  name: string;\n}\ninterface SubtleCrypto {\n  importKey(\n    format: string,\n    keyData: JsonWebKey,\n    algorithm: HmacImportParams,\n    extractable: boolean,\n    usage: KeyUsage[],\n  ): Promise<CryptoKey>;\n  sign(\n    algorithm: HmacImportParams,\n    key: CryptoKey,\n    data: ArrayBufferView | ArrayBuffer,\n  ): Promise<ArrayBuffer>;\n  digest(algorithm: Algorithm, data: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer>;\n}\ninterface Crypto {\n  readonly subtle: SubtleCrypto;\n  getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n}\ndeclare const self: {\n  crypto: Crypto;\n};\ninterface HmacImportParams {\n  name: string;\n  hash: Algorithm;\n  length?: number;\n}\n\nlet subtleCrypto: SubtleCrypto | undefined;\n\n/**\n * Returns a cached reference to the Web API crypto.subtle object.\n * @internal\n */\nfunction getCrypto(): SubtleCrypto {\n  if (subtleCrypto) {\n    return subtleCrypto;\n  }\n\n  if (!self.crypto || !self.crypto.subtle) {\n    throw new Error(\"Your browser environment does not support cryptography functions.\");\n  }\n\n  subtleCrypto = self.crypto.subtle;\n  return subtleCrypto;\n}\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport async function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  const crypto = getCrypto();\n  const keyBytes = stringToUint8Array(key, \"base64\");\n  const stringToSignBytes = stringToUint8Array(stringToSign, \"utf-8\");\n\n  const cryptoKey = await crypto.importKey(\n    \"raw\",\n    keyBytes,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    },\n    false,\n    [\"sign\"],\n  );\n  const signature = await crypto.sign(\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    },\n    cryptoKey,\n    stringToSignBytes,\n  );\n\n  return uint8ArrayToString(new Uint8Array(signature), encoding);\n}\n\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport async function computeSha256Hash(\n  content: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  const contentBytes = stringToUint8Array(content, \"utf-8\");\n  const digest = await getCrypto().digest({ name: \"SHA-256\" }, contentBytes);\n\n  return uint8ArrayToString(new Uint8Array(digest), encoding);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./sha256.common.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[],\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName,\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID(): string {\n  let uuid = \"\";\n  for (let i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    const randomNumber = Math.floor(Math.random() * 16);\n    // Set the UUID version to 4 in the 13th position\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += (randomNumber & 0x3) | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    }\n    // Add hyphens to the UUID string at the appropriate positions\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n  return uuid;\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return generateUUID();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { generateUUID } from \"./uuidUtils.common.js\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nexport const isNode = isNodeLike;\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { type UnknownObject, isObject } from \"@azure/core-util\";\n\n/**\n * @internal\n */\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\n/**\n * @internal\n */\nexport class Sanitizer {\n  private allowedHeaderNames: Set<string>;\n  private allowedQueryParameters: Set<string>;\n\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = [],\n  }: SanitizerOptions = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"headers\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2,\n    );\n  }\n\n  public sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null || value === \"\") {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n  private sanitizeHeaders(obj: UnknownObject): UnknownObject {\n    const sanitized: UnknownObject = {};\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n    return sanitized;\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  const logger = options.logger ?? coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  return {\n    name: logPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!logger.enabled) {\n        return next(request);\n      }\n\n      logger(`Request: ${sanitizer.sanitize(request)}`);\n\n      const response = await next(request);\n\n      logger(`Response status code: ${response.status}`);\n      logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n\n      return response;\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  const { maxRetries = 20 } = options;\n  return {\n    name: redirectPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return handleRedirect(next, response, maxRetries);\n    },\n  };\n}\n\nasync function handleRedirect(\n  next: SendRequest,\n  response: PipelineResponse,\n  maxRetries: number,\n  currentRetries: number = 0,\n): Promise<PipelineResponse> {\n  const { request, status, headers } = response;\n  const locationHeader = headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    currentRetries < maxRetries\n  ) {\n    const url = new URL(locationHeader, request.url);\n    request.url = url.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      request.headers.delete(\"Content-Length\");\n      delete request.body;\n    }\n\n    request.headers.delete(\"Authorization\");\n\n    const res = await next(request);\n    return handleRedirect(next, res, maxRetries, currentRetries + 1);\n  }\n\n  return response;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"x-ms-useragent\";\n}\n\ninterface BrowserBrand {\n  brand: string;\n  version: string;\n}\n\ninterface NavigatorEx extends Navigator {\n  userAgentData?: {\n    brands: BrowserBrand[];\n    mobile: boolean;\n    platform?: string;\n    getHighEntropyValues: (hints: string[]) => Promise<{\n      architecture: string;\n      bitness: string;\n      brands: BrowserBrand[];\n      formFactor: string;\n      fullVersionList: BrowserBrand[];\n      mobile: boolean;\n      model: string;\n      platform: string;\n      platformVersion: string;\n      wow64: boolean;\n    }>;\n  };\n}\n\ndeclare const globalThis: {\n  navigator?: NavigatorEx;\n  EdgeRuntime?: unknown;\n};\n\nfunction getBrowserInfo(userAgent: string): BrowserBrand | undefined {\n  const browserRegexes = [\n    { name: \"Firefox\", regex: /Firefox\\/([\\d.]+)/ },\n    { name: \"Safari\", regex: /Version\\/([\\d.]+).*Safari/ },\n  ];\n\n  for (const browser of browserRegexes) {\n    const match = userAgent.match(browser.regex);\n    if (match) {\n      return { brand: browser.name, version: match[1] };\n    }\n  }\n\n  return undefined;\n}\n\nfunction getBrandVersionString(brands: BrowserBrand[]): BrowserBrand | undefined {\n  const brandOrder = [\"Google Chrome\", \"Microsoft Edge\", \"Opera\", \"Brave\", \"Chromium\"];\n  for (const brand of brandOrder) {\n    const foundBrand = brands.find((b) => b.brand === brand);\n    if (foundBrand) {\n      return foundBrand;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  const localNavigator = globalThis.navigator as NavigatorEx;\n  let osPlatform = \"unknown\";\n  if (localNavigator?.userAgentData) {\n    const entropyValues = await localNavigator.userAgentData.getHighEntropyValues([\n      \"architecture\",\n      \"platformVersion\",\n    ]);\n    osPlatform = `${entropyValues.architecture}-${entropyValues.platform}-${entropyValues.platformVersion}`;\n\n    // Get the brand and version\n    const brand = getBrandVersionString(localNavigator.userAgentData.brands);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (localNavigator?.platform) {\n    osPlatform = localNavigator.platform;\n    const brand = getBrowserInfo(localNavigator.userAgent);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (typeof globalThis.EdgeRuntime === \"string\") {\n    map.set(\"EdgeRuntime\", globalThis.EdgeRuntime);\n  }\n\n  map.set(\"OS\", osPlatform);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.16.2\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\nexport function isWebReadableStream(x: unknown): x is ReadableStream {\n  return Boolean(\n    x &&\n      typeof (x as ReadableStream).getReader === \"function\" &&\n      typeof (x as ReadableStream).tee === \"function\",\n  );\n}\n\nexport function isReadableStream(x: unknown): x is ReadableStream | NodeJS.ReadableStream {\n  return isNodeReadableStream(x) || isWebReadableStream(x);\n}\n\nexport function isBlob(x: unknown): x is Blob {\n  return typeof (x as Blob).stream === \"function\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isNodeLike } from \"@azure/core-util\";\nimport { isNodeReadableStream } from \"./typeGuards.js\";\n\n/**\n * Options passed into createFile specifying metadata about the file.\n */\nexport interface CreateFileOptions {\n  /**\n   * The MIME type of the file.\n   */\n  type?: string;\n\n  /**\n   * Last modified time of the file as a UNIX timestamp.\n   * This will default to the current date.\n   */\n  lastModified?: number;\n\n  /**\n   * relative path of this file when uploading a directory.\n   */\n  webkitRelativePath?: string;\n}\n\n/**\n * Extra options for createFile when a stream is being passed in.\n */\nexport interface CreateFileFromStreamOptions extends CreateFileOptions {\n  /**\n   * Size of the file represented by the stream in bytes.\n   *\n   * This will be used by the pipeline when calculating the Content-Length header\n   * for the overall request.\n   */\n  size?: number;\n}\n\nconst unimplementedMethods = {\n  arrayBuffer: () => {\n    throw new Error(\"Not implemented\");\n  },\n  slice: () => {\n    throw new Error(\"Not implemented\");\n  },\n  text: () => {\n    throw new Error(\"Not implemented\");\n  },\n};\n\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent: unique symbol = Symbol(\"rawContent\");\n\n/**\n * Type signature of a blob-like object with a raw content property.\n */\ninterface RawContent {\n  [rawContent](): Uint8Array | NodeJS.ReadableStream | ReadableStream<Uint8Array>;\n}\n\nfunction hasRawContent(x: unknown): x is RawContent {\n  return typeof (x as RawContent)[rawContent] === \"function\";\n}\n\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nexport function getRawContent(\n  blob: Blob,\n): NodeJS.ReadableStream | ReadableStream<Uint8Array> | Uint8Array {\n  if (hasRawContent(blob)) {\n    return blob[rawContent]();\n  } else {\n    return blob.stream();\n  }\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(\n  stream: () => ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n  name: string,\n  options: CreateFileFromStreamOptions = {},\n): File {\n  return {\n    ...unimplementedMethods,\n    type: options.type ?? \"\",\n    lastModified: options.lastModified ?? new Date().getTime(),\n    webkitRelativePath: options.webkitRelativePath ?? \"\",\n    size: options.size ?? -1,\n    name,\n    stream: () => {\n      const s = stream();\n      if (isNodeReadableStream(s)) {\n        throw new Error(\n          \"Not supported: a Node stream was provided as input to createFileFromStream.\",\n        );\n      }\n\n      return s;\n    },\n    [rawContent]: stream,\n  } as File & RawContent;\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(\n  content: Uint8Array,\n  name: string,\n  options: CreateFileOptions = {},\n): File {\n  if (isNodeLike) {\n    return {\n      ...unimplementedMethods,\n      type: options.type ?? \"\",\n      lastModified: options.lastModified ?? new Date().getTime(),\n      webkitRelativePath: options.webkitRelativePath ?? \"\",\n      size: content.byteLength,\n      name,\n      arrayBuffer: async () => content.buffer,\n      stream: () => new Blob([content]).stream(),\n      [rawContent]: () => content,\n    } as File & RawContent;\n  } else {\n    return new File([content], name, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getRawContent } from \"./file.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./typeGuards.js\";\n\n/**\n * Drain the content of the given ReadableStream into a Blob.\n * The blob's content may end up in memory or on disk dependent on size.\n */\nfunction drain(stream: ReadableStream<Uint8Array>): Promise<Blob> {\n  return new Response(stream).blob();\n}\n\nasync function toBlobPart(\n  source: ReadableStream<Uint8Array> | Blob | Uint8Array,\n): Promise<BlobPart> {\n  if (source instanceof Blob || source instanceof Uint8Array) {\n    return source;\n  }\n\n  if (isWebReadableStream(source)) {\n    return drain(source);\n  }\n\n  // If it's not a true Blob, and it's not a Uint8Array, we can assume the source\n  // is a fake File created by createFileFromStream and we can get the original stream\n  // using getRawContent.\n  const rawContent = getRawContent(source);\n\n  // Shouldn't happen but guard for it anyway\n  if (isNodeReadableStream(rawContent)) {\n    throw new Error(\n      \"Encountered unexpected type. In the browser, `concat` supports Web ReadableStream, Blob, Uint8Array, and files created using `createFile` only.\",\n    );\n  }\n\n  return toBlobPart(rawContent);\n}\n\n/**\n * Accepted binary data types for concat\n *\n * @internal\n */\ntype ConcatSource = ReadableStream<Uint8Array> | Blob | Uint8Array;\n\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(\n  sources: (ConcatSource | (() => ConcatSource))[],\n): Promise<(() => NodeJS.ReadableStream) | Blob> {\n  const parts = [];\n  for (const source of sources) {\n    parts.push(await toBlobPart(typeof source === \"function\" ? source() : source));\n  }\n\n  return new Blob(parts);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./concat.common.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { randomUUID, stringToUint8Array } from \"@azure/core-util\";\nimport type { BodyPart, HttpHeaders, PipelineRequest, PipelineResponse } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { concat } from \"../util/concat.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\n\nfunction generateBoundary(): string {\n  return `----AzSDKFormBoundary${randomUUID()}`;\n}\n\nfunction encodeHeaders(headers: HttpHeaders): string {\n  let result = \"\";\n  for (const [key, value] of headers) {\n    result += `${key}: ${value}\\r\\n`;\n  }\n  return result;\n}\n\nfunction getLength(\n  source:\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream,\n): number | undefined {\n  if (source instanceof Uint8Array) {\n    return source.byteLength;\n  } else if (isBlob(source)) {\n    // if was created using createFile then -1 means we have an unknown size\n    return source.size === -1 ? undefined : source.size;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getTotalLength(\n  sources: (\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream\n  )[],\n): number | undefined {\n  let total = 0;\n  for (const source of sources) {\n    const partLength = getLength(source);\n    if (partLength === undefined) {\n      return undefined;\n    } else {\n      total += partLength;\n    }\n  }\n  return total;\n}\n\nasync function buildRequestBody(\n  request: PipelineRequest,\n  parts: BodyPart[],\n  boundary: string,\n): Promise<void> {\n  const sources = [\n    stringToUint8Array(`--${boundary}`, \"utf-8\"),\n    ...parts.flatMap((part) => [\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      part.body,\n      stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n    ]),\n    stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n  ];\n\n  const contentLength = getTotalLength(sources);\n  if (contentLength) {\n    request.headers.set(\"Content-Length\", contentLength);\n  }\n\n  request.body = await concat(sources);\n}\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\n\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`,\n);\n\nfunction assertValidBoundary(boundary: string): void {\n  if (boundary.length > maxBoundaryLength) {\n    throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n  }\n\n  if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n    throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n  }\n}\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  return {\n    name: multipartPolicyName,\n    async sendRequest(request, next): Promise<PipelineResponse> {\n      if (!request.multipartBody) {\n        return next(request);\n      }\n\n      if (request.body) {\n        throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n      }\n\n      let boundary = request.multipartBody.boundary;\n\n      const contentTypeHeader = request.headers.get(\"Content-Type\") ?? \"multipart/mixed\";\n      const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n      if (!parsedHeader) {\n        throw new Error(\n          `Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`,\n        );\n      }\n\n      const [, contentType, parsedBoundary] = parsedHeader;\n      if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n        throw new Error(\n          `Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`,\n        );\n      }\n\n      boundary ??= parsedBoundary;\n      if (boundary) {\n        assertValidBoundary(boundary);\n      } else {\n        boundary = generateBoundary();\n      }\n      request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n      await buildRequestBody(request, request.multipartBody.parts, boundary);\n\n      request.multipartBody = undefined;\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\n\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function decompressResponsePolicy(): never {\n  throw new Error(\"decompressResponsePolicy is not supported in browser environment\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, type AbortSignalLike } from \"@azure/abort-controller\";\nimport type { PipelineResponse } from \"../interfaces.js\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  value?: T,\n  options?: {\n    abortSignal?: AbortSignalLike;\n    abortErrorMsg?: string;\n  },\n): Promise<T | void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(\n        new AbortError(options?.abortErrorMsg ? options?.abortErrorMsg : StandardAbortMessage),\n      );\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(\n  response: PipelineResponse,\n  headerName: string,\n): number | undefined {\n  const value = response.headers.get(headerName);\n  if (!value) return;\n  const valueAsNum = Number(value);\n  if (Number.isNaN(valueAsNum)) return;\n  return valueAsNum;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineResponse } from \"../index.js\";\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\n\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response?: PipelineResponse): number | undefined {\n  if (!(response && [429, 503].includes(response.status))) return undefined;\n  try {\n    // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n    for (const header of AllRetryAfterHeaders) {\n      const retryAfterValue = parseHeaderValueAsNumber(response, header);\n      if (retryAfterValue === 0 || retryAfterValue) {\n        // \"Retry-After\" header ==> seconds\n        // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n        const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n        return retryAfterValue * multiplyingFactor; // in milli-seconds\n      }\n    }\n\n    // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n    const retryAfterHeader = response.headers.get(RetryAfterHeader);\n    if (!retryAfterHeader) return;\n\n    const date = Date.parse(retryAfterHeader);\n    const diff = date - Date.now();\n    // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n    return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n  } catch (e: any) {\n    return undefined;\n  }\n}\n\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response?: PipelineResponse): boolean {\n  return Number.isFinite(getRetryAfterInMs(response));\n}\n\nexport function throttlingRetryStrategy(): RetryStrategy {\n  return {\n    name: \"throttlingRetryStrategy\",\n    retry({ response }) {\n      const retryAfterInMs = getRetryAfterInMs(response);\n      if (!Number.isFinite(retryAfterInMs)) {\n        return { skipStrategy: true };\n      }\n      return {\n        retryAfterInMs,\n      };\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\nimport { getRandomIntegerInclusive } from \"@azure/core-util\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(\n  options: {\n    /**\n     * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n     * (1 second.) The delay increases exponentially with each retry up to a maximum\n     * specified by maxRetryDelayInMs.\n     */\n    retryDelayInMs?: number;\n\n    /**\n     * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n     * to 64000 (64 seconds).\n     */\n    maxRetryDelayInMs?: number;\n\n    /**\n     * If true it won't retry if it received a system error.\n     */\n    ignoreSystemErrors?: boolean;\n\n    /**\n     * If true it won't retry if it received a non-fatal HTTP status code.\n     */\n    ignoreHttpStatusCodes?: boolean;\n  } = {},\n): RetryStrategy {\n  const retryInterval = options.retryDelayInMs ?? DEFAULT_CLIENT_RETRY_INTERVAL;\n  const maxRetryInterval = options.maxRetryDelayInMs ?? DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n\n  let retryAfterInMs = retryInterval;\n\n  return {\n    name: \"exponentialRetryStrategy\",\n    retry({ retryCount, response, responseError }) {\n      const matchedSystemError = isSystemError(responseError);\n      const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n\n      const isExponential = isExponentialRetryResponse(response);\n      const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n      const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n\n      if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n        return { skipStrategy: true };\n      }\n\n      if (responseError && !matchedSystemError && !isExponential) {\n        return { errorToThrow: responseError };\n      }\n\n      // Exponentially increase the delay each time\n      const exponentialDelay = retryAfterInMs * Math.pow(2, retryCount);\n      // Don't let the delay exceed the maximum\n      const clampedExponentialDelay = Math.min(maxRetryInterval, exponentialDelay);\n      // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n      // that retries across multiple clients don't occur simultaneously.\n      retryAfterInMs =\n        clampedExponentialDelay / 2 + getRandomIntegerInclusive(0, clampedExponentialDelay / 2);\n      return { retryAfterInMs };\n    },\n  };\n}\n\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response?: PipelineResponse): boolean {\n  return Boolean(\n    response &&\n      response.status !== undefined &&\n      (response.status >= 500 || response.status === 408) &&\n      response.status !== 501 &&\n      response.status !== 505,\n  );\n}\n\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err?: RestError): boolean {\n  if (!err) {\n    return false;\n  }\n  return (\n    err.code === \"ETIMEDOUT\" ||\n    err.code === \"ESOCKETTIMEDOUT\" ||\n    err.code === \"ECONNREFUSED\" ||\n    err.code === \"ECONNRESET\" ||\n    err.code === \"ENOENT\" ||\n    err.code === \"ENOTFOUND\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { delay } from \"../util/helpers.js\";\nimport { type AzureLogger, createClientLogger } from \"@azure/logger\";\nimport type { RetryStrategy } from \"../retryStrategies/retryStrategy.js\";\nimport type { RestError } from \"../restError.js\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  const logger = options.logger || retryPolicyLogger;\n  return {\n    name: retryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let response: PipelineResponse | undefined;\n      let responseError: RestError | undefined;\n      let retryCount = -1;\n\n      // eslint-disable-next-line no-constant-condition\n      retryRequest: while (true) {\n        retryCount += 1;\n        response = undefined;\n        responseError = undefined;\n\n        try {\n          logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n          response = await next(request);\n          logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n        } catch (e: any) {\n          logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n\n          // RestErrors are valid targets for the retry strategies.\n          // If none of the retry strategies can work with them, they will be thrown later in this policy.\n          // If the received error is not a RestError, it is immediately thrown.\n          responseError = e as RestError;\n          if (!e || responseError.name !== \"RestError\") {\n            throw e;\n          }\n\n          response = responseError.response;\n        }\n\n        if (request.abortSignal?.aborted) {\n          logger.error(`Retry ${retryCount}: Request aborted.`);\n          const abortError = new AbortError();\n          throw abortError;\n        }\n\n        if (retryCount >= (options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT)) {\n          logger.info(\n            `Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`,\n          );\n          if (responseError) {\n            throw responseError;\n          } else if (response) {\n            return response;\n          } else {\n            throw new Error(\"Maximum retries reached with no response or error to throw\");\n          }\n        }\n\n        logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n\n        strategiesLoop: for (const strategy of strategies) {\n          const strategyLogger = strategy.logger || retryPolicyLogger;\n          strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n\n          const modifiers = strategy.retry({\n            retryCount,\n            response,\n            responseError,\n          });\n\n          if (modifiers.skipStrategy) {\n            strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n            continue strategiesLoop;\n          }\n\n          const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n\n          if (errorToThrow) {\n            strategyLogger.error(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`,\n              errorToThrow,\n            );\n            throw errorToThrow;\n          }\n\n          if (retryAfterInMs || retryAfterInMs === 0) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`,\n            );\n            await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n            continue retryRequest;\n          }\n\n          if (redirectTo) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`,\n            );\n            request.url = redirectTo;\n            continue retryRequest;\n          }\n        }\n\n        if (responseError) {\n          logger.info(\n            `None of the retry strategies could work with the received error. Throwing it.`,\n          );\n          throw responseError;\n        }\n        if (response) {\n          logger.info(\n            `None of the retry strategies could work with the received response. Returning it.`,\n          );\n          return response;\n        }\n\n        // If all the retries skip and there's no response,\n        // we're still in the retry loop, so a new request will be sent\n        // until `maxRetries` is reached.\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: defaultRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { HttpHeaders, RawHttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\ninterface HeaderEntry {\n  name: string;\n  value: string;\n}\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase();\n}\n\nfunction* headerIterator(map: Map<string, HeaderEntry>): IterableIterator<[string, string]> {\n  for (const entry of map.values()) {\n    yield [entry.name, entry.value];\n  }\n}\n\nclass HttpHeadersImpl implements HttpHeaders {\n  private readonly _headersMap: Map<string, HeaderEntry>;\n\n  constructor(rawHeaders?: RawHttpHeaders | RawHttpHeadersInput) {\n    this._headersMap = new Map<string, HeaderEntry>();\n    if (rawHeaders) {\n      for (const headerName of Object.keys(rawHeaders)) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   * @param value - The value of the header to set.\n   */\n  public set(name: string, value: string | number | boolean): void {\n    this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param name - The name of the header. This value is case-insensitive.\n   */\n  public get(name: string): string | undefined {\n    return this._headersMap.get(normalizeName(name))?.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   */\n  public has(name: string): boolean {\n    return this._headersMap.has(normalizeName(name));\n  }\n\n  /**\n   * Remove the header with the provided headerName.\n   * @param name - The name of the header to remove.\n   */\n  public delete(name: string): void {\n    this._headersMap.delete(normalizeName(name));\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJSON(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const entry of this._headersMap.values()) {\n        result[entry.name] = entry.value;\n      }\n    } else {\n      for (const [normalizedName, entry] of this._headersMap) {\n        result[normalizedName] = entry.value;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJSON({ preserveCase: true }));\n  }\n\n  /**\n   * Iterate over tuples of header [name, value] pairs.\n   */\n  [Symbol.iterator](): Iterator<[string, string]> {\n    return headerIterator(this._headersMap);\n  }\n}\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return new HttpHeadersImpl(rawHeaders);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isNodeLike, stringToUint8Array } from \"@azure/core-util\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport type {\n  BodyPart,\n  FormDataMap,\n  FormDataValue,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\nfunction formDataToFormDataMap(formData: FormData): FormDataMap {\n  const formDataMap: FormDataMap = {};\n  for (const [key, value] of formData.entries()) {\n    formDataMap[key] ??= [];\n    (formDataMap[key] as FormDataValue[]).push(value);\n  }\n  return formDataMap;\n}\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n        request.formData = formDataToFormDataMap(request.body);\n        request.body = undefined;\n      }\n\n      if (request.formData) {\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = wwwFormUrlEncode(request.formData);\n        } else {\n          await prepareFormData(request.formData, request);\n        }\n\n        request.formData = undefined;\n      }\n      return next(request);\n    },\n  };\n}\n\nfunction wwwFormUrlEncode(formData: FormDataMap): string {\n  const urlSearchParams = new URLSearchParams();\n  for (const [key, value] of Object.entries(formData)) {\n    if (Array.isArray(value)) {\n      for (const subValue of value) {\n        urlSearchParams.append(key, subValue.toString());\n      }\n    } else {\n      urlSearchParams.append(key, value.toString());\n    }\n  }\n  return urlSearchParams.toString();\n}\n\nasync function prepareFormData(formData: FormDataMap, request: PipelineRequest): Promise<void> {\n  // validate content type (multipart/form-data)\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n    // content type is specified and is not multipart/form-data. Exit.\n    return;\n  }\n\n  request.headers.set(\"Content-Type\", contentType ?? \"multipart/form-data\");\n\n  // set body to MultipartRequestBody using content from FormDataMap\n  const parts: BodyPart[] = [];\n\n  for (const [fieldName, values] of Object.entries(formData)) {\n    for (const value of Array.isArray(values) ? values : [values]) {\n      if (typeof value === \"string\") {\n        parts.push({\n          headers: createHttpHeaders({\n            \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n          }),\n          body: stringToUint8Array(value, \"utf-8\"),\n        });\n      } else if (value === undefined || value === null || typeof value !== \"object\") {\n        throw new Error(\n          `Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`,\n        );\n      } else {\n        // using || instead of ?? here since if value.name is empty we should create a file name\n        const fileName = (value as File).name || \"blob\";\n        const headers = createHttpHeaders();\n        headers.set(\n          \"Content-Disposition\",\n          `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`,\n        );\n\n        // again, || is used since an empty value.type means the content type is unset\n        headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n\n        parts.push({\n          headers,\n          body: value,\n        });\n      }\n    }\n  }\n  request.multipartBody = { parts };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const proxyPolicyName = \"proxyPolicy\";\nconst errorMessage = \"proxyPolicy is not supported in browser environment\";\n\nexport function getDefaultProxySettings(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function proxyPolicy(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * A function to reset the cached agents.\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n * @internal\n */\nexport function resetCachedProxyAgents(): never {\n  throw new Error(errorMessage);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./proxyPolicy.common.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\",\n): PipelinePolicy {\n  return {\n    name: setClientRequestIdPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(requestIdHeaderName)) {\n        request.headers.set(requestIdHeaderName, request.requestId);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return {\n    name: tlsPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define a request tlsSettings, honor those over the client level one\n      if (!req.tlsSettings) {\n        req.tlsSettings = tlsSettings;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Instrumenter } from \"./interfaces.js\";\n\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n  instrumenterImplementation: undefined as Instrumenter | undefined,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const custom = {};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./inspect.common.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isError } from \"@azure/core-util\";\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n    this.request = options.request;\n    this.response = options.response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n\n/**\n * Options to configure the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * String prefix to add to the user agent logged as metadata\n   * on the generated Span.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options: TracingPolicyOptions = {}): PipelinePolicy {\n  const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n  const sanitizer = new Sanitizer({\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  const tracingClient = tryCreateTracingClient();\n\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!tracingClient || !request.tracingOptions?.tracingContext) {\n        return next(request);\n      }\n\n      const userAgent = await userAgentPromise;\n\n      const spanAttributes = {\n        \"http.url\": sanitizer.sanitizeUrl(request.url),\n        \"http.method\": request.method,\n        \"http.user_agent\": userAgent,\n        requestId: request.requestId,\n      };\n      if (userAgent) {\n        spanAttributes[\"http.user_agent\"] = userAgent;\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      }\n    },\n  };\n}\n\nfunction tryCreateTracingClient(): TracingClient | undefined {\n  try {\n    return createTracingClient({\n      namespace: \"\",\n      packageName: \"@azure/core-rest-pipeline\",\n      packageVersion: SDK_VERSION,\n    });\n  } catch (e: unknown) {\n    logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n  spanAttributes: Record<string, unknown>,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      `HTTP ${request.method}`,\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n        spanAttributes,\n      },\n    );\n\n    // If the span is not recording, don't do any more work.\n    if (!span.isRecording()) {\n      span.end();\n      return undefined;\n    }\n\n    // set headers\n    const headers = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions.tracingContext,\n    );\n    for (const [key, value] of Object.entries(headers)) {\n      request.headers.set(key, value);\n    }\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryProcessError(span: TracingSpan, error: unknown): void {\n  try {\n    span.setStatus({\n      status: \"error\",\n      error: isError(error) ? error : undefined,\n    });\n    if (isRestError(error) && error.statusCode) {\n      span.setAttribute(\"http.status_code\", error.statusCode);\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n\nfunction tryProcessResponse(span: TracingSpan, response: PipelineResponse): void {\n  try {\n    span.setAttribute(\"http.status_code\", response.status);\n    const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n    if (serviceRequestId) {\n      span.setAttribute(\"serviceRequestId\", serviceRequestId);\n    }\n    span.setStatus({\n      status: \"success\",\n    });\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { PipelineRetryOptions, TlsSettings, ProxySettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy(options.telemetryOptions?.clientRequestIdHeaderName));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  pipeline.addPolicy(tracingPolicy({ ...options.userAgentOptions, ...options.loggingOptions }), {\n    afterPhase: \"Retry\",\n  });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type {\n  HttpClient,\n  HttpHeaders as PipelineHeaders,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { RestError } from \"./restError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./util/typeGuards.js\";\n\n/**\n * Checks if the body is a Blob or Blob-like\n */\nfunction isBlob(body: unknown): body is Blob {\n  // File objects count as a type of Blob, so we want to use instanceof explicitly\n  return (typeof Blob === \"function\" || typeof Blob === \"object\") && body instanceof Blob;\n}\n\n/**\n * A HttpClient implementation that uses window.fetch to send HTTP requests.\n * @internal\n */\nclass FetchHttpClient implements HttpClient {\n  /**\n   * Makes a request over an underlying transport layer and returns the response.\n   * @param request - The request to be made.\n   */\n  public async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n\n    if (isInsecure && !request.allowInsecureConnection) {\n      throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n    }\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    try {\n      return await makeRequest(request);\n    } catch (e: any) {\n      throw getError(e, request);\n    }\n  }\n}\n\n/**\n * Sends a request\n */\nasync function makeRequest(request: PipelineRequest): Promise<PipelineResponse> {\n  const { abortController, abortControllerCleanup } = setupAbortSignal(request);\n  try {\n    const headers = buildFetchHeaders(request.headers);\n    const { streaming, body: requestBody } = buildRequestBody(request);\n    const requestInit: RequestInit = {\n      body: requestBody,\n      method: request.method,\n      headers: headers,\n      signal: abortController.signal,\n      // Cloudflare doesn't implement the full Fetch API spec\n      // because of some of it doesn't make sense in the edge.\n      // See https://github.com/cloudflare/workerd/issues/902\n      ...(\"credentials\" in Request.prototype\n        ? { credentials: request.withCredentials ? \"include\" : \"same-origin\" }\n        : {}),\n      ...(\"cache\" in Request.prototype ? { cache: \"no-store\" } : {}),\n    };\n\n    // According to https://fetch.spec.whatwg.org/#fetch-method,\n    // init.duplex must be set when body is a ReadableStream object.\n    // currently \"half\" is the only valid value.\n    if (streaming) {\n      (requestInit as any).duplex = \"half\";\n    }\n    /**\n     * Developers of the future:\n     * Do not set redirect: \"manual\" as part\n     * of request options.\n     * It will not work as you expect.\n     */\n    const response = await fetch(request.url, requestInit);\n    // If we're uploading a blob, we need to fire the progress event manually\n    if (isBlob(request.body) && request.onUploadProgress) {\n      request.onUploadProgress({ loadedBytes: request.body.size });\n    }\n    return buildPipelineResponse(response, request, abortControllerCleanup);\n  } catch (e) {\n    abortControllerCleanup?.();\n    throw e;\n  }\n}\n\n/**\n * Creates a pipeline response from a Fetch response;\n */\nasync function buildPipelineResponse(\n  httpResponse: Response,\n  request: PipelineRequest,\n  abortControllerCleanup?: () => void,\n): Promise<PipelineResponse> {\n  const headers = buildPipelineHeaders(httpResponse);\n  const response: PipelineResponse = {\n    request,\n    headers,\n    status: httpResponse.status,\n  };\n\n  const bodyStream = isWebReadableStream(httpResponse.body)\n    ? buildBodyStream(httpResponse.body, {\n        onProgress: request.onDownloadProgress,\n        onEnd: abortControllerCleanup,\n      })\n    : httpResponse.body;\n\n  if (\n    // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n    request.streamResponseStatusCodes?.has(Number.POSITIVE_INFINITY) ||\n    request.streamResponseStatusCodes?.has(response.status)\n  ) {\n    if (request.enableBrowserStreams) {\n      response.browserStreamBody = bodyStream ?? undefined;\n    } else {\n      const responseStream = new Response(bodyStream);\n      response.blobBody = responseStream.blob();\n      abortControllerCleanup?.();\n    }\n  } else {\n    const responseStream = new Response(bodyStream);\n\n    response.bodyAsText = await responseStream.text();\n    abortControllerCleanup?.();\n  }\n\n  return response;\n}\n\nfunction setupAbortSignal(request: PipelineRequest): {\n  abortController: AbortController;\n  abortControllerCleanup: (() => void) | undefined;\n} {\n  const abortController = new AbortController();\n\n  // Cleanup function\n  let abortControllerCleanup: (() => void) | undefined;\n\n  /**\n   * Attach an abort listener to the request\n   */\n  let abortListener: ((event: any) => void) | undefined;\n  if (request.abortSignal) {\n    if (request.abortSignal.aborted) {\n      throw new AbortError(\"The operation was aborted.\");\n    }\n\n    abortListener = (event: Event) => {\n      if (event.type === \"abort\") {\n        abortController.abort();\n      }\n    };\n    request.abortSignal.addEventListener(\"abort\", abortListener);\n    abortControllerCleanup = () => {\n      if (abortListener) {\n        request.abortSignal?.removeEventListener(\"abort\", abortListener);\n      }\n    };\n  }\n\n  // If a timeout was passed, call the abort signal once the time elapses\n  if (request.timeout > 0) {\n    setTimeout(() => {\n      abortController.abort();\n    }, request.timeout);\n  }\n\n  return { abortController, abortControllerCleanup };\n}\n\n/**\n * Gets the specific error\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction getError(e: RestError, request: PipelineRequest): RestError {\n  if (e && e?.name === \"AbortError\") {\n    return e;\n  } else {\n    return new RestError(`Error sending request: ${e.message}`, {\n      code: e?.code ?? RestError.REQUEST_SEND_ERROR,\n      request,\n    });\n  }\n}\n\n/**\n * Converts PipelineRequest headers to Fetch headers\n */\nfunction buildFetchHeaders(pipelineHeaders: PipelineHeaders): Headers {\n  const headers = new Headers();\n  for (const [name, value] of pipelineHeaders) {\n    headers.append(name, value);\n  }\n\n  return headers;\n}\n\nfunction buildPipelineHeaders(httpResponse: Response): PipelineHeaders {\n  const responseHeaders = createHttpHeaders();\n  for (const [name, value] of httpResponse.headers) {\n    responseHeaders.set(name, value);\n  }\n\n  return responseHeaders;\n}\n\ninterface BuildRequestBodyResponse {\n  body:\n    | string\n    | Blob\n    | ReadableStream<Uint8Array>\n    | ArrayBuffer\n    | ArrayBufferView\n    | FormData\n    | null\n    | undefined;\n  streaming: boolean;\n}\n\nfunction buildRequestBody(request: PipelineRequest): BuildRequestBodyResponse {\n  const body = typeof request.body === \"function\" ? request.body() : request.body;\n  if (isNodeReadableStream(body)) {\n    throw new Error(\"Node streams are not supported in browser environment.\");\n  }\n\n  return isWebReadableStream(body)\n    ? { streaming: true, body: buildBodyStream(body, { onProgress: request.onUploadProgress }) }\n    : { streaming: false, body };\n}\n\n/**\n * Reads the request/response original stream and stream it through a new\n * ReadableStream, this is done to be able to report progress in a way that\n * all modern browsers support. TransformStreams would be an alternative,\n * however they are not yet supported by all browsers i.e Firefox\n */\nfunction buildBodyStream(\n  readableStream: ReadableStream<Uint8Array>,\n  options: { onProgress?: (progress: TransferProgressEvent) => void; onEnd?: () => void } = {},\n): ReadableStream<Uint8Array> {\n  let loadedBytes = 0;\n  const { onProgress, onEnd } = options;\n\n  // If the current browser supports pipeThrough we use a TransformStream\n  // to report progress\n  if (isTransformStreamSupported(readableStream)) {\n    return readableStream.pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          if (chunk === null) {\n            controller.terminate();\n            return;\n          }\n\n          controller.enqueue(chunk);\n          loadedBytes += chunk.length;\n          if (onProgress) {\n            onProgress({ loadedBytes });\n          }\n        },\n        flush() {\n          onEnd?.();\n        },\n      }),\n    );\n  } else {\n    // If we can't use transform streams, wrap the original stream in a new readable stream\n    // and use pull to enqueue each chunk and report progress.\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        // When no more data needs to be consumed, break the reading\n        if (done || !value) {\n          onEnd?.();\n          // Close the stream\n          controller.close();\n          reader.releaseLock();\n          return;\n        }\n\n        loadedBytes += value?.length ?? 0;\n\n        // Enqueue the next data chunk into our target stream\n        controller.enqueue(value);\n\n        if (onProgress) {\n          onProgress({ loadedBytes });\n        }\n      },\n      cancel(reason?: string) {\n        onEnd?.();\n        return reader.cancel(reason);\n      },\n    });\n  }\n}\n\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nexport function createFetchHttpClient(): HttpClient {\n  return new FetchHttpClient();\n}\n\nfunction isTransformStreamSupported(readableStream: ReadableStream): boolean {\n  return readableStream.pipeThrough !== undefined && self.TransformStream !== undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createFetchHttpClient } from \"./fetchHttpClient.js\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  return createFetchHttpClient();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type {\n  FormDataMap,\n  HttpHeaders,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport { randomUUID } from \"@azure/core-util\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignalLike;\n  public requestId: string;\n  public tracingOptions?: OperationTracingOptions;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.tracingOptions = options.tracingOptions;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nexport const exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface ExponentialRetryPolicyOptions {\n  /**\n   * The maximum number of retry attempts. Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n   * (1 second.) The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 64000 (64 seconds).\n   */\n  maxRetryDelayInMs?: number;\n}\n\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nexport function exponentialRetryPolicy(\n  options: ExponentialRetryPolicyOptions = {},\n): PipelinePolicy {\n  return retryPolicy(\n    [\n      exponentialRetryStrategy({\n        ...options,\n        ignoreSystemErrors: true,\n      }),\n    ],\n    {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    },\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nexport const systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface SystemErrorRetryPolicyOptions {\n  /**\n   * The maximum number of retry attempts. Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n   * (1 second.) The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 64000 (64 seconds).\n   */\n  maxRetryDelayInMs?: number;\n}\n\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nexport function systemErrorRetryPolicy(\n  options: SystemErrorRetryPolicyOptions = {},\n): PipelinePolicy {\n  return {\n    name: systemErrorRetryPolicyName,\n    sendRequest: retryPolicy(\n      [\n        exponentialRetryStrategy({\n          ...options,\n          ignoreHttpStatusCodes: true,\n        }),\n      ],\n      {\n        maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n      },\n    ).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nexport const throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface ThrottlingRetryPolicyOptions {\n  /**\n   * The maximum number of retry attempts. Defaults to 3.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nexport function throttlingRetryPolicy(options: ThrottlingRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: throttlingRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy()], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport { delay } from \"./helpers.js\";\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\nexport type AccessTokenGetter = (\n  scopes: string | string[],\n  options: GetTokenOptions,\n) => Promise<AccessToken>;\n\nexport interface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  refreshTimeout: number,\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < refreshTimeout) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(\n  credential: TokenCredential,\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>,\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n  let tenantId: string | undefined;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      return (\n        !cycler.isRefreshing &&\n        (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now()\n      );\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(\n    scopes: string | string[],\n    getTokenOptions: GetTokenOptions,\n  ): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now(),\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          tenantId = getTokenOptions.tenantId;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          tenantId = undefined;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (scopes: string | string[], tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    const hasClaimChallenge = Boolean(tokenOptions.claims);\n    const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n\n    if (hasClaimChallenge) {\n      // If we've received a claim, we know the existing token isn't valid\n      // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n      token = null;\n    }\n\n    // If the tenantId passed in token options is different to the one we have\n    // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n    // refresh the token with the new tenantId or token.\n    const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n\n    if (mustRefresh) {\n      return refresh(scopes, tokenOptions);\n    }\n\n    if (cycler.shouldRefresh) {\n      refresh(scopes, tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n\n/**\n * Options sent to the authorizeRequest callback\n */\nexport interface AuthorizeRequestOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options sent to the authorizeRequestOnChallenge callback\n */\nexport interface AuthorizeRequestOnChallengeOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * Response containing the challenge.\n   */\n  response: PipelineResponse;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options to override the processing of [Continuous Access Evaluation](https://docs.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n */\nexport interface ChallengeCallbacks {\n  /**\n   * Allows for the authorization of the main request of this policy before it's sent.\n   */\n  authorizeRequest?(options: AuthorizeRequestOptions): Promise<void>;\n  /**\n   * Allows to handle authentication challenges and to re-authorize the request.\n   * The response containing the challenge is `options.response`.\n   * If this method returns true, the underlying request will be sent once again.\n   * The request may be modified before being sent.\n   */\n  authorizeRequestOnChallenge?(options: AuthorizeRequestOnChallengeOptions): Promise<boolean>;\n}\n\n/**\n * Options to configure the bearerTokenAuthenticationPolicy\n */\nexport interface BearerTokenAuthenticationPolicyOptions {\n  /**\n   * The TokenCredential implementation that can supply the bearer token.\n   */\n  credential?: TokenCredential;\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string | string[];\n  /**\n   * Allows for the processing of [Continuous Access Evaluation](https://docs.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n   * If provided, it must contain at least the `authorizeRequestOnChallenge` method.\n   * If provided, after a request is sent, if it has a challenge, it can be processed to re-send the original request with the relevant challenge information.\n   */\n  challengeCallbacks?: ChallengeCallbacks;\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options: AuthorizeRequestOptions): Promise<void> {\n  const { scopes, getAccessToken, request } = options;\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n  };\n  const accessToken = await getAccessToken(scopes, getTokenOptions);\n\n  if (accessToken) {\n    options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  }\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response: PipelineResponse): string | undefined {\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (response.status === 401 && challenge) {\n    return challenge;\n  }\n  return;\n}\n\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(\n  options: BearerTokenAuthenticationPolicyOptions,\n): PipelinePolicy {\n  const { credential, scopes, challengeCallbacks } = options;\n  const logger = options.logger || coreLogger;\n  const callbacks = {\n    authorizeRequest: challengeCallbacks?.authorizeRequest ?? defaultAuthorizeRequest,\n    authorizeRequestOnChallenge: challengeCallbacks?.authorizeRequestOnChallenge,\n    // keep all other properties\n    ...challengeCallbacks,\n  };\n\n  // This function encapsulates the entire process of reliably retrieving the token\n  // The options are left out of the public API until there's demand to configure this.\n  // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n  // in order to pass through the `options` object.\n  const getAccessToken = credential\n    ? createTokenCycler(credential /* , options */)\n    : () => Promise.resolve(null);\n\n  return {\n    name: bearerTokenAuthenticationPolicyName,\n    /**\n     * If there's no challenge parameter:\n     * - It will try to retrieve the token using the cache, or the credential's getToken.\n     * - Then it will try the next policy with or without the retrieved token.\n     *\n     * It uses the challenge parameters to:\n     * - Skip a first attempt to get the token from the credential if there's no cached token,\n     *   since it expects the token to be retrievable only after the challenge.\n     * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n     * - Send an initial request to receive the challenge if it fails.\n     * - Process a challenge if the response contains it.\n     * - Retrieve a token with the challenge information, then re-send the request.\n     */\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n\n      await callbacks.authorizeRequest({\n        scopes: Array.isArray(scopes) ? scopes : [scopes],\n        request,\n        getAccessToken,\n        logger,\n      });\n\n      let response: PipelineResponse;\n      let error: Error | undefined;\n      try {\n        response = await next(request);\n      } catch (err: any) {\n        error = err;\n        response = err.response;\n      }\n\n      if (\n        callbacks.authorizeRequestOnChallenge &&\n        response?.status === 401 &&\n        getChallenge(response)\n      ) {\n        // processes challenge\n        const shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n          scopes: Array.isArray(scopes) ? scopes : [scopes],\n          request,\n          response,\n          getAccessToken,\n          logger,\n        });\n\n        if (shouldSendRequest) {\n          return next(request);\n        }\n      }\n\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nexport const ndJsonPolicyName = \"ndJsonPolicy\";\n\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nexport function ndJsonPolicy(): PipelinePolicy {\n  return {\n    name: ndJsonPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // There currently isn't a good way to bypass the serializer\n      if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n        const body = JSON.parse(request.body);\n        if (Array.isArray(body)) {\n          request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n        }\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { type AccessTokenGetter, createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport type { AuthorizeRequestOptions } from \"./bearerTokenAuthenticationPolicy.js\";\n\n/**\n * The programmatic identifier of the auxiliaryAuthenticationHeaderPolicy.\n */\nexport const auxiliaryAuthenticationHeaderPolicyName = \"auxiliaryAuthenticationHeaderPolicy\";\nconst AUTHORIZATION_AUXILIARY_HEADER = \"x-ms-authorization-auxiliary\";\n\n/**\n * Options to configure the auxiliaryAuthenticationHeaderPolicy\n */\nexport interface AuxiliaryAuthenticationHeaderPolicyOptions {\n  /**\n   * TokenCredential list used to get token from auxiliary tenants and\n   * one credential for each tenant the client may need to access\n   */\n  credentials?: TokenCredential[];\n  /**\n   * Scopes depend on the cloud your application runs in\n   */\n  scopes: string | string[];\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n\nasync function sendAuthorizeRequest(options: AuthorizeRequestOptions): Promise<string> {\n  const { scopes, getAccessToken, request } = options;\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n  };\n\n  return (await getAccessToken(scopes, getTokenOptions))?.token ?? \"\";\n}\n\n/**\n * A policy for external tokens to `x-ms-authorization-auxiliary` header.\n * This header will be used when creating a cross-tenant application we may need to handle authentication requests\n * for resources that are in different tenants.\n * You could see [ARM docs](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant) for a rundown of how this feature works\n */\nexport function auxiliaryAuthenticationHeaderPolicy(\n  options: AuxiliaryAuthenticationHeaderPolicyOptions,\n): PipelinePolicy {\n  const { credentials, scopes } = options;\n  const logger = options.logger || coreLogger;\n  const tokenCyclerMap = new WeakMap<TokenCredential, AccessTokenGetter>();\n\n  return {\n    name: auxiliaryAuthenticationHeaderPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication for auxiliary header is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n      if (!credentials || credentials.length === 0) {\n        logger.info(\n          `${auxiliaryAuthenticationHeaderPolicyName} header will not be set due to empty credentials.`,\n        );\n        return next(request);\n      }\n\n      const tokenPromises: Promise<string>[] = [];\n      for (const credential of credentials) {\n        let getAccessToken = tokenCyclerMap.get(credential);\n        if (!getAccessToken) {\n          getAccessToken = createTokenCycler(credential);\n          tokenCyclerMap.set(credential, getAccessToken);\n        }\n        tokenPromises.push(\n          sendAuthorizeRequest({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            request,\n            getAccessToken,\n            logger,\n          }),\n        );\n      }\n      const auxiliaryTokens = (await Promise.all(tokenPromises)).filter((token) => Boolean(token));\n      if (auxiliaryTokens.length === 0) {\n        logger.warning(\n          `None of the auxiliary tokens are valid. ${AUTHORIZATION_AUXILIARY_HEADER} header will not be set.`,\n        );\n        return next(request);\n      }\n      request.headers.set(\n        AUTHORIZATION_AUXILIARY_HEADER,\n        auxiliaryTokens.map((token) => `Bearer ${token}`).join(\", \"),\n      );\n\n      return next(request);\n    },\n  };\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential } from \"./keyCredential.js\";\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nexport function isKeyCredential(credential: unknown): credential is KeyCredential {\n  return isObjectWithProperties(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static API name and key.\n */\nexport interface NamedKeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n  /**\n   * The value of the API name represented as a string.\n   */\n  readonly name: string;\n}\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nexport class AzureNamedKeyCredential implements NamedKeyCredential {\n  private _key: string;\n  private _name: string;\n\n  /**\n   * The value of the key to be used in authentication.\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * The value of the name to be used in authentication.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Create an instance of an AzureNamedKeyCredential for use\n   * with a service client.\n   *\n   * @param name - The initial value of the name to use in authentication.\n   * @param key - The initial value of the key to use in authentication.\n   */\n  constructor(name: string, key: string) {\n    if (!name || !key) {\n      throw new TypeError(\"name and key must be non-empty strings\");\n    }\n\n    this._name = name;\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newName - The new name value to be used.\n   * @param newKey - The new key value to be used.\n   */\n  public update(newName: string, newKey: string): void {\n    if (!newName || !newKey) {\n      throw new TypeError(\"newName and newKey must be non-empty strings\");\n    }\n\n    this._name = newName;\n    this._key = newKey;\n  }\n}\n\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nexport function isNamedKeyCredential(credential: unknown): credential is NamedKeyCredential {\n  return (\n    isObjectWithProperties(credential, [\"name\", \"key\"]) &&\n    typeof credential.key === \"string\" &&\n    typeof credential.name === \"string\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static shared access signature.\n */\nexport interface SASCredential {\n  /**\n   * The value of the shared access signature represented as a string\n   */\n  readonly signature: string;\n}\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nexport class AzureSASCredential implements SASCredential {\n  private _signature: string;\n\n  /**\n   * The value of the shared access signature to be used in authentication\n   */\n  public get signature(): string {\n    return this._signature;\n  }\n\n  /**\n   * Create an instance of an AzureSASCredential for use\n   * with a service client.\n   *\n   * @param signature - The initial value of the shared access signature to use in authentication\n   */\n  constructor(signature: string) {\n    if (!signature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = signature;\n  }\n\n  /**\n   * Change the value of the signature.\n   *\n   * Updates will take effect upon the next request after\n   * updating the signature value.\n   *\n   * @param newSignature - The new shared access signature value to be used\n   */\n  public update(newSignature: string): void {\n    if (!newSignature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = newSignature;\n  }\n}\n\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nexport function isSASCredential(credential: unknown): credential is SASCredential {\n  return (\n    isObjectWithProperties(credential, [\"signature\"]) && typeof credential.signature === \"string\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TracingContext } from \"./tracing.js\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n  /**\n   * Indicates whether to enable the Continuous Access Evaluation authentication flow\n   */\n  enableCae?: boolean;\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  Pipeline,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\nexport const disableKeepAlivePolicyName = \"DisableKeepAlivePolicy\";\n\nexport function createDisableKeepAlivePolicy(): PipelinePolicy {\n  return {\n    name: disableKeepAlivePolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      request.disableKeepAlive = true;\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function pipelineContainsDisableKeepAlivePolicy(pipeline: Pipeline): boolean {\n  return pipeline.getOrderedPolicies().some((policy) => policy.name === disableKeepAlivePolicyName);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeStringToString(value: string): string {\n  return atob(value);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpClient,\n  HttpMethods,\n  PipelineOptions,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n/**\n * Options to configure serialization/de-serialization behavior.\n */\nexport interface SerializerOptions {\n  /**\n   * Options to configure xml parser/builder behavior.\n   */\n  xml: XmlOptions;\n  /**\n   * Normally additional properties are included in the result object, even if there is no mapper for them.\n   * This flag disables this behavior when true. It is used when parsing headers to avoid polluting the result object.\n   */\n  ignoreUnknownProperties?: boolean;\n}\n\nexport type RequiredSerializerOptions = {\n  [K in keyof SerializerOptions]: Required<SerializerOptions[K]>;\n};\n\n/**\n * A type alias for future proofing.\n */\nexport type OperationRequest = PipelineRequest;\n\n/**\n * Metadata that is used to properly parse a response.\n */\nexport interface OperationRequestInfo {\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n\n  /**\n   * Used to encode the request.\n   */\n  operationArguments?: OperationArguments;\n\n  /**\n   * A function that returns the proper OperationResponseMap for the given OperationSpec and\n   * PipelineResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: PipelineResponse,\n  ) => undefined | OperationResponseMap;\n\n  /**\n   * Whether or not the PipelineResponse should be deserialized. Defaults to true.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n}\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n  /**\n   * Options to override serialization/de-serialization behavior.\n   */\n  serializerOptions?: SerializerOptions;\n\n  /**\n   * A function to be called each time a response is received from the server\n   * while performing the requested operation.\n   * May be called multiple times.\n   */\n  onResponse?: RawResponseCallback;\n}\n\n/**\n * Options used when creating and sending HTTP requests for this operation.\n */\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * A collection of properties that apply to a single invocation of an operation.\n */\nexport interface OperationArguments {\n  /**\n   * The parameters that were passed to the operation method.\n   */\n  [parameterName: string]: unknown;\n\n  /**\n   * The optional arguments that are provided to an operation.\n   */\n  options?: OperationOptions;\n}\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport type QueryCollectionFormat = \"CSV\" | \"SSV\" | \"TSV\" | \"Pipes\" | \"Multi\";\n\n/**\n * Encodes how to reach a particular property on an object.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * An OperationResponse that can be returned from an operation request for a single status code.\n */\nexport interface OperationResponseMap {\n  /**\n   * The mapper that will be used to deserialize the response headers.\n   */\n  headersMapper?: Mapper;\n\n  /**\n   * The mapper that will be used to deserialize the response body.\n   */\n  bodyMapper?: Mapper;\n\n  /**\n   * Indicates if this is an error response\n   */\n  isError?: boolean;\n}\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponseMap };\n}\n\n/**\n * Wrapper object for http request and response. Deserialized object is stored in\n * the `parsedBody` property when the response body is received in JSON or XML.\n */\nexport interface FullOperationResponse extends PipelineResponse {\n  /**\n   * The parsed HTTP response headers.\n   */\n  parsedHeaders?: { [key: string]: unknown };\n\n  /**\n   * The response body as parsed JSON or XML.\n   */\n  parsedBody?: any;\n\n  /**\n   * The request that generated the response.\n   */\n  request: OperationRequest;\n}\n\n/**\n * A function to be called each time a response is received from the server\n * while performing the requested operation.\n * May be called multiple times.\n */\nexport type RawResponseCallback = (\n  rawResponse: FullOperationResponse,\n  flatResponse: unknown,\n  error?: unknown,\n) => void;\n\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nexport interface Serializer {\n  /**\n   * The provided model mapper.\n   */\n  readonly modelMappers: { [key: string]: any };\n  /**\n   * Whether the contents are XML or not.\n   */\n  readonly isXML: boolean;\n\n  /**\n   * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n   * @param mapper - The definition of data models.\n   * @param value - The value.\n   * @param objectName - Name of the object. Used in the error messages.\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void;\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param object - A valid Javascript object to be serialized.\n   * @param objectName - Name of the serialized object.\n   * @param options - additional options to deserialization.\n   * @returns A valid serialized Javascript object.\n   */\n  serialize(mapper: Mapper, object: any, objectName?: string, options?: SerializerOptions): any;\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param responseBody - A valid Javascript entity to be deserialized.\n   * @param objectName - Name of the deserialized object.\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object.\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options?: SerializerOptions,\n  ): any;\n}\n\n/**\n * Description of various value constraints such as integer ranges and string regex.\n */\nexport interface MapperConstraints {\n  /**\n   * The value should be less than or equal to the `InclusiveMaximum` value.\n   */\n  InclusiveMaximum?: number;\n  /**\n   * The value should be less than the `ExclusiveMaximum` value.\n   */\n  ExclusiveMaximum?: number;\n  /**\n   * The value should be greater than or equal to the `InclusiveMinimum` value.\n   */\n  InclusiveMinimum?: number;\n  /**\n   * The value should be greater than the `InclusiveMinimum` value.\n   */\n  ExclusiveMinimum?: number;\n  /**\n   * The length should be smaller than the `MaxLength`.\n   */\n  MaxLength?: number;\n  /**\n   * The length should be bigger than the `MinLength`.\n   */\n  MinLength?: number;\n  /**\n   * The value must match the pattern.\n   */\n  Pattern?: RegExp;\n  /**\n   * The value must contain fewer items than the MaxItems value.\n   */\n  MaxItems?: number;\n  /**\n   * The value must contain more items than the `MinItems` value.\n   */\n  MinItems?: number;\n  /**\n   * The value must contain only unique items.\n   */\n  UniqueItems?: true;\n  /**\n   * The value should be exactly divisible by the `MultipleOf` value.\n   */\n  MultipleOf?: number;\n}\n\n/**\n * Type of the mapper. Includes known mappers.\n */\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\n/**\n * The type of a simple mapper.\n */\nexport interface SimpleMapperType {\n  /**\n   * Name of the type of the property.\n   */\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\n/**\n * Helps build a mapper that describes how to map a set of properties of an object based on other mappers.\n *\n * Only one of the following properties should be present: `className`, `modelProperties` and `additionalProperties`.\n */\nexport interface CompositeMapperType {\n  /**\n   * Name of the composite mapper type.\n   */\n  name: \"Composite\";\n\n  /**\n   * Use `className` to reference another type definition.\n   */\n  className?: string;\n\n  /**\n   * Use `modelProperties` when the reference to the other type has been resolved.\n   */\n  modelProperties?: { [propertyName: string]: Mapper };\n\n  /**\n   * Used when a model has `additionalProperties: true`. Allows the generic processing of unnamed model properties on the response object.\n   */\n  additionalProperties?: Mapper;\n\n  /**\n   * The name of the top-most parent scheme, the one that has no parents.\n   */\n  uberParent?: string;\n\n  /**\n   * A polymorphic discriminator.\n   */\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\n/**\n * Helps build a mapper that describes how to parse a sequence of mapped values.\n */\nexport interface SequenceMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Sequence\";\n  /**\n   * The mapper to use to map each one of the properties of the sequence.\n   */\n  element: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse a dictionary of mapped values.\n */\nexport interface DictionaryMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Dictionary\";\n  /**\n   * The mapper to use to map the value of each property in the dictionary.\n   */\n  value: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse an enum value.\n */\nexport interface EnumMapperType {\n  /**\n   * Name of the enum type mapper.\n   */\n  name: \"Enum\";\n  /**\n   * Values allowed by this mapper.\n   */\n  allowedValues: any[];\n}\n\n/**\n * The base definition of a mapper. Can be used for XML and plain JavaScript objects.\n */\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Determines if the current property should be serialized as the inner content of the xml element\n   */\n  xmlIsMsText?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\n/**\n * Mappers are definitions of the data models used in the library.\n * These data models are part of the Operation or Client definitions in the responses or parameters.\n */\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\n/**\n * Used to disambiguate discriminated type unions.\n * For example, if response can have many shapes but also includes a 'kind' field (or similar),\n * that field can be used to determine how to deserialize the response to the correct type.\n */\nexport interface PolymorphicDiscriminator {\n  /**\n   * Name of the discriminant property in the original JSON payload, e.g. `@odata.kind`.\n   */\n  serializedName: string;\n  /**\n   * Name to use on the resulting object instead of the original property name.\n   * Useful since the JSON property could be difficult to work with.\n   * For example: For a field received as `@odata.kind`, the final object could instead include a property simply named `kind`.\n   */\n  clientName: string;\n  /**\n   * It may contain any other property.\n   */\n  [key: string]: string;\n}\n\n/**\n * A mapper composed of other mappers.\n */\nexport interface CompositeMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `CompositeMapper`.\n   */\n  type: CompositeMapperType;\n}\n\n/**\n * A mapper describing arrays.\n */\nexport interface SequenceMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `SequenceMapper`.\n   */\n  type: SequenceMapperType;\n}\n\n/**\n * A mapper describing plain JavaScript objects used as key/value pairs.\n */\nexport interface DictionaryMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `DictionaryMapper`.\n   */\n  type: DictionaryMapperType;\n  /**\n   * Optionally, a prefix to add to the header collection.\n   */\n  headerCollectionPrefix?: string;\n}\n\n/**\n * A mapper describing an enum value.\n */\nexport interface EnumMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `EnumMapper`.\n   */\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n/**\n * Configuration for creating a new Tracing Span\n */\nexport interface SpanConfig {\n  /**\n   * Package name prefix\n   */\n  packagePrefix: string;\n  /**\n   * Service namespace\n   */\n  namespace: string;\n}\n\n/**\n * Used to configure additional policies added to the pipeline at construction.\n */\nexport interface AdditionalPolicyConfig {\n  /**\n   * A policy to be added.\n   */\n  policy: PipelinePolicy;\n  /**\n   * Determines if this policy be applied before or after retry logic.\n   * Only use `perRetry` if you need to modify the request again\n   * each time the operation is retried due to retryable service\n   * issues.\n   */\n  position: \"perCall\" | \"perRetry\";\n}\n\n/**\n * The common set of options that high level clients are expected to expose.\n */\nexport interface CommonClientOptions extends PipelineOptions {\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n  /**\n   * Additional policies to include in the HTTP pipeline.\n   */\n  additionalPolicies?: AdditionalPolicyConfig[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CompositeMapper, FullOperationResponse, OperationResponseMap } from \"./interfaces.js\";\n\n/**\n * The union of all possible types for a primitive response body.\n * @internal\n */\nexport type BodyPrimitive = number | string | boolean | Date | Uint8Array | undefined | null;\n\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nexport function isPrimitiveBody(value: unknown, mapperTypeName?: string): value is BodyPrimitive {\n  return (\n    mapperTypeName !== \"Composite\" &&\n    mapperTypeName !== \"Dictionary\" &&\n    (typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\" ||\n      mapperTypeName?.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i) !==\n        null ||\n      value === undefined ||\n      value === null)\n  );\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Representation of parsed response headers and body coupled with information\n * about how to map them:\n * - whether the response body should be wrapped (typically if its type is primitive).\n * - whether the response is nullable so it can be null if the combination of\n *   the headers and the body is empty.\n */\ninterface ResponseObjectWithMetadata {\n  /** whether the mapper allows nullable body */\n  hasNullableType: boolean;\n  /** whether the response's body should be wrapped */\n  shouldWrapBody: boolean;\n  /** parsed headers of the response */\n  headers:\n    | {\n        [key: string]: unknown;\n      }\n    | undefined;\n  /** parsed body of the response */\n  body: any;\n}\n\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(\n  responseObject: ResponseObjectWithMetadata,\n): unknown | null {\n  const combinedHeadersAndBody = {\n    ...responseObject.headers,\n    ...responseObject.body,\n  };\n  if (\n    responseObject.hasNullableType &&\n    Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0\n  ) {\n    return responseObject.shouldWrapBody ? { body: null } : null;\n  } else {\n    return responseObject.shouldWrapBody\n      ? {\n          ...responseObject.headers,\n          body: responseObject.body,\n        }\n      : combinedHeadersAndBody;\n  }\n}\n\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nexport function flattenResponse(\n  fullResponse: FullOperationResponse,\n  responseSpec: OperationResponseMap | undefined,\n): unknown {\n  const parsedHeaders = fullResponse.parsedHeaders;\n\n  // head methods never have a body, but we return a boolean set to body property\n  // to indicate presence/absence of the resource\n  if (fullResponse.request.method === \"HEAD\") {\n    return {\n      ...parsedHeaders,\n      body: fullResponse.parsedBody,\n    };\n  }\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n  const isNullable = Boolean(bodyMapper?.nullable);\n  const expectedBodyTypeName = bodyMapper?.type.name;\n\n  /** If the body is asked for, we look at the expected body type to handle it */\n  if (expectedBodyTypeName === \"Stream\") {\n    return {\n      ...parsedHeaders,\n      blobBody: fullResponse.blobBody,\n      readableStreamBody: fullResponse.readableStreamBody,\n    };\n  }\n\n  const modelProperties =\n    (expectedBodyTypeName === \"Composite\" &&\n      (bodyMapper as CompositeMapper).type.modelProperties) ||\n    {};\n  const isPageableResponse = Object.keys(modelProperties).some(\n    (k) => modelProperties[k].serializedName === \"\",\n  );\n  if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n    const arrayResponse: { [key: string]: unknown } =\n      fullResponse.parsedBody ?? ([] as unknown as { [key: string]: unknown });\n\n    for (const key of Object.keys(modelProperties)) {\n      if (modelProperties[key].serializedName) {\n        arrayResponse[key] = fullResponse.parsedBody?.[key];\n      }\n    }\n\n    if (parsedHeaders) {\n      for (const key of Object.keys(parsedHeaders)) {\n        arrayResponse[key] = parsedHeaders[key];\n      }\n    }\n    return isNullable &&\n      !fullResponse.parsedBody &&\n      !parsedHeaders &&\n      Object.getOwnPropertyNames(modelProperties).length === 0\n      ? null\n      : arrayResponse;\n  }\n\n  return handleNullableResponseAndWrappableBody({\n    body: fullResponse.parsedBody,\n    headers: parsedHeaders,\n    hasNullableType: isNullable,\n    shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as base64 from \"./base64.js\";\nimport {\n  BaseMapper,\n  CompositeMapper,\n  DictionaryMapper,\n  EnumMapper,\n  Mapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  RequiredSerializerOptions,\n  SequenceMapper,\n  Serializer,\n  SerializerOptions,\n  XML_ATTRKEY,\n  XML_CHARKEY,\n} from \"./interfaces.js\";\nimport { isDuration, isValidUuid } from \"./utils.js\";\n\nclass SerializerImpl implements Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML: boolean = false,\n  ) {}\n\n  /**\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any,\n    ): never => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`,\n      );\n    };\n    if (mapper.constraints && value !== undefined && value !== null) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems,\n      } = mapper.constraints;\n      if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems !== undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength !== undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems !== undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength !== undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param object - A valid Javascript object to be serialized\n   *\n   * @param objectName - Name of the serialized object\n   *\n   * @param options - additional options to serialization\n   *\n   * @returns A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: any,\n    objectName?: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && (object === undefined || object === null)) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object === undefined || object === null) {\n      payload = object;\n    } else {\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param responseBody - A valid Javascript entity to be deserialized\n   *\n   * @param objectName - Name of the deserialized object\n   *\n   * @param options - Controls behavior of XML parser and builder.\n   *\n   * @returns A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n      ignoreUnknownProperties: options.ignoreUnknownProperties ?? false,\n    };\n    if (responseBody === undefined || responseBody === null) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions,\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xml.xmlCharKey;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (responseBody[XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n          responseBody = responseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nexport function createSerializer(\n  modelMappers: { [key: string]: any } = {},\n  isXML: boolean = false,\n): Serializer {\n  return new SerializerImpl(modelMappers, isXML);\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: Uint8Array): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`,\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n        typeof value.tee !== \"function\" && // browser ReadableStream\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        // File objects count as a type of Blob, so we want to use instanceof explicitly\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n        objectType !== \"function\"\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`,\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues,\n      )}.`,\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = base64.encodeByteArray(value);\n  }\n  return value;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = bufferToBase64Url(value);\n  }\n  return value;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value !== undefined && value !== null) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`,\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  let elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  // Quirk: Composite mappers referenced by `element` might\n  // not have *all* properties declared (like uberParent),\n  // so let's try to look up the full definition by name.\n  if (elementType.type.name === \"Composite\" && elementType.type.className) {\n    elementType = serializer.modelMappers[elementType.type.className] ?? elementType;\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xml.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2,\n      )}\".`,\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`,\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object !== undefined && object !== null) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            (childObject === undefined || childObject === null) &&\n            ((object[key] !== undefined && object[key] !== null) ||\n              propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject !== undefined && parentObject !== null) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace,\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          (toSerialize === undefined || toSerialize === null)\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options,\n        );\n        if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options,\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xml.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: RequiredSerializerOptions): boolean {\n  return [XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  const xmlCharKey = options.xml.xmlCharKey ?? XML_CHARKEY;\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options,\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options,\n        );\n      } else if (propertyMapper.xmlIsMsText) {\n        if (responseBody[xmlCharKey] !== undefined) {\n          instance[key] = responseBody[xmlCharKey];\n        } else if (typeof responseBody === \"string\") {\n          // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n          //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n          instance[key] = responseBody;\n        }\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(xmlName!);\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(propertyName!);\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      let steps = 0;\n      for (const item of paths) {\n        if (!res) break;\n        steps++;\n        res = res[item];\n      }\n      // only accept null when reaching the last position of object otherwise it would be undefined\n      if (res === null && steps < paths.length) {\n        res = undefined;\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        (propertyInstance === undefined || propertyInstance === null)\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        const arrayInstance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        // Copy over any properties that have already been added into the instance, where they do\n        // not exist on the newly de-serialized array\n        for (const [k, v] of Object.entries(instance)) {\n          if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n            arrayInstance[k] = v;\n          }\n        }\n        instance = arrayInstance;\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options,\n        );\n      }\n    }\n  } else if (responseBody && !options.ignoreUnknownProperties) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  /* jshint validthis: true */\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  let element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (element.type.name === \"Composite\" && element.type.className) {\n      element = serializer.modelMappers[element.type.className] ?? element;\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options,\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getIndexDiscriminator(\n  discriminators: Record<string, CompositeMapper>,\n  discriminatorValue: string,\n  typeName: string,\n): CompositeMapper | undefined {\n  const typeNamesToCheck = [typeName];\n  while (typeNamesToCheck.length) {\n    const currentName = typeNamesToCheck.shift();\n    const indexDiscriminator =\n      discriminatorValue === currentName\n        ? discriminatorValue\n        : currentName + \".\" + discriminatorValue;\n    if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n      return discriminators[indexDiscriminator];\n    } else {\n      for (const [name, mapper] of Object.entries(discriminators)) {\n        if (\n          name.startsWith(currentName + \".\") &&\n          mapper.type.uberParent === currentName &&\n          mapper.type.className\n        ) {\n          typeNamesToCheck.push(mapper.type.className);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\",\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n\n  if (polymorphicDiscriminator) {\n    let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName) {\n      // The serializedName might have \\\\, which we just want to ignore\n      if (polymorphicPropertyName === \"serializedName\") {\n        discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n      }\n      const discriminatorValue = object[discriminatorName];\n      const typeName = mapper.type.uberParent ?? mapper.type.className;\n\n      if (typeof discriminatorValue === \"string\" && typeName) {\n        const polymorphicMapper = getIndexDiscriminator(\n          serializer.modelMappers.discriminators,\n          discriminatorValue,\n          typeName,\n        );\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(\n  serializer: Serializer,\n  typeName?: string,\n): PolymorphicDiscriminator | undefined {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\n/**\n * Known types of Mappers\n */\nexport const MapperTypeNames = {\n  Base64Url: \"Base64Url\",\n  Boolean: \"Boolean\",\n  ByteArray: \"ByteArray\",\n  Composite: \"Composite\",\n  Date: \"Date\",\n  DateTime: \"DateTime\",\n  DateTimeRfc1123: \"DateTimeRfc1123\",\n  Dictionary: \"Dictionary\",\n  Enum: \"Enum\",\n  Number: \"Number\",\n  Object: \"Object\",\n  Sequence: \"Sequence\",\n  String: \"String\",\n  Stream: \"Stream\",\n  TimeSpan: \"TimeSpan\",\n  UnixTime: \"UnixTime\",\n} as const;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CompositeMapper,\n  Mapper,\n  OperationArguments,\n  OperationParameter,\n  OperationRequest,\n  OperationRequestInfo,\n  ParameterPath,\n} from \"./interfaces.js\";\n\nimport { state } from \"./state.js\";\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nexport function getOperationArgumentValueFromParameter(\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  fallbackObject?: { [parameterName: string]: any },\n): any {\n  let parameterPath = parameter.parameterPath;\n  const parameterMapper = parameter.mapper;\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n\n        if (!propertySearchResult.propertyFound && fallbackObject) {\n          propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameter(\n        operationArguments,\n        {\n          parameterPath: propertyPath,\n          mapper: propertyMapper,\n        },\n        fallbackObject,\n      );\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[],\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\n\nfunction hasOriginalRequest(\n  request: OperationRequest,\n): request is OperationRequest & { [originalRequestSymbol]: OperationRequest } {\n  return originalRequestSymbol in request;\n}\n\nexport function getOperationRequestInfo(request: OperationRequest): OperationRequestInfo {\n  if (hasOriginalRequest(request)) {\n    return getOperationRequestInfo(request[originalRequestSymbol]);\n  }\n  let info = state.operationRequestMap.get(request);\n\n  if (!info) {\n    info = {};\n    state.operationRequestMap.set(request, info);\n  }\n  return info;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  FullOperationResponse,\n  OperationRequest,\n  OperationResponseMap,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XML_CHARKEY,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  RestError,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nexport const deserializationPolicyName = \"deserializationPolicy\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationPolicyOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes?: DeserializationContentTypes;\n\n  /**\n   * A function that is able to parse XML. Required for XML support.\n   */\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nexport function deserializationPolicy(options: DeserializationPolicyOptions = {}): PipelinePolicy {\n  const jsonContentTypes = options.expectedContentTypes?.json ?? defaultJsonContentTypes;\n  const xmlContentTypes = options.expectedContentTypes?.xml ?? defaultXmlContentTypes;\n  const parseXML = options.parseXML;\n  const serializerOptions = options.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  return {\n    name: deserializationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return deserializeResponseBody(\n        jsonContentTypes,\n        xmlContentTypes,\n        response,\n        updatedOptions,\n        parseXML,\n      );\n    },\n  };\n}\n\nfunction getOperationResponseMap(\n  parsedResponse: PipelineResponse,\n): undefined | OperationResponseMap {\n  let result: OperationResponseMap | undefined;\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (operationSpec) {\n    if (!operationInfo?.operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationInfo?.operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: PipelineResponse): boolean {\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const shouldDeserialize = operationInfo?.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nasync function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: PipelineResponse,\n  options: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<PipelineResponse> {\n  const parsedResponse = await parse(\n    jsonContentTypes,\n    xmlContentTypes,\n    response,\n    options,\n    parseXML,\n  );\n  if (!shouldDeserializeResponse(parsedResponse)) {\n    return parsedResponse;\n  }\n\n  const operationInfo = getOperationRequestInfo(parsedResponse.request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (!operationSpec || !operationSpec.responses) {\n    return parsedResponse;\n  }\n\n  const responseSpec = getOperationResponseMap(parsedResponse);\n  const { error, shouldReturnResponse } = handleErrorResponse(\n    parsedResponse,\n    operationSpec,\n    responseSpec,\n    options,\n  );\n  if (error) {\n    throw error;\n  } else if (shouldReturnResponse) {\n    return parsedResponse;\n  }\n\n  // An operation response spec does exist for current status code, so\n  // use it to deserialize the response.\n  if (responseSpec) {\n    if (responseSpec.bodyMapper) {\n      let valueToDeserialize: any = parsedResponse.parsedBody;\n      if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperTypeNames.Sequence) {\n        valueToDeserialize =\n          typeof valueToDeserialize === \"object\"\n            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n            : [];\n      }\n      try {\n        parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n          responseSpec.bodyMapper,\n          valueToDeserialize,\n          \"operationRes.parsedBody\",\n          options,\n        );\n      } catch (deserializeError: any) {\n        const restError = new RestError(\n          `Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n          {\n            statusCode: parsedResponse.status,\n            request: parsedResponse.request,\n            response: parsedResponse,\n          },\n        );\n        throw restError;\n      }\n    } else if (operationSpec.httpMethod === \"HEAD\") {\n      // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n      parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n    }\n\n    if (responseSpec.headersMapper) {\n      parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n        responseSpec.headersMapper,\n        parsedResponse.headers.toJSON(),\n        \"operationRes.parsedHeaders\",\n        { xml: {}, ignoreUnknownProperties: true },\n      );\n    }\n  }\n\n  return parsedResponse;\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: FullOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponseMap | undefined,\n  options: RequiredSerializerOptions,\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n\n  const initialErrorMessage = parsedResponse.request.streamResponseStatusCodes?.has(\n    parsedResponse.status,\n  )\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(initialErrorMessage, {\n    statusCode: parsedResponse.status,\n    request: parsedResponse.request,\n    response: parsedResponse,\n  });\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // we should fail so we just throw the parsed response\n  if (!errorResponseSpec) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let deserializedError;\n\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperTypeNames.Sequence) {\n          valueToDeserialize = [];\n          const elementName = defaultBodyMapper.xmlElementName;\n          if (typeof parsedBody === \"object\" && elementName) {\n            valueToDeserialize = parsedBody[elementName];\n          }\n        }\n        deserializedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\",\n          options,\n        );\n      }\n\n      const internalError: any = parsedBody.error || deserializedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        (error.response! as FullOperationResponse).parsedBody = deserializedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      (error.response! as FullOperationResponse).parsedHeaders =\n        operationSpec.serializer.deserialize(\n          defaultHeadersMapper,\n          parsedResponse.headers.toJSON(),\n          \"operationRes.parsedHeaders\",\n        );\n    }\n  } catch (defaultError: any) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nasync function parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: FullOperationResponse,\n  opts: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<FullOperationResponse> {\n  if (\n    !operationResponse.request.streamResponseStatusCodes?.has(operationResponse.status) &&\n    operationResponse.bodyAsText\n  ) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n\n    try {\n      if (\n        contentComponents.length === 0 ||\n        contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n      ) {\n        operationResponse.parsedBody = JSON.parse(text);\n        return operationResponse;\n      } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n        if (!parseXML) {\n          throw new Error(\"Parsing XML not supported.\");\n        }\n        const body = await parseXML(text, opts.xml);\n        operationResponse.parsedBody = body;\n        return operationResponse;\n      }\n    } catch (err: any) {\n      const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n      const errCode = err.code || RestError.PARSE_ERROR;\n      const e = new RestError(msg, {\n        code: errCode,\n        statusCode: operationResponse.status,\n        request: operationResponse.request,\n        response: operationResponse,\n      });\n      throw e;\n    }\n  }\n\n  return operationResponse;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationParameter, OperationSpec } from \"./interfaces.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamingResponseStatusCodes(operationSpec: OperationSpec): Set<number> {\n  const result = new Set<number>();\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperTypeNames.Stream\n    ) {\n      result.add(Number(statusCode));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  const { parameterPath, mapper } = parameter;\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  DictionaryMapper,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XML_ATTRKEY,\n  XML_CHARKEY,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { PipelinePolicy, PipelineResponse, SendRequest } from \"@azure/core-rest-pipeline\";\nimport {\n  getOperationArgumentValueFromParameter,\n  getOperationRequestInfo,\n} from \"./operationHelpers.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nexport const serializationPolicyName = \"serializationPolicy\";\n\n/**\n * Options to configure API request serialization.\n */\nexport interface SerializationPolicyOptions {\n  /**\n   * A function that is able to write XML. Required for XML support.\n   */\n  stringifyXML?: (obj: any, opts?: XmlOptions) => string;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nexport function serializationPolicy(options: SerializationPolicyOptions = {}): PipelinePolicy {\n  const stringifyXML = options.stringifyXML;\n\n  return {\n    name: serializationPolicyName,\n    async sendRequest(request: OperationRequest, next: SendRequest): Promise<PipelineResponse> {\n      const operationInfo = getOperationRequestInfo(request);\n      const operationSpec = operationInfo?.operationSpec;\n      const operationArguments = operationInfo?.operationArguments;\n      if (operationSpec && operationArguments) {\n        serializeHeaders(request, operationArguments, operationSpec);\n        serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n      }\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function serializeHeaders(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n): void {\n  if (operationSpec.headerParameters) {\n    for (const headerParameter of operationSpec.headerParameters) {\n      let headerValue = getOperationArgumentValueFromParameter(operationArguments, headerParameter);\n      if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n        headerValue = operationSpec.serializer.serialize(\n          headerParameter.mapper,\n          headerValue,\n          getPathStringFromParameter(headerParameter),\n        );\n        const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n          .headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n          for (const key of Object.keys(headerValue)) {\n            request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n          }\n        } else {\n          request.headers.set(\n            headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter),\n            headerValue,\n          );\n        }\n      }\n    }\n  }\n  const customHeaders = operationArguments.options?.requestOptions?.customHeaders;\n  if (customHeaders) {\n    for (const customHeaderName of Object.keys(customHeaders)) {\n      request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function serializeRequestBody(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n  stringifyXML: (obj: any, opts?: XmlOptions) => string = function () {\n    throw new Error(\"XML serialization unsupported!\");\n  },\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  const xmlCharKey = updatedOptions.xml.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    request.body = getOperationArgumentValueFromParameter(\n      operationArguments,\n      operationSpec.requestBody,\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      serializedName,\n      xmlName,\n      xmlElementName,\n      xmlNamespace,\n      xmlNamespacePrefix,\n      nullable,\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if (\n        (request.body !== undefined && request.body !== null) ||\n        (nullable && request.body === null) ||\n        required\n      ) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody,\n        );\n        request.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          request.body,\n          requestBodyParameterPathString,\n          updatedOptions,\n        );\n\n        const isStream = typeName === MapperTypeNames.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            request.body,\n            updatedOptions,\n          );\n\n          if (typeName === MapperTypeNames.Sequence) {\n            request.body = stringifyXML(\n              prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace,\n              ),\n              { rootName: xmlName || serializedName, xmlCharKey },\n            );\n          } else if (!isStream) {\n            request.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey,\n            });\n          }\n        } else if (\n          typeName === MapperTypeNames.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          request.body = JSON.stringify(request.body);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \",\n        )}.`,\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    request.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue = getOperationArgumentValueFromParameter(\n        operationArguments,\n        formDataParameter,\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions,\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: RequiredSerializerOptions,\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction prepareXMLRootList(\n  obj: any,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string,\n): { [key: string]: any[] } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpClient, createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationArguments, OperationSpec, QueryCollectionFormat } from \"./interfaces.js\";\nimport { getOperationArgumentValueFromParameter } from \"./operationHelpers.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\nconst CollectionFormatToDelimiterMap: { [key in QueryCollectionFormat]: string } = {\n  CSV: \",\",\n  SSV: \" \",\n  Multi: \"Multi\",\n  TSV: \"\\t\",\n  Pipes: \"|\",\n};\n\nexport function getRequestUrl(\n  baseUri: string,\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): string {\n  const urlReplacements = calculateUrlReplacements(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n\n  let isAbsolutePath = false;\n\n  let requestUrl = replaceAll(baseUri, urlReplacements);\n  if (operationSpec.path) {\n    let path = replaceAll(operationSpec.path, urlReplacements);\n    // QUIRK: sometimes we get a path component like /{nextLink}\n    // which may be a fully formed URL with a leading /. In that case, we should\n    // remove the leading /\n    if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n      path = path.substring(1);\n    }\n    // QUIRK: sometimes we get a path component like {nextLink}\n    // which may be a fully formed URL. In that case, we should\n    // ignore the baseUri.\n    if (isAbsoluteUrl(path)) {\n      requestUrl = path;\n      isAbsolutePath = true;\n    } else {\n      requestUrl = appendPath(requestUrl, path);\n    }\n  }\n\n  const { queryParams, sequenceParams } = calculateQueryParameters(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n  /**\n   * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n   * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n   * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n   * is still being built so there is nothing to overwrite.\n   */\n  requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n\n  return requestUrl;\n}\n\nfunction replaceAll(input: string, replacements: Map<string, string>): string {\n  let result = input;\n  for (const [searchValue, replaceValue] of replacements) {\n    result = result.split(searchValue).join(replaceValue);\n  }\n  return result;\n}\n\nfunction calculateUrlReplacements(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): Map<string, string> {\n  const result = new Map<string, string>();\n  if (operationSpec.urlParameters?.length) {\n    for (const urlParameter of operationSpec.urlParameters) {\n      let urlParameterValue: string = getOperationArgumentValueFromParameter(\n        operationArguments,\n        urlParameter,\n        fallbackObject,\n      );\n      const parameterPathString = getPathStringFromParameter(urlParameter);\n      urlParameterValue = operationSpec.serializer.serialize(\n        urlParameter.mapper,\n        urlParameterValue,\n        parameterPathString,\n      );\n      if (!urlParameter.skipEncoding) {\n        urlParameterValue = encodeURIComponent(urlParameterValue);\n      }\n      result.set(\n        `{${urlParameter.mapper.serializedName || parameterPathString}}`,\n        urlParameterValue,\n      );\n    }\n  }\n  return result;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return url.includes(\"://\");\n}\n\nfunction appendPath(url: string, pathToAppend?: string): string {\n  if (!pathToAppend) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n  let newPath = parsedUrl.pathname;\n\n  if (!newPath.endsWith(\"/\")) {\n    newPath = `${newPath}/`;\n  }\n\n  if (pathToAppend.startsWith(\"/\")) {\n    pathToAppend = pathToAppend.substring(1);\n  }\n\n  const searchStart = pathToAppend.indexOf(\"?\");\n  if (searchStart !== -1) {\n    const path = pathToAppend.substring(0, searchStart);\n    const search = pathToAppend.substring(searchStart + 1);\n    newPath = newPath + path;\n    if (search) {\n      parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n    }\n  } else {\n    newPath = newPath + pathToAppend;\n  }\n\n  parsedUrl.pathname = newPath;\n\n  return parsedUrl.toString();\n}\n\nfunction calculateQueryParameters(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): {\n  queryParams: Map<string, string | string[]>;\n  sequenceParams: Set<string>;\n} {\n  const result = new Map<string, string | string[]>();\n  const sequenceParams: Set<string> = new Set<string>();\n\n  if (operationSpec.queryParameters?.length) {\n    for (const queryParameter of operationSpec.queryParameters) {\n      if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n        sequenceParams.add(queryParameter.mapper.serializedName);\n      }\n      let queryParameterValue: string | string[] = getOperationArgumentValueFromParameter(\n        operationArguments,\n        queryParameter,\n        fallbackObject,\n      );\n      if (\n        (queryParameterValue !== undefined && queryParameterValue !== null) ||\n        queryParameter.mapper.required\n      ) {\n        queryParameterValue = operationSpec.serializer.serialize(\n          queryParameter.mapper,\n          queryParameterValue,\n          getPathStringFromParameter(queryParameter),\n        );\n\n        const delimiter = queryParameter.collectionFormat\n          ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n          : \"\";\n        if (Array.isArray(queryParameterValue)) {\n          // replace null and undefined\n          queryParameterValue = queryParameterValue.map((item) => {\n            if (item === null || item === undefined) {\n              return \"\";\n            }\n\n            return item;\n          });\n        }\n        if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n          continue;\n        } else if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n        if (!queryParameter.skipEncoding) {\n          if (Array.isArray(queryParameterValue)) {\n            queryParameterValue = queryParameterValue.map((item: string) => {\n              return encodeURIComponent(item);\n            });\n          } else {\n            queryParameterValue = encodeURIComponent(queryParameterValue);\n          }\n        }\n\n        // Join pipes and CSV *after* encoding, or the server will be upset.\n        if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n\n        result.set(\n          queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n          queryParameterValue,\n        );\n      }\n    }\n  }\n  return {\n    queryParams: result,\n    sequenceParams,\n  };\n}\n\nfunction simpleParseQueryParams(queryString: string): Map<string, string | string[] | undefined> {\n  const result: Map<string, string | string[] | undefined> = new Map<\n    string,\n    string | string[] | undefined\n  >();\n  if (!queryString || queryString[0] !== \"?\") {\n    return result;\n  }\n\n  // remove the leading ?\n  queryString = queryString.slice(1);\n  const pairs = queryString.split(\"&\");\n\n  for (const pair of pairs) {\n    const [name, value] = pair.split(\"=\", 2);\n    const existingValue = result.get(name);\n    if (existingValue) {\n      if (Array.isArray(existingValue)) {\n        existingValue.push(value);\n      } else {\n        result.set(name, [existingValue, value]);\n      }\n    } else {\n      result.set(name, value);\n    }\n  }\n\n  return result;\n}\n\n/** @internal */\nexport function appendQueryParams(\n  url: string,\n  queryParams: Map<string, string | string[]>,\n  sequenceParams: Set<string>,\n  noOverwrite: boolean = false,\n): string {\n  if (queryParams.size === 0) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n\n  // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n  // can change their meaning to the server, such as in the case of a SAS signature.\n  // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n  const combinedParams = simpleParseQueryParams(parsedUrl.search);\n\n  for (const [name, value] of queryParams) {\n    const existingValue = combinedParams.get(name);\n    if (Array.isArray(existingValue)) {\n      if (Array.isArray(value)) {\n        existingValue.push(...value);\n        const valueSet = new Set(existingValue);\n        combinedParams.set(name, Array.from(valueSet));\n      } else {\n        existingValue.push(value);\n      }\n    } else if (existingValue) {\n      if (Array.isArray(value)) {\n        value.unshift(existingValue);\n      } else if (sequenceParams.has(name)) {\n        combinedParams.set(name, [existingValue, value]);\n      }\n      if (!noOverwrite) {\n        combinedParams.set(name, value);\n      }\n    } else {\n      combinedParams.set(name, value);\n    }\n  }\n\n  const searchPieces: string[] = [];\n  for (const [name, value] of combinedParams) {\n    if (typeof value === \"string\") {\n      searchPieces.push(`${name}=${value}`);\n    } else if (Array.isArray(value)) {\n      // QUIRK: If we get an array of values, include multiple key/value pairs\n      for (const subValue of value) {\n        searchPieces.push(`${name}=${subValue}`);\n      }\n    } else {\n      searchPieces.push(`${name}=${value}`);\n    }\n  }\n\n  // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n  parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n  return parsedUrl.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CommonClientOptions,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n} from \"./interfaces.js\";\nimport {\n  HttpClient,\n  Pipeline,\n  PipelineRequest,\n  PipelineResponse,\n  createPipelineRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { createClientPipeline } from \"./pipeline.js\";\nimport { flattenResponse } from \"./utils.js\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nimport { getRequestUrl } from \"./urlHelpers.js\";\nimport { getStreamingResponseStatusCodes } from \"./interfaceHelpers.js\";\nimport { logger } from \"./log.js\";\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions extends CommonClientOptions {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * @deprecated This property is deprecated and will be removed soon, please use endpoint instead\n   */\n  baseUri?: string;\n  /**\n   * If specified, this is the endpoint that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * to encourage customer to use endpoint, we mark the baseUri as deprecated.\n   */\n  endpoint?: string;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  requestContentType?: string;\n  /**\n   * Credential used to authenticate the request.\n   */\n  credential?: TokenCredential;\n  /**\n   * A customized pipeline to use, otherwise a default one will be created.\n   */\n  pipeline?: Pipeline;\n}\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  private readonly _endpoint?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  private readonly _requestContentType?: string;\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  private readonly _allowInsecureConnection?: boolean;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n\n  /**\n   * The pipeline used by this client to make requests\n   */\n  public readonly pipeline: Pipeline;\n\n  /**\n   * The ServiceClient constructor\n   * @param credential - The credentials used for authentication with the service.\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(options: ServiceClientOptions = {}) {\n    this._requestContentType = options.requestContentType;\n    this._endpoint = options.endpoint ?? options.baseUri;\n    if (options.baseUri) {\n      logger.warning(\n        \"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\",\n      );\n    }\n    this._allowInsecureConnection = options.allowInsecureConnection;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n\n    this.pipeline = options.pipeline || createDefaultPipeline(options);\n    if (options.additionalPolicies?.length) {\n      for (const { policy, position } of options.additionalPolicies) {\n        // Sign happens after Retry and is commonly needed to occur\n        // before policies that intercept post-retry.\n        const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n        this.pipeline.addPolicy(policy, {\n          afterPhase,\n        });\n      }\n    }\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    return this.pipeline.sendRequest(this._httpClient, request);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @typeParam T - The typed result of the request, based on the OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const endpoint: string | undefined = operationSpec.baseUrl || this._endpoint;\n    if (!endpoint) {\n      throw new Error(\n        \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\",\n      );\n    }\n\n    // Templatized URLs sometimes reference properties on the ServiceClient child class,\n    // so we have to pass `this` below in order to search these properties if they're\n    // not part of OperationArguments\n    const url = getRequestUrl(endpoint, operationSpec, operationArguments, this);\n\n    const request: OperationRequest = createPipelineRequest({\n      url,\n    });\n    request.method = operationSpec.httpMethod;\n    const operationInfo = getOperationRequestInfo(request);\n    operationInfo.operationSpec = operationSpec;\n    operationInfo.operationArguments = operationArguments;\n\n    const contentType = operationSpec.contentType || this._requestContentType;\n    if (contentType && operationSpec.requestBody) {\n      request.headers.set(\"Content-Type\", contentType);\n    }\n\n    const options = operationArguments.options;\n    if (options) {\n      const requestOptions = options.requestOptions;\n\n      if (requestOptions) {\n        if (requestOptions.timeout) {\n          request.timeout = requestOptions.timeout;\n        }\n\n        if (requestOptions.onUploadProgress) {\n          request.onUploadProgress = requestOptions.onUploadProgress;\n        }\n\n        if (requestOptions.onDownloadProgress) {\n          request.onDownloadProgress = requestOptions.onDownloadProgress;\n        }\n\n        if (requestOptions.shouldDeserialize !== undefined) {\n          operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n        }\n\n        if (requestOptions.allowInsecureConnection) {\n          request.allowInsecureConnection = true;\n        }\n      }\n\n      if (options.abortSignal) {\n        request.abortSignal = options.abortSignal;\n      }\n\n      if (options.tracingOptions) {\n        request.tracingOptions = options.tracingOptions;\n      }\n    }\n\n    if (this._allowInsecureConnection) {\n      request.allowInsecureConnection = true;\n    }\n\n    if (request.streamResponseStatusCodes === undefined) {\n      request.streamResponseStatusCodes = getStreamingResponseStatusCodes(operationSpec);\n    }\n\n    try {\n      const rawResponse = await this.sendRequest(request);\n      const flatResponse = flattenResponse(\n        rawResponse,\n        operationSpec.responses[rawResponse.status],\n      ) as T;\n      if (options?.onResponse) {\n        options.onResponse(rawResponse, flatResponse);\n      }\n      return flatResponse;\n    } catch (error: any) {\n      if (typeof error === \"object\" && error?.response) {\n        const rawResponse = error.response;\n        const flatResponse = flattenResponse(\n          rawResponse,\n          operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"],\n        );\n        error.details = flatResponse;\n        if (options?.onResponse) {\n          options.onResponse(rawResponse, flatResponse, error);\n        }\n      }\n      throw error;\n    }\n  }\n}\n\nfunction createDefaultPipeline(options: ServiceClientOptions): Pipeline {\n  const credentialScopes = getCredentialScopes(options);\n  const credentialOptions =\n    options.credential && credentialScopes\n      ? { credentialScopes, credential: options.credential }\n      : undefined;\n\n  return createClientPipeline({\n    ...options,\n    credentialOptions,\n  });\n}\n\nfunction getCredentialScopes(options: ServiceClientOptions): string | string[] | undefined {\n  if (options.credentialScopes) {\n    return options.credentialScopes;\n  }\n\n  if (options.endpoint) {\n    return `${options.endpoint}/.default`;\n  }\n\n  if (options.baseUri) {\n    return `${options.baseUri}/.default`;\n  }\n\n  if (options.credential && !options.credentialScopes) {\n    throw new Error(\n      `When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`,\n    );\n  }\n\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AuthorizeRequestOnChallengeOptions } from \"@azure/core-rest-pipeline\";\nimport { logger as coreClientLogger } from \"./log.js\";\nimport { decodeStringToString } from \"./base64.js\";\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Bearer d=\"e\", f=\"g\"`.\n * Into: `[ { a: 'b', c: 'd' }, { d: 'e', f: 'g' } ]`.\n *\n * @internal\n */\nexport function parseCAEChallenge(challenges: string): any[] {\n  const bearerChallenges = `, ${challenges.trim()}`.split(\", Bearer \").filter((x) => x);\n  return bearerChallenges.map((challenge) => {\n    const challengeParts = `${challenge.trim()}, `.split('\", ').filter((x) => x);\n    const keyValuePairs = challengeParts.map((keyValue) =>\n      (([key, value]) => ({ [key]: value }))(keyValue.trim().split('=\"')),\n    );\n    // Key-value pairs to plain object:\n    return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {});\n  });\n}\n\n/**\n * CAE Challenge structure\n */\nexport interface CAEChallenge {\n  scope: string;\n  claims: string;\n}\n\n/**\n * This function can be used as a callback for the `bearerTokenAuthenticationPolicy` of `@azure/core-rest-pipeline`, to support CAE challenges:\n * [Continuous Access Evaluation](https://docs.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation).\n *\n * Call the `bearerTokenAuthenticationPolicy` with the following options:\n *\n * ```ts\n * import { bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n * import { authorizeRequestOnClaimChallenge } from \"@azure/core-client\";\n *\n * const bearerTokenAuthenticationPolicy = bearerTokenAuthenticationPolicy({\n *   authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge\n * });\n * ```\n *\n * Once provided, the `bearerTokenAuthenticationPolicy` policy will internally handle Continuous Access Evaluation (CAE) challenges.\n * When it can't complete a challenge it will return the 401 (unauthorized) response from ARM.\n *\n * Example challenge with claims:\n *\n * ```\n * Bearer authorization_uri=\"https://login.windows-ppe.net/\", error=\"invalid_token\",\n * error_description=\"User session has been revoked\",\n * claims=\"eyJhY2Nlc3NfdG9rZW4iOnsibmJmIjp7ImVzc2VudGlhbCI6dHJ1ZSwgInZhbHVlIjoiMTYwMzc0MjgwMCJ9fX0=\"\n * ```\n */\nexport async function authorizeRequestOnClaimChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n): Promise<boolean> {\n  const { scopes, response } = onChallengeOptions;\n  const logger = onChallengeOptions.logger || coreClientLogger;\n\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (!challenge) {\n    logger.info(\n      `The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow.`,\n    );\n    return false;\n  }\n  const challenges: CAEChallenge[] = parseCAEChallenge(challenge) || [];\n\n  const parsedChallenge = challenges.find((x) => x.claims);\n  if (!parsedChallenge) {\n    logger.info(\n      `The WWW-Authenticate header was missing the necessary \"claims\" to perform the Continuous Access Evaluation authentication flow.`,\n    );\n    return false;\n  }\n\n  const accessToken = await onChallengeOptions.getAccessToken(\n    parsedChallenge.scope ? [parsedChallenge.scope] : scopes,\n    {\n      claims: decodeStringToString(parsedChallenge.claims),\n    },\n  );\n\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  return true;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AuthorizeRequestOnChallengeOptions,\n  PipelineRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\n\nimport { GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n  DefaultScope: \"/.default\",\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n  },\n};\n\nfunction isUuid(text: string): boolean {\n  return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(\n    text,\n  );\n}\n\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://docs.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nexport const authorizeRequestOnTenantChallenge: (\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n) => Promise<boolean> = async (challengeOptions) => {\n  const requestOptions = requestToOptions(challengeOptions.request);\n  const challenge = getChallenge(challengeOptions.response);\n  if (challenge) {\n    const challengeInfo: Challenge = parseChallenge(challenge);\n    const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n    const tenantId = extractTenantId(challengeInfo);\n    if (!tenantId) {\n      return false;\n    }\n    const accessToken = await challengeOptions.getAccessToken(challengeScopes, {\n      ...requestOptions,\n      tenantId,\n    });\n\n    if (!accessToken) {\n      return false;\n    }\n\n    challengeOptions.request.headers.set(\n      Constants.HeaderConstants.AUTHORIZATION,\n      `Bearer ${accessToken.token}`,\n    );\n    return true;\n  }\n  return false;\n};\n\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo: Challenge): string | undefined {\n  const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n  const pathSegments = parsedAuthUri.pathname.split(\"/\");\n  const tenantId = pathSegments[1];\n  if (tenantId && isUuid(tenantId)) {\n    return tenantId;\n  }\n  return undefined;\n}\n\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n  challengeInfo: Challenge,\n): string[] {\n  if (!challengeInfo.resource_id) {\n    return challengeOptions.scopes;\n  }\n\n  const challengeScopes = new URL(challengeInfo.resource_id);\n  challengeScopes.pathname = Constants.DefaultScope;\n  let scope = challengeScopes.toString();\n  if (scope === \"https://disk.azure.com/.default\") {\n    // the extra slash is required by the service\n    scope = \"https://disk.azure.com//.default\";\n  }\n  return [scope];\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response: PipelineResponse): string | undefined {\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (response.status === 401 && challenge) {\n    return challenge;\n  }\n  return;\n}\n\n/**\n * Challenge structure\n */\ninterface Challenge {\n  authorization_uri: string;\n  resource_id?: string;\n}\n\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge: string): Challenge {\n  const bearerChallenge = challenge.slice(\"Bearer \".length);\n  const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n  const keyValuePairs = challengeParts.map((keyValue) =>\n    (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")),\n  );\n  // Key-value pairs to plain object:\n  return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {} as Challenge);\n}\n\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request: PipelineRequest): GetTokenOptions {\n  return {\n    abortSignal: request.abortSignal,\n    requestOptions: {\n      timeout: request.timeout,\n    },\n    tracingOptions: request.tracingOptions,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpMethods,\n  ProxySettings,\n  createHttpHeaders,\n  createPipelineRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders as HttpHeadersV2, PipelineRequest } from \"@azure/core-rest-pipeline\";\n\n// We use a custom symbol to cache a reference to the original request without\n// exposing it on the public interface.\nconst originalRequestSymbol = Symbol(\"Original PipelineRequest\");\ntype CompatWebResourceLike = WebResourceLike & { [originalRequestSymbol]?: PipelineRequest };\n// Symbol.for() will return the same symbol if it's already been created\n// This particular one is used in core-client to handle the case of when a request is\n// cloned but we need to retrieve the OperationSpec and OperationArguments from the\n// original request.\nconst originalClientRequestSymbol = Symbol.for(\"@azure/core-client original request\");\ntype PipelineRequestWithOriginal = PipelineRequest & {\n  [originalClientRequestSymbol]?: PipelineRequest;\n};\n\nexport function toPipelineRequest(\n  webResource: WebResourceLike,\n  options: {\n    originalRequest?: PipelineRequest;\n  } = {},\n): PipelineRequest {\n  const compatWebResource = webResource as CompatWebResourceLike;\n  const request = compatWebResource[originalRequestSymbol];\n  const headers = createHttpHeaders(webResource.headers.toJson({ preserveCase: true }));\n  if (request) {\n    request.headers = headers;\n    return request;\n  } else {\n    const newRequest = createPipelineRequest({\n      url: webResource.url,\n      method: webResource.method,\n      headers,\n      withCredentials: webResource.withCredentials,\n      timeout: webResource.timeout,\n      requestId: webResource.requestId,\n      abortSignal: webResource.abortSignal,\n      body: webResource.body,\n      formData: webResource.formData,\n      disableKeepAlive: !!webResource.keepAlive,\n      onDownloadProgress: webResource.onDownloadProgress,\n      onUploadProgress: webResource.onUploadProgress,\n      proxySettings: webResource.proxySettings,\n      streamResponseStatusCodes: webResource.streamResponseStatusCodes,\n    });\n    if (options.originalRequest) {\n      (newRequest as PipelineRequestWithOriginal)[originalClientRequestSymbol] =\n        options.originalRequest;\n    }\n    return newRequest;\n  }\n}\n\nexport function toWebResourceLike(\n  request: PipelineRequest,\n  options?: { createProxy?: boolean; originalRequest?: PipelineRequest },\n): WebResourceLike {\n  const originalRequest = options?.originalRequest ?? request;\n  const webResource: WebResourceLike = {\n    url: request.url,\n    method: request.method,\n    headers: toHttpHeadersLike(request.headers),\n    withCredentials: request.withCredentials,\n    timeout: request.timeout,\n    requestId: request.headers.get(\"x-ms-client-request-id\") || request.requestId,\n    abortSignal: request.abortSignal,\n    body: request.body,\n    formData: request.formData,\n    keepAlive: !!request.disableKeepAlive,\n    onDownloadProgress: request.onDownloadProgress,\n    onUploadProgress: request.onUploadProgress,\n    proxySettings: request.proxySettings,\n    streamResponseStatusCodes: request.streamResponseStatusCodes,\n    clone(): WebResourceLike {\n      throw new Error(\"Cannot clone a non-proxied WebResourceLike\");\n    },\n    prepare(): WebResourceLike {\n      throw new Error(\"WebResourceLike.prepare() is not supported by @azure/core-http-compat\");\n    },\n    validateRequestProperties(): void {\n      /** do nothing */\n    },\n  };\n\n  if (options?.createProxy) {\n    return new Proxy(webResource, {\n      get(target, prop, receiver) {\n        if (prop === originalRequestSymbol) {\n          return request;\n        } else if (prop === \"clone\") {\n          return () => {\n            return toWebResourceLike(toPipelineRequest(webResource, { originalRequest }), {\n              createProxy: true,\n              originalRequest,\n            });\n          };\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target: any, prop, value, receiver) {\n        if (prop === \"keepAlive\") {\n          request.disableKeepAlive = !value;\n        }\n        const passThroughProps = [\n          \"url\",\n          \"method\",\n          \"withCredentials\",\n          \"timeout\",\n          \"requestId\",\n          \"abortSignal\",\n          \"body\",\n          \"formData\",\n          \"onDownloadProgress\",\n          \"onUploadProgress\",\n          \"proxySettings\",\n          \"streamResponseStatusCodes\",\n        ];\n\n        if (typeof prop === \"string\" && passThroughProps.includes(prop)) {\n          (request as any)[prop] = value;\n        }\n\n        return Reflect.set(target, prop, value, receiver);\n      },\n    });\n  } else {\n    return webResource;\n  }\n}\n\n/**\n * Converts HttpHeaders from core-rest-pipeline to look like\n * HttpHeaders from core-http.\n * @param headers - HttpHeaders from core-rest-pipeline\n * @returns HttpHeaders as they looked in core-http\n */\nexport function toHttpHeadersLike(headers: HttpHeadersV2): HttpHeadersLike {\n  return new HttpHeaders(headers.toJSON({ preserveCase: true }));\n}\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(options?: { preserveCase?: boolean }): RawHttpHeaders;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString(),\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    return this.toJson({ preserveCase: true });\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[header.name] = header.value;\n      }\n    } else {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[getHeaderKey(header.name)] = header.value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson({ preserveCase: true }));\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    const resultPreservingCasing: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      resultPreservingCasing[header.name] = header.value;\n    }\n    return new HttpHeaders(resultPreservingCasing);\n  }\n}\n\n/**\n * A description of a HTTP request to be made to a remote server.\n */\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   * @deprecated Use streamResponseStatusCodes property instead.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * A list of response status codes whose corresponding HttpOperationResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   * Note: this a no-op for compat purposes.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * This is a no-op for compat purposes and will throw if called.\n   */\n  prepare(options: unknown): WebResourceLike;\n}\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { FullOperationResponse } from \"@azure/core-client\";\nimport { PipelineResponse, createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport {\n  HttpHeadersLike,\n  WebResourceLike,\n  toHttpHeadersLike,\n  toPipelineRequest,\n  toWebResourceLike,\n} from \"./util.js\";\n/**\n * Http Response that is compatible with the core-v1(core-http).\n */\nexport interface CompatResponse extends Omit<FullOperationResponse, \"request\" | \"headers\"> {\n  /**\n   * A description of a HTTP request to be made to a remote server.\n   */\n  request: WebResourceLike;\n  /**\n   * A collection of HTTP header key/value pairs.\n   */\n  headers: HttpHeadersLike;\n}\n\nconst originalResponse = Symbol(\"Original FullOperationResponse\");\ntype ExtendedCompatResponse = CompatResponse & { [originalResponse]?: FullOperationResponse };\n\n/**\n * A helper to convert response objects from the new pipeline back to the old one.\n * @param response - A response object from core-client.\n * @returns A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toCompatResponse(\n  response: FullOperationResponse,\n  options?: { createProxy?: boolean },\n): CompatResponse {\n  let request = toWebResourceLike(response.request);\n  let headers = toHttpHeadersLike(response.headers);\n  if (options?.createProxy) {\n    return new Proxy(response, {\n      get(target, prop, receiver) {\n        if (prop === \"headers\") {\n          return headers;\n        } else if (prop === \"request\") {\n          return request;\n        } else if (prop === originalResponse) {\n          return response;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target, prop, value, receiver) {\n        if (prop === \"headers\") {\n          headers = value;\n        } else if (prop === \"request\") {\n          request = value;\n        }\n        return Reflect.set(target, prop, value, receiver);\n      },\n    }) as unknown as CompatResponse;\n  } else {\n    return {\n      ...response,\n      request,\n      headers,\n    };\n  }\n}\n\n/**\n * A helper to convert back to a PipelineResponse\n * @param compatResponse - A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toPipelineResponse(compatResponse: CompatResponse): PipelineResponse {\n  const extendedCompatResponse = compatResponse as ExtendedCompatResponse;\n  const response = extendedCompatResponse[originalResponse];\n  const headers = createHttpHeaders(compatResponse.headers.toJson({ preserveCase: true }));\n  if (response) {\n    response.headers = headers;\n    return response;\n  } else {\n    return {\n      ...compatResponse,\n      headers,\n      request: toPipelineRequest(compatResponse.request),\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeepAliveOptions } from \"./policies/keepAliveOptions.js\";\nimport {\n  createDisableKeepAlivePolicy,\n  pipelineContainsDisableKeepAlivePolicy,\n} from \"./policies/disableKeepAlivePolicy.js\";\nimport { RedirectOptions } from \"./policies/redirectOptions.js\";\nimport { redirectPolicyName } from \"@azure/core-rest-pipeline\";\nimport {\n  CommonClientOptions,\n  FullOperationResponse,\n  OperationArguments,\n  OperationSpec,\n  RawResponseCallback,\n  ServiceClient,\n  ServiceClientOptions,\n} from \"@azure/core-client\";\nimport { toCompatResponse } from \"./response.js\";\n\n/**\n * Options specific to Shim Clients.\n */\nexport interface ExtendedClientOptions {\n  /**\n   * Options to disable keep alive.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Options to redirect requests.\n   */\n  redirectOptions?: RedirectOptions;\n}\n\n/**\n * Options that shim clients are expected to expose.\n */\nexport type ExtendedServiceClientOptions = ServiceClientOptions & ExtendedClientOptions;\n\n/**\n * The common set of options that custom shim clients are expected to expose.\n */\nexport type ExtendedCommonClientOptions = CommonClientOptions & ExtendedClientOptions;\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nexport class ExtendedServiceClient extends ServiceClient {\n  constructor(options: ExtendedServiceClientOptions) {\n    super(options);\n\n    if (\n      options.keepAliveOptions?.enable === false &&\n      !pipelineContainsDisableKeepAlivePolicy(this.pipeline)\n    ) {\n      this.pipeline.addPolicy(createDisableKeepAlivePolicy());\n    }\n\n    if (options.redirectOptions?.handleRedirects === false) {\n      this.pipeline.removePolicy({\n        name: redirectPolicyName,\n      });\n    }\n  }\n\n  /**\n   * Compatible send operation request function.\n   *\n   * @param operationArguments - Operation arguments\n   * @param operationSpec - Operation Spec\n   * @returns\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const userProvidedCallBack: RawResponseCallback | undefined =\n      operationArguments?.options?.onResponse;\n\n    let lastResponse: FullOperationResponse | undefined;\n\n    function onResponse(\n      rawResponse: FullOperationResponse,\n      flatResponse: unknown,\n      error?: unknown,\n    ): void {\n      lastResponse = rawResponse;\n      if (userProvidedCallBack) {\n        userProvidedCallBack(rawResponse, flatResponse, error);\n      }\n    }\n\n    operationArguments.options = {\n      ...operationArguments.options,\n      onResponse,\n    };\n\n    const result: T = await super.sendOperationRequest(operationArguments, operationSpec);\n\n    if (lastResponse) {\n      Object.defineProperty(result, \"_response\", {\n        value: toCompatResponse(lastResponse),\n      });\n    }\n\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { WebResourceLike, toPipelineRequest, toWebResourceLike } from \"../util.js\";\nimport { CompatResponse, toCompatResponse, toPipelineResponse } from \"../response.js\";\n\n/**\n * A compatible interface for core-http request policies\n */\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<CompatResponse>;\n}\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nexport enum HttpPipelineLogLevel {\n  ERROR = 1,\n  INFO = 3,\n  OFF = 0,\n  WARNING = 2,\n}\n\n/**\n * An interface for compatibility with RequestPolicy\n */\nexport interface RequestPolicyOptionsLike {\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n}\n\nconst mockRequestPolicyOptions: RequestPolicyOptionsLike = {\n  log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n    /* do nothing */\n  },\n  shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n    return false;\n  },\n};\n\n/**\n * An interface for compatibility with core-http's RequestPolicyFactory\n */\nexport interface RequestPolicyFactory {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n}\n\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nexport const requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nexport function createRequestPolicyFactoryPolicy(\n  factories: RequestPolicyFactory[],\n): PipelinePolicy {\n  const orderedFactories = factories.slice().reverse();\n\n  return {\n    name: requestPolicyFactoryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let httpPipeline: RequestPolicy = {\n        async sendRequest(httpRequest) {\n          const response = await next(toPipelineRequest(httpRequest));\n          return toCompatResponse(response, { createProxy: true });\n        },\n      };\n      for (const factory of orderedFactories) {\n        httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n      }\n\n      const webResourceLike = toWebResourceLike(request, { createProxy: true });\n      const response = await httpPipeline.sendRequest(webResourceLike);\n      return toPipelineResponse(response);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpClient, PipelineRequest, PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport { RequestPolicy } from \"./policies/requestPolicyFactoryPolicy.js\";\nimport { toPipelineResponse } from \"./response.js\";\nimport { toWebResourceLike } from \"./util.js\";\n\n/**\n * Converts a RequestPolicy based HttpClient to a PipelineRequest based HttpClient.\n * @param requestPolicyClient - A HttpClient compatible with core-http\n * @returns A HttpClient compatible with core-rest-pipeline\n */\nexport function convertHttpClient(requestPolicyClient: RequestPolicy): HttpClient {\n  return {\n    sendRequest: async (request: PipelineRequest): Promise<PipelineResponse> => {\n      const response = await requestPolicyClient.sendRequest(\n        toWebResourceLike(request, { createProxy: true }),\n      );\n      return toPipelineResponse(response);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n\n  /**\n   * property name for a CDATA section.\n   */\n  cdataPropName?: string;\n\n  /**\n   * XML nodes to exclude from parsing.\n   */\n  stopNodes?: string[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/// <reference lib=\"dom\"/>\nimport { XML_ATTRKEY, XML_CHARKEY, XmlOptions } from \"./xml.common.js\";\n\nif (!document || !DOMParser || !Node || !XMLSerializer) {\n  throw new Error(\n    `This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. `,\n  );\n}\n\n// Policy to make our code Trusted Types compliant at running time.\n//   https://github.com/w3c/webappsec-trusted-types\n// We are calling DOMParser.parseFromString() to parse XML payload from Azure services.\n// The parsed DOM object is not exposed to outside. Scripts are disabled when parsing\n// according to the spec.  There are no HTML/XSS security concerns on the usage of\n// parseFromString() here.\nlet ttPolicy: Pick<TrustedTypePolicy, \"createHTML\"> | undefined;\ntry {\n  if (typeof self.trustedTypes !== \"undefined\") {\n    ttPolicy = self.trustedTypes.createPolicy(\"@azure/core-xml#xml.browser\", {\n      createHTML: (s: string) => s,\n    });\n  }\n} catch (e: any) {\n  console.warn('Could not create trusted types policy \"@azure/core-xml#xml.browser\"');\n}\n\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts: XmlOptions = {}): Promise<any> {\n  try {\n    const updatedOptions: Required<XmlOptions> = {\n      rootName: opts.rootName ?? \"\",\n      includeRoot: opts.includeRoot ?? false,\n      xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY,\n      cdataPropName: opts.cdataPropName ?? \"__cdata\",\n      stopNodes: opts.stopNodes ?? [],\n    };\n    const dom = parser.parseFromString(\n      (ttPolicy?.createHTML(str) ?? str) as string,\n      \"application/xml\",\n    );\n    throwIfError(dom);\n\n    let obj;\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err: any) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS: string | undefined;\n\nfunction getErrorNamespace(): string {\n  if (errorNS === undefined) {\n    try {\n      const invalidXML = (ttPolicy?.createHTML(\"INVALID\") ?? \"INVALID\") as string;\n      errorNS =\n        parser.parseFromString(invalidXML, \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n          .namespaceURI! ?? \"\";\n    } catch (ignored: any) {\n      // Most browsers will return a document containing <parsererror>, but IE will throw.\n      errorNS = \"\";\n    }\n  }\n\n  return errorNS;\n}\n\nfunction throwIfError(dom: Document): void {\n  const parserErrors = dom.getElementsByTagName(\"parsererror\");\n  if (parserErrors.length > 0 && getErrorNamespace()) {\n    for (let i = 0; i < parserErrors.length; i++) {\n      if (parserErrors[i].namespaceURI === errorNS) {\n        throw new Error(parserErrors[i].innerHTML);\n      }\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node, options: Required<XmlOptions>): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n\n      // Check if CData\n      if (child?.nodeType === Node.CDATA_SECTION_NODE) {\n        // Already in the CDATA\n        result = child.textContent;\n      } else if (child?.firstChild?.nodeType === Node.CDATA_SECTION_NODE) {\n        // Look if child is CDATA\n        result[child.nodeName] = child.textContent;\n      } else if (child.nodeType !== Node.TEXT_NODE) {\n        // Ignore leading/trailing whitespace nodes\n        const childObject: any = domToObject(child, options);\n\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: unknown, opts: XmlOptions = {}): string {\n  const updatedOptions: Required<XmlOptions> = {\n    rootName: opts.rootName ?? \"root\",\n    includeRoot: opts.includeRoot ?? false,\n    xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY,\n    cdataPropName: opts.cdataPropName ?? \"__cdata\",\n    stopNodes: opts.stopNodes ?? [],\n  };\n  const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom)\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string, options: Required<XmlOptions>): Node[] {\n  if (\n    obj === undefined ||\n    obj === null ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName, options)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    const elem = doc.createElement(elementName);\n    for (const key of Object.keys(obj)) {\n      if (key === XML_ATTRKEY) {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else if (key === options.cdataPropName) {\n        const cdataElement = doc.createCDATASection(obj[key].toString());\n        elem.appendChild(cdataElement);\n      } else {\n        for (const child of buildNode(obj[key], key, options)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shims-public.d.ts\" />\n\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be added\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be removed\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal: AbortSignal): void {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    // Create a copy of listeners so mutations to the array\n    // (e.g. via removeListener calls) don't affect the listeners\n    // we invoke.\n    listeners.slice().forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignal, AbortSignalLike, abortSignal } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      // eslint-disable-next-line prefer-rest-params\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   */\n  public get signal(): AbortSignal {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   */\n  abort(): void {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   * @param ms - Elapsed time in milliseconds to trigger an abort.\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyOptionsLike,\n  WebResourceLike,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike,\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"12.24.0\";\nexport const SERVICE_VERSION: string = \"2024-08-04\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 4000 * 1024 * 1024; // 4000MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES: number = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const REQUEST_TIMEOUT: number = 100 * 1000; // In ms\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    VERSIONID: \"versionid\",\n    TIMEOUT: \"timeout\",\n  },\n};\n\nexport const HTTPURLConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416,\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\",\n  X_MS_CopySourceErrorCode: \"x-ms-copy-source-error-code\",\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\n\nexport const EncryptionAlgorithmAES25 = \"AES256\";\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\nexport const StorageBlobLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\",\n  \"x-ms-copy-source-error-code\",\n  \"x-ms-copy-source-status-code\",\n  \"x-ms-if-tags\",\n  \"x-ms-source-if-tags\",\n];\n\nexport const StorageBlobLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\",\n];\n\nexport const BlobUsesCustomerSpecifiedEncryptionMsg = \"BlobUsesCustomerSpecifiedEncryption\";\nexport const BlobDoesNotUseCustomerSpecifiedEncryption =\n  \"BlobDoesNotUseCustomerSpecifiedEncryption\";\n\n/// List of ports used for path style addressing.\n/// Path style addressing means that storage account is put in URI's Path segment in instead of in host.\nexport const PathStylePorts = [\n  \"10000\",\n  \"10001\",\n  \"10002\",\n  \"10003\",\n  \"10004\",\n  \"10100\",\n  \"10101\",\n  \"10102\",\n  \"10103\",\n  \"10104\",\n  \"11000\",\n  \"11001\",\n  \"11002\",\n  \"11003\",\n  \"11004\",\n  \"11100\",\n  \"11101\",\n  \"11102\",\n  \"11103\",\n  \"11104\",\n];\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { HttpHeaders, createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\n\nimport {\n  BlobQueryArrowConfiguration,\n  BlobQueryCsvTextConfiguration,\n  BlobQueryJsonTextConfiguration,\n  BlobQueryParquetConfiguration,\n} from \"../Clients\";\nimport {\n  QuerySerialization,\n  BlobTags,\n  BlobName,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  PageRange,\n  ClearRange,\n} from \"../generated/src/models\";\nimport {\n  DevelopmentConnectionString,\n  HeaderConstants,\n  PathStylePorts,\n  URLConstants,\n} from \"./constants\";\nimport {\n  Tags,\n  ObjectReplicationPolicy,\n  ObjectReplicationRule,\n  ObjectReplicationStatus,\n  HttpAuthorization,\n} from \"../models\";\nimport {\n  ListBlobsFlatSegmentResponseModel,\n  BlobItemInternal as BlobItemInternalModel,\n  ListBlobsHierarchySegmentResponseModel,\n  BlobPrefix as BlobPrefixModel,\n  PageBlobGetPageRangesDiffResponseModel,\n  PageRangeInfo,\n} from \"../generatedModels\";\nimport { HttpHeadersLike, WebResourceLike } from \"@azure/core-http-compat\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\",\n): string {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\",\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri,\n    };\n  } else {\n    // SAS connection string\n\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    let accountName = getValueInConnString(connectionString, \"AccountName\");\n    // if accountName is empty, try to read it from BlobEndpoint\n    if (!accountName) {\n      accountName = getAccountNameFromUrl(blobEndpoint);\n    }\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    // client constructors assume accountSas does *not* start with ?\n    if (accountSas.startsWith(\"?\")) {\n      accountSas = accountSas.substring(1);\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = new URL(url);\n  const encodedName = encodeURIComponent(name);\n  const encodedValue = value ? encodeURIComponent(value) : undefined;\n  // mutating searchParams will change the encoding, so we have to do this ourselves\n  const searchString = urlParsed.search === \"\" ? \"?\" : urlParsed.search;\n\n  const searchPieces: string[] = [];\n\n  for (const pair of searchString.slice(1).split(\"&\")) {\n    if (pair) {\n      const [key] = pair.split(\"=\", 2);\n      if (key !== encodedName) {\n        searchPieces.push(pair);\n      }\n    }\n  }\n  if (encodedValue) {\n    searchPieces.push(`${encodedName}=${encodedValue}`);\n  }\n\n  urlParsed.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = new URL(url);\n  return urlParsed.searchParams.get(name) ?? undefined;\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = new URL(url);\n  urlParsed.hostname = host;\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.pathname;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLScheme(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.protocol.endsWith(\":\") ? urlParsed.protocol.slice(0, -1) : urlParsed.protocol;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = new URL(url);\n  const pathString = urlParsed.pathname;\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.search || \"\";\n  queryString = queryString.trim();\n  if (queryString !== \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = new URL(url).search;\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substring(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = new URL(url);\n\n  let query = urlParsed.search;\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.search = query;\n  return urlParsed.toString();\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @param blockIndex -\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error,\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @param currentString -\n * @param targetLength -\n * @param padString -\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \",\n): string {\n  // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = createHttpHeaders();\n  for (const [name, value] of originalHeader) {\n    if (name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(name, \"*****\");\n    } else if (name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(name, sanitizeURL(value));\n    } else {\n      headers.set(name, value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @param str1 -\n * @param str2 -\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl = new URL(url);\n  let accountName;\n  try {\n    if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.hostname.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.pathname.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error: any) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URL): boolean {\n  const host = parsedUrl.host;\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port) or host.docker.internal, use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return (\n    /^.*:.*:.*$|^(localhost|host.docker.internal)(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n      host,\n    ) ||\n    (Boolean(parsedUrl.port) && PathStylePorts.includes(parsedUrl.port))\n  );\n}\n\n/**\n * Convert Tags to encoded string.\n *\n * @param tags -\n */\nexport function toBlobTagsString(tags?: Tags): string | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const tagPairs = [];\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      tagPairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    }\n  }\n\n  return tagPairs.join(\"&\");\n}\n\n/**\n * Convert Tags type to BlobTags.\n *\n * @param tags -\n */\nexport function toBlobTags(tags?: Tags): BlobTags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: BlobTags = {\n    blobTagSet: [],\n  };\n\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      res.blobTagSet.push({\n        key,\n        value,\n      });\n    }\n  }\n  return res;\n}\n\n/**\n * Covert BlobTags to Tags type.\n *\n * @param tags -\n */\nexport function toTags(tags?: BlobTags): Tags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: Tags = {};\n  for (const blobTag of tags.blobTagSet) {\n    res[blobTag.key] = blobTag.value;\n  }\n  return res;\n}\n\n/**\n * Convert BlobQueryTextConfiguration to QuerySerialization type.\n *\n * @param textConfiguration -\n */\nexport function toQuerySerialization(\n  textConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration\n    | BlobQueryParquetConfiguration,\n): QuerySerialization | undefined {\n  if (textConfiguration === undefined) {\n    return undefined;\n  }\n\n  switch (textConfiguration.kind) {\n    case \"csv\":\n      return {\n        format: {\n          type: \"delimited\",\n          delimitedTextConfiguration: {\n            columnSeparator: textConfiguration.columnSeparator || \",\",\n            fieldQuote: textConfiguration.fieldQuote || \"\",\n            recordSeparator: textConfiguration.recordSeparator,\n            escapeChar: textConfiguration.escapeCharacter || \"\",\n            headersPresent: textConfiguration.hasHeaders || false,\n          },\n        },\n      };\n    case \"json\":\n      return {\n        format: {\n          type: \"json\",\n          jsonTextConfiguration: {\n            recordSeparator: textConfiguration.recordSeparator,\n          },\n        },\n      };\n    case \"arrow\":\n      return {\n        format: {\n          type: \"arrow\",\n          arrowConfiguration: {\n            schema: textConfiguration.schema,\n          },\n        },\n      };\n    case \"parquet\":\n      return {\n        format: {\n          type: \"parquet\",\n        },\n      };\n\n    default:\n      throw Error(\"Invalid BlobQueryTextConfiguration.\");\n  }\n}\n\nexport function parseObjectReplicationRecord(\n  objectReplicationRecord?: Record<string, string>,\n): ObjectReplicationPolicy[] | undefined {\n  if (!objectReplicationRecord) {\n    return undefined;\n  }\n\n  if (\"policy-id\" in objectReplicationRecord) {\n    // If the dictionary contains a key with policy id, we are not required to do any parsing since\n    // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.\n    return undefined;\n  }\n\n  const orProperties: ObjectReplicationPolicy[] = [];\n  for (const key in objectReplicationRecord) {\n    const ids = key.split(\"_\");\n    const policyPrefix = \"or-\";\n    if (ids[0].startsWith(policyPrefix)) {\n      ids[0] = ids[0].substring(policyPrefix.length);\n    }\n    const rule: ObjectReplicationRule = {\n      ruleId: ids[1],\n      replicationStatus: objectReplicationRecord[key] as ObjectReplicationStatus,\n    };\n    const policyIndex = orProperties.findIndex((policy) => policy.policyId === ids[0]);\n    if (policyIndex > -1) {\n      orProperties[policyIndex].rules.push(rule);\n    } else {\n      orProperties.push({\n        policyId: ids[0],\n        rules: [rule],\n      });\n    }\n  }\n  return orProperties;\n}\n\n/**\n * Attach a TokenCredential to an object.\n *\n * @param thing -\n * @param credential -\n */\nexport function attachCredential<T>(thing: T, credential: TokenCredential): T {\n  (thing as any).credential = credential;\n  return thing;\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization,\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n\nexport function BlobNameToString(name: BlobName): string {\n  if (name.encoded) {\n    return decodeURIComponent(name.content!);\n  } else {\n    return name.content!;\n  }\n}\n\nexport function ConvertInternalResponseOfListBlobFlat(\n  internalResponse: ListBlobsFlatSegmentResponse,\n): ListBlobsFlatSegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function ConvertInternalResponseOfListBlobHierarchy(\n  internalResponse: ListBlobsHierarchySegmentResponse,\n): ListBlobsHierarchySegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobPrefixes: internalResponse.segment.blobPrefixes?.map((blobPrefixInternal) => {\n        const blobPrefix: BlobPrefixModel = {\n          ...blobPrefixInternal,\n          name: BlobNameToString(blobPrefixInternal.name),\n        };\n        return blobPrefix;\n      }),\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function* ExtractPageRangeInfoItems(\n  getPageRangesSegment: PageBlobGetPageRangesDiffResponseModel,\n): IterableIterator<PageRangeInfo> {\n  let pageRange: PageRange[] = [];\n  let clearRange: ClearRange[] = [];\n\n  if (getPageRangesSegment.pageRange) pageRange = getPageRangesSegment.pageRange;\n  if (getPageRangesSegment.clearRange) clearRange = getPageRangesSegment.clearRange;\n\n  let pageRangeIndex = 0;\n  let clearRangeIndex = 0;\n\n  while (pageRangeIndex < pageRange.length && clearRangeIndex < clearRange.length) {\n    if (pageRange[pageRangeIndex].start < clearRange[clearRangeIndex].start) {\n      yield {\n        start: pageRange[pageRangeIndex].start,\n        end: pageRange[pageRangeIndex].end,\n        isClear: false,\n      };\n      ++pageRangeIndex;\n    } else {\n      yield {\n        start: clearRange[clearRangeIndex].start,\n        end: clearRange[clearRangeIndex].end,\n        isClear: true,\n      };\n      ++clearRangeIndex;\n    }\n  }\n\n  for (; pageRangeIndex < pageRange.length; ++pageRangeIndex) {\n    yield {\n      start: pageRange[pageRangeIndex].start,\n      end: pageRange[pageRangeIndex].end,\n      isClear: false,\n    };\n  }\n\n  for (; clearRangeIndex < clearRange.length; ++clearRangeIndex) {\n    yield {\n      start: clearRange[clearRangeIndex].start,\n      end: clearRange[clearRangeIndex].end,\n      isClear: true,\n    };\n  }\n}\n\n/**\n * Escape the blobName but keep path separator ('/').\n */\nexport function EscapePath(blobName: string): string {\n  const split = blobName.split(\"/\");\n  for (let i = 0; i < split.length; i++) {\n    split[i] = encodeURIComponent(split[i]);\n  }\n  return split.join(\"/\");\n}\n\n/**\n * A representation of an HTTP response that\n * includes a reference to the request that\n * originated it.\n */\nexport interface HttpResponse {\n  /**\n   * The headers from the response.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * The original request that resulted in this response.\n   */\n  request: WebResourceLike;\n  /**\n   * The HTTP status code returned from the service.\n   */\n  status: number;\n}\n\n/**\n * An object with a _response property that has\n * headers already parsed into a typed object.\n */\nexport interface ResponseWithHeaders<Headers> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n  };\n}\n\n/**\n * An object with a _response property that has body\n * and headers already parsed into known types.\n */\nexport interface ResponseWithBody<Headers, Body> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Body;\n  };\n}\n\n/**\n * An object with a simple _response property.\n */\nexport interface ResponseLike {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse;\n}\n\n/**\n * A type that represents an operation result with a known _response property.\n */\nexport type WithResponse<T, Headers = undefined, Body = undefined> = T &\n  (Body extends object\n    ? ResponseWithBody<Headers, Body>\n    : Headers extends object\n      ? ResponseWithHeaders<Headers>\n      : ResponseLike);\n\n/**\n * A typesafe helper for ensuring that a given response object has\n * the original _response attached.\n * @param response - A response object from calling a client operation\n * @returns The same object, but with known _response property\n */\nexport function assertResponse<T extends object, Headers = undefined, Body = undefined>(\n  response: T,\n): WithResponse<T, Headers, Body> {\n  if (`_response` in response) {\n    return response as WithResponse<T, Headers, Body>;\n  }\n\n  throw new TypeError(`Unexpected response object ${response}`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    },\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS,\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!,\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost,\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number,\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString(),\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err: any) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError,\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`,\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\", // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport class StorageSharedKeyCredential {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport {\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions,\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createDefaultHttpClient, HttpClient } from \"@azure/core-rest-pipeline\";\n\nlet _defaultHttpClient: HttpClient;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!_defaultHttpClient) {\n    _defaultHttpClient = createDefaultHttpClient();\n  }\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * The programmatic identifier of the StorageBrowserPolicy.\n */\nexport const storageBrowserPolicyName = \"storageBrowserPolicy\";\n\n/**\n * storageBrowserPolicy is a policy used to prevent browsers from caching requests\n * and to remove cookies and explicit content-length headers.\n */\nexport function storageBrowserPolicy(): PipelinePolicy {\n  return {\n    name: storageBrowserPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNode) {\n        return next(request);\n      }\n\n      if (request.method === \"GET\" || request.method === \"HEAD\") {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n          new Date().getTime().toString(),\n        );\n      }\n\n      request.headers.delete(HeaderConstants.COOKIE);\n\n      // According to XHR standards, content-length should be fully controlled by browsers\n      request.headers.delete(HeaderConstants.CONTENT_LENGTH);\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  SendRequest,\n  PipelineResponse,\n  isRestError,\n  RestError,\n} from \"@azure/core-rest-pipeline\";\nimport { getErrorMessage } from \"@azure/core-util\";\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * Name of the {@link storageRetryPolicy}\n */\nexport const storageRetryPolicyName = \"storageRetryPolicy\";\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n} as const;\n\nconst retriableErrors = [\n  \"ETIMEDOUT\",\n  \"ESOCKETTIMEDOUT\",\n  \"ECONNREFUSED\",\n  \"ECONNRESET\",\n  \"ENOENT\",\n  \"ENOTFOUND\",\n  \"TIMEOUT\",\n  \"EPIPE\",\n  \"REQUEST_SEND_ERROR\",\n] as const;\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport function storageRetryPolicy(options: StorageRetryOptions = {}): PipelinePolicy {\n  const retryPolicyType = options.retryPolicyType ?? DEFAULT_RETRY_OPTIONS.retryPolicyType;\n  const maxTries = options.maxTries ?? DEFAULT_RETRY_OPTIONS.maxTries;\n  const retryDelayInMs = options.retryDelayInMs ?? DEFAULT_RETRY_OPTIONS.retryDelayInMs;\n  const maxRetryDelayInMs = options.maxRetryDelayInMs ?? DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs;\n  const secondaryHost = options.secondaryHost ?? DEFAULT_RETRY_OPTIONS.secondaryHost;\n  const tryTimeoutInMs = options.tryTimeoutInMs ?? DEFAULT_RETRY_OPTIONS.tryTimeoutInMs;\n\n  function shouldRetry({\n    isPrimaryRetry,\n    attempt,\n    response,\n    error,\n  }: {\n    isPrimaryRetry: boolean;\n    attempt: number;\n    response?: PipelineResponse;\n    error?: RestError;\n  }): boolean {\n    if (attempt >= maxTries) {\n      logger.info(`RetryPolicy: Attempt(s) ${attempt} >= maxTries ${maxTries}, no further try.`);\n      return false;\n    }\n    if (error) {\n      for (const retriableError of retriableErrors) {\n        if (\n          error.name.toUpperCase().includes(retriableError) ||\n          error.message.toUpperCase().includes(retriableError) ||\n          (error.code && error.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n      if (\n        error?.code === \"PARSE_ERROR\" &&\n        error?.message.startsWith(`Error \"Error: Unclosed root tag`)\n      ) {\n        logger.info(\n          \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n        );\n        return true;\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || error) {\n      const statusCode = response?.status ?? error?.statusCode ?? 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    return false;\n  }\n  function calculateDelay(isPrimaryRetry: boolean, attempt: number): number {\n    let delayTimeInMs = 0;\n\n    if (isPrimaryRetry) {\n      switch (retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * retryDelayInMs,\n            maxRetryDelayInMs,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = retryDelayInMs;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delayTimeInMs;\n  }\n  return {\n    name: storageRetryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Set the server-side timeout query parameter \"timeout=[seconds]\"\n      if (tryTimeoutInMs) {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.TIMEOUT,\n          String(Math.floor(tryTimeoutInMs / 1000)),\n        );\n      }\n      const primaryUrl = request.url;\n      const secondaryUrl = secondaryHost ? setURLHost(request.url, secondaryHost) : undefined;\n      let secondaryHas404 = false;\n      let attempt = 1;\n      let retryAgain = true;\n      let response: PipelineResponse | undefined;\n      let error: RestError | undefined;\n      while (retryAgain) {\n        const isPrimaryRetry: boolean =\n          secondaryHas404 ||\n          !secondaryUrl ||\n          ![\"GET\", \"HEAD\", \"OPTIONS\"].includes(request.method) ||\n          attempt % 2 === 1;\n        request.url = isPrimaryRetry ? primaryUrl : secondaryUrl!;\n        response = undefined;\n        error = undefined;\n        try {\n          logger.info(\n            `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`,\n          );\n          response = await next(request);\n          secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n        } catch (e: unknown) {\n          if (isRestError(e)) {\n            logger.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`);\n            error = e;\n          } else {\n            logger.error(`RetryPolicy: Caught error, message: ${getErrorMessage(e)}`);\n            throw e;\n          }\n        }\n        retryAgain = shouldRetry({ isPrimaryRetry, attempt, response, error });\n        if (retryAgain) {\n          await delay(\n            calculateDelay(isPrimaryRetry, attempt),\n            request.abortSignal,\n            RETRY_ABORT_ERROR,\n          );\n        }\n        attempt++;\n      }\n      if (response) {\n        return response;\n      }\n      throw error ?? new RestError(\"RetryPolicy failed without known error.\");\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\n/**\n * The programmatic identifier of the storageSharedKeyCredentialPolicy.\n */\nexport const storageSharedKeyCredentialPolicyName = \"storageSharedKeyCredentialPolicy\";\n\n/**\n * Options used to configure StorageSharedKeyCredentialPolicy.\n */\nexport interface StorageSharedKeyCredentialPolicyOptions {\n  accountName: string;\n  accountKey: Buffer;\n}\n\n/**\n * storageSharedKeyCredentialPolicy handles signing requests using storage account keys.\n */\nexport function storageSharedKeyCredentialPolicy(\n  _options: StorageSharedKeyCredentialPolicyOptions,\n): PipelinePolicy {\n  return {\n    name: storageSharedKeyCredentialPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport { isNode } from \"@azure/core-util\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString(),\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\n\n/**\n * The programmatic identifier of the storageCorrectContentLengthPolicy.\n */\nexport const storageCorrectContentLengthPolicyName = \"StorageCorrectContentLengthPolicy\";\n\n/**\n * storageCorrectContentLengthPolicy to correctly set Content-Length header with request body length.\n */\nexport function storageCorrectContentLengthPolicy(): PipelinePolicy {\n  return {\n    name: storageCorrectContentLengthPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CompatResponse as HttpOperationResponse,\n  RequestPolicy as IHttpClient,\n  HttpHeadersLike as HttpHeaders,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  KeepAliveOptions,\n  ExtendedServiceClientOptions,\n  convertHttpClient,\n  createRequestPolicyFactoryPolicy,\n  HttpPipelineLogLevel,\n} from \"@azure/core-http-compat\";\nimport {\n  RequestBodyType as HttpRequestBody,\n  ProxySettings as ProxyOptions,\n  UserAgentPolicyOptions as UserAgentOptions,\n  bearerTokenAuthenticationPolicy,\n  Pipeline as CorePipeline,\n  decompressResponsePolicyName,\n  PipelinePolicy,\n  HttpClient,\n} from \"@azure/core-rest-pipeline\";\nimport { authorizeRequestOnTenantChallenge, createClientPipeline } from \"@azure/core-client\";\nimport { parseXML, stringifyXML } from \"@azure/core-xml\";\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\n\nimport { logger } from \"./log\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  StorageOAuthScopes,\n  StorageBlobLoggingAllowedHeaderNames,\n  StorageBlobLoggingAllowedQueryParameters,\n  SDK_VERSION,\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { storageBrowserPolicy } from \"./policies/StorageBrowserPolicyV2\";\nimport { storageRetryPolicy } from \"./policies/StorageRetryPolicyV2\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { storageCorrectContentLengthPolicy } from \"./policies/StorageCorrectContentLengthPolicy\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  StorageOAuthScopes,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n};\n\n/**\n * A subset of `@azure/core-http` ServiceClientOptions\n */\nexport interface ServiceClientOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * Optional. Overrides the default policy factories.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n}\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * An interface for the {@link Pipeline} class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport interface PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  readonly options: PipelineOptions;\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  toServiceClientOptions(): ServiceClientOptions;\n}\n\n/**\n * A helper to decide if a given argument satisfies the Pipeline contract\n * @param pipeline - An argument that may be a Pipeline\n * @returns true when the argument satisfies the Pipeline contract\n */\nexport function isPipelineLike(pipeline: unknown): pipeline is PipelineLike {\n  if (!pipeline || typeof pipeline !== \"object\") {\n    return false;\n  }\n\n  const castPipeline = pipeline as PipelineLike;\n\n  return (\n    Array.isArray(castPipeline.factories) &&\n    typeof castPipeline.options === \"object\" &&\n    typeof castPipeline.toServiceClientOptions === \"function\"\n  );\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport class Pipeline implements PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories,\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * The audience used to retrieve an AAD token.\n   * By default, audience 'https://storage.azure.com/.default' will be used.\n   */\n  audience?: string | string[];\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {},\n): Pipeline {\n  if (!credential) {\n    credential = new AnonymousCredential();\n  }\n  const pipeline = new Pipeline([], pipelineOptions);\n  (pipeline as any)._credential = credential;\n  return pipeline;\n}\n\nfunction processDownlevelPipeline(\n  pipeline: PipelineLike,\n): { wrappedPolicies: PipelinePolicy; afterRetry: boolean } | undefined {\n  const knownFactoryFunctions = [\n    isAnonymousCredential,\n    isStorageSharedKeyCredential,\n    isCoreHttpBearerTokenFactory,\n    isStorageBrowserPolicyFactory,\n    isStorageRetryPolicyFactory,\n    isStorageTelemetryPolicyFactory,\n    isCoreHttpPolicyFactory,\n  ];\n  if (pipeline.factories.length) {\n    const novelFactories = pipeline.factories.filter((factory) => {\n      return !knownFactoryFunctions.some((knownFactory) => knownFactory(factory));\n    });\n    if (novelFactories.length) {\n      const hasInjector = novelFactories.some((factory) => isInjectorPolicyFactory(factory));\n      // if there are any left over, wrap in a requestPolicyFactoryPolicy\n      return {\n        wrappedPolicies: createRequestPolicyFactoryPolicy(novelFactories),\n        afterRetry: hasInjector,\n      };\n    }\n  }\n  return undefined;\n}\n\nexport function getCoreClientOptions(pipeline: PipelineLike): ExtendedServiceClientOptions {\n  const { httpClient: v1Client, ...restOptions } = pipeline.options as StoragePipelineOptions;\n\n  let httpClient: HttpClient = (pipeline as any)._coreHttpClient;\n  if (!httpClient) {\n    httpClient = v1Client ? convertHttpClient(v1Client) : getCachedDefaultHttpClient();\n    (pipeline as any)._coreHttpClient = httpClient;\n  }\n\n  let corePipeline: CorePipeline = (pipeline as any)._corePipeline;\n  if (!corePipeline) {\n    const packageDetails = `azsdk-js-azure-storage-blob/${SDK_VERSION}`;\n    const userAgentPrefix =\n      restOptions.userAgentOptions && restOptions.userAgentOptions.userAgentPrefix\n        ? `${restOptions.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n    corePipeline = createClientPipeline({\n      ...restOptions,\n      loggingOptions: {\n        additionalAllowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n        additionalAllowedQueryParameters: StorageBlobLoggingAllowedQueryParameters,\n        logger: logger.info,\n      },\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      serializationOptions: {\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n      deserializationOptions: {\n        parseXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n    });\n    corePipeline.removePolicy({ phase: \"Retry\" });\n    corePipeline.removePolicy({ name: decompressResponsePolicyName });\n    corePipeline.addPolicy(storageCorrectContentLengthPolicy());\n    corePipeline.addPolicy(storageRetryPolicy(restOptions.retryOptions), { phase: \"Retry\" });\n    corePipeline.addPolicy(storageBrowserPolicy());\n    const downlevelResults = processDownlevelPipeline(pipeline);\n    if (downlevelResults) {\n      corePipeline.addPolicy(\n        downlevelResults.wrappedPolicies,\n        downlevelResults.afterRetry ? { afterPhase: \"Retry\" } : undefined,\n      );\n    }\n    const credential = getCredentialFromPipeline(pipeline);\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: restOptions.audience ?? StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    (pipeline as any)._corePipeline = corePipeline;\n  }\n  return {\n    ...restOptions,\n    allowInsecureConnection: true,\n    httpClient,\n    pipeline: corePipeline,\n  };\n}\n\nexport function getCredentialFromPipeline(\n  pipeline: PipelineLike,\n): StorageSharedKeyCredential | AnonymousCredential | TokenCredential {\n  // see if we squirreled one away on the type itself\n  if ((pipeline as any)._credential) {\n    return (pipeline as any)._credential;\n  }\n  // if it came from another package, loop over the factories and look for one like before\n  let credential = new AnonymousCredential();\n  for (const factory of pipeline.factories) {\n    if (isTokenCredential((factory as any).credential)) {\n      // Only works if the factory has been attached a \"credential\" property.\n      // We do that in newPipeline() when using TokenCredential.\n      credential = (factory as any).credential;\n    } else if (isStorageSharedKeyCredential(factory)) {\n      return factory;\n    }\n  }\n  return credential;\n}\n\nfunction isStorageSharedKeyCredential(\n  factory: RequestPolicyFactory,\n): factory is StorageSharedKeyCredential {\n  if (factory instanceof StorageSharedKeyCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageSharedKeyCredential\";\n}\n\nfunction isAnonymousCredential(factory: RequestPolicyFactory): factory is AnonymousCredential {\n  if (factory instanceof AnonymousCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"AnonymousCredential\";\n}\n\nfunction isCoreHttpBearerTokenFactory(factory: RequestPolicyFactory): boolean {\n  return isTokenCredential((factory as any).credential);\n}\n\nfunction isStorageBrowserPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageBrowserPolicyFactory {\n  if (factory instanceof StorageBrowserPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageBrowserPolicyFactory\";\n}\n\nfunction isStorageRetryPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageRetryPolicyFactory {\n  if (factory instanceof StorageRetryPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageRetryPolicyFactory\";\n}\n\nfunction isStorageTelemetryPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"TelemetryPolicyFactory\";\n}\n\nfunction isInjectorPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"InjectorPolicyFactory\";\n}\n\nfunction isCoreHttpPolicyFactory(factory: RequestPolicyFactory): boolean {\n  const knownPolicies = [\n    \"GenerateClientRequestIdPolicy\",\n    \"TracingPolicy\",\n    \"LogPolicy\",\n    \"ProxyPolicy\",\n    \"DisableResponseDecompressionPolicy\",\n    \"KeepAlivePolicy\",\n    \"DeserializationPolicy\",\n  ];\n\n  const mockHttpClient: IHttpClient = {\n    sendRequest: async (request: WebResource) => {\n      return {\n        request,\n        headers: request.headers.clone(),\n        status: 500,\n      };\n    },\n  };\n  const mockRequestPolicyOptions: RequestPolicyOptions = {\n    log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n      /* do nothing */\n    },\n    shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n      return false;\n    },\n  };\n  const policyInstance = factory.create(mockHttpClient, mockRequestPolicyOptions);\n  const policyName = policyInstance.constructor.name;\n  // bundlers sometimes add a custom suffix to the class name to make it unique\n  return knownPolicies.some((knownPolicyName) => {\n    return policyName.startsWith(knownPolicyName);\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\n\n/** Storage Service Properties. */\nexport interface BlobServiceProperties {\n  /** Azure Analytics Logging settings. */\n  blobAnalyticsLogging?: Logging;\n  /** a summary of request statistics grouped by API in hour or minute aggregates for blobs */\n  hourMetrics?: Metrics;\n  /** a summary of request statistics grouped by API in hour or minute aggregates for blobs */\n  minuteMetrics?: Metrics;\n  /** The set of CORS rules. */\n  cors?: CorsRule[];\n  /** The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions */\n  defaultServiceVersion?: string;\n  /** the retention policy which determines how long the associated data should persist */\n  deleteRetentionPolicy?: RetentionPolicy;\n  /** The properties that enable an account to host a static website */\n  staticWebsite?: StaticWebsite;\n}\n\n/** Azure Analytics Logging settings. */\nexport interface Logging {\n  /** The version of Storage Analytics to configure. */\n  version: string;\n  /** Indicates whether all delete requests should be logged. */\n  deleteProperty: boolean;\n  /** Indicates whether all read requests should be logged. */\n  read: boolean;\n  /** Indicates whether all write requests should be logged. */\n  write: boolean;\n  /** the retention policy which determines how long the associated data should persist */\n  retentionPolicy: RetentionPolicy;\n}\n\n/** the retention policy which determines how long the associated data should persist */\nexport interface RetentionPolicy {\n  /** Indicates whether a retention policy is enabled for the storage service */\n  enabled: boolean;\n  /** Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted */\n  days?: number;\n}\n\n/** a summary of request statistics grouped by API in hour or minute aggregates for blobs */\nexport interface Metrics {\n  /** The version of Storage Analytics to configure. */\n  version?: string;\n  /** Indicates whether metrics are enabled for the Blob service. */\n  enabled: boolean;\n  /** Indicates whether metrics should generate summary statistics for called API operations. */\n  includeAPIs?: boolean;\n  /** the retention policy which determines how long the associated data should persist */\n  retentionPolicy?: RetentionPolicy;\n}\n\n/** CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain */\nexport interface CorsRule {\n  /** The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. */\n  allowedOrigins: string;\n  /** The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated) */\n  allowedMethods: string;\n  /** the request headers that the origin domain may specify on the CORS request. */\n  allowedHeaders: string;\n  /** The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer */\n  exposedHeaders: string;\n  /** The maximum amount time that a browser should cache the preflight OPTIONS request. */\n  maxAgeInSeconds: number;\n}\n\n/** The properties that enable an account to host a static website */\nexport interface StaticWebsite {\n  /** Indicates whether this account is hosting a static website */\n  enabled: boolean;\n  /** The default name of the index page under each directory */\n  indexDocument?: string;\n  /** The absolute path of the custom 404 page */\n  errorDocument404Path?: string;\n  /** Absolute path of the default index page */\n  defaultIndexDocumentPath?: string;\n}\n\nexport interface StorageError {\n  message?: string;\n  code?: string;\n  authenticationErrorDetail?: string;\n}\n\n/** Stats for the storage service. */\nexport interface BlobServiceStatistics {\n  /** Geo-Replication information for the Secondary Storage Service */\n  geoReplication?: GeoReplication;\n}\n\n/** Geo-Replication information for the Secondary Storage Service */\nexport interface GeoReplication {\n  /** The status of the secondary location */\n  status: GeoReplicationStatusType;\n  /** A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. */\n  lastSyncOn: Date;\n}\n\n/** An enumeration of containers */\nexport interface ListContainersSegmentResponse {\n  serviceEndpoint: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  containerItems: ContainerItem[];\n  continuationToken?: string;\n}\n\n/** An Azure Storage container */\nexport interface ContainerItem {\n  name: string;\n  deleted?: boolean;\n  version?: string;\n  /** Properties of a container */\n  properties: ContainerProperties;\n  /** Dictionary of <string> */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** Properties of a container */\nexport interface ContainerProperties {\n  lastModified: Date;\n  etag: string;\n  leaseStatus?: LeaseStatusType;\n  leaseState?: LeaseStateType;\n  leaseDuration?: LeaseDurationType;\n  publicAccess?: PublicAccessType;\n  hasImmutabilityPolicy?: boolean;\n  hasLegalHold?: boolean;\n  defaultEncryptionScope?: string;\n  preventEncryptionScopeOverride?: boolean;\n  deletedOn?: Date;\n  remainingRetentionDays?: number;\n  /** Indicates if version level worm is enabled on this container. */\n  isImmutableStorageWithVersioningEnabled?: boolean;\n}\n\n/** Key information */\nexport interface KeyInfo {\n  /** The date-time the key is active in ISO 8601 UTC time */\n  startsOn: string;\n  /** The date-time the key expires in ISO 8601 UTC time */\n  expiresOn: string;\n}\n\n/** A user delegation key */\nexport interface UserDelegationKey {\n  /** The Azure Active Directory object ID in GUID format. */\n  signedObjectId: string;\n  /** The Azure Active Directory tenant ID in GUID format */\n  signedTenantId: string;\n  /** The date-time the key is active */\n  signedStartsOn: string;\n  /** The date-time the key expires */\n  signedExpiresOn: string;\n  /** Abbreviation of the Azure Storage service that accepts the key */\n  signedService: string;\n  /** The service version that created the key */\n  signedVersion: string;\n  /** The key as a base64 string */\n  value: string;\n}\n\n/** The result of a Filter Blobs API call */\nexport interface FilterBlobSegment {\n  serviceEndpoint: string;\n  where: string;\n  blobs: FilterBlobItem[];\n  continuationToken?: string;\n}\n\n/** Blob info from a Filter Blobs API call */\nexport interface FilterBlobItem {\n  name: string;\n  containerName: string;\n  /** Blob tags */\n  tags?: BlobTags;\n}\n\n/** Blob tags */\nexport interface BlobTags {\n  blobTagSet: BlobTag[];\n}\n\nexport interface BlobTag {\n  key: string;\n  value: string;\n}\n\n/** signed identifier */\nexport interface SignedIdentifier {\n  /** a unique id */\n  id: string;\n  /** An Access policy */\n  accessPolicy: AccessPolicy;\n}\n\n/** An Access policy */\nexport interface AccessPolicy {\n  /** the date-time the policy is active */\n  startsOn?: string;\n  /** the date-time the policy expires */\n  expiresOn?: string;\n  /** the permissions for the acl policy */\n  permissions?: string;\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegment;\n  continuationToken?: string;\n}\n\nexport interface BlobFlatListSegment {\n  blobItems: BlobItemInternal[];\n}\n\n/** An Azure Storage blob */\nexport interface BlobItemInternal {\n  name: BlobName;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  /** Properties of a blob */\n  properties: BlobPropertiesInternal;\n  /** Dictionary of <string> */\n  metadata?: { [propertyName: string]: string };\n  /** Blob tags */\n  blobTags?: BlobTags;\n  /** Dictionary of <string> */\n  objectReplicationMetadata?: { [propertyName: string]: string };\n  /** Inactive root blobs which have any versions would have such tag with value true. */\n  hasVersionsOnly?: boolean;\n}\n\nexport interface BlobName {\n  /** Indicates if the blob name is encoded. */\n  encoded?: boolean;\n  /** The name of the blob. */\n  content?: string;\n}\n\n/** Properties of a blob */\nexport interface BlobPropertiesInternal {\n  createdOn?: Date;\n  lastModified: Date;\n  etag: string;\n  /** Size in bytes */\n  contentLength?: number;\n  contentType?: string;\n  contentEncoding?: string;\n  contentLanguage?: string;\n  contentMD5?: Uint8Array;\n  contentDisposition?: string;\n  cacheControl?: string;\n  blobSequenceNumber?: number;\n  blobType?: BlobType;\n  leaseStatus?: LeaseStatusType;\n  leaseState?: LeaseStateType;\n  leaseDuration?: LeaseDurationType;\n  copyId?: string;\n  copyStatus?: CopyStatusType;\n  copySource?: string;\n  copyProgress?: string;\n  copyCompletedOn?: Date;\n  copyStatusDescription?: string;\n  serverEncrypted?: boolean;\n  incrementalCopy?: boolean;\n  destinationSnapshot?: string;\n  deletedOn?: Date;\n  remainingRetentionDays?: number;\n  accessTier?: AccessTier;\n  accessTierInferred?: boolean;\n  archiveStatus?: ArchiveStatus;\n  customerProvidedKeySha256?: string;\n  /** The name of the encryption scope under which the blob is encrypted. */\n  encryptionScope?: string;\n  accessTierChangedOn?: Date;\n  tagCount?: number;\n  expiresOn?: Date;\n  isSealed?: boolean;\n  /** If an object is in rehydrate pending state then this header is returned with priority of rehydrate. Valid values are High and Standard. */\n  rehydratePriority?: RehydratePriority;\n  lastAccessedOn?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */\n  immutabilityPolicyExpiresOn?: Date;\n  /** Indicates immutability policy mode. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Indicates if a legal hold is present on the blob. */\n  legalHold?: boolean;\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  continuationToken?: string;\n}\n\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItemInternal[];\n}\n\nexport interface BlobPrefix {\n  name: BlobName;\n}\n\nexport interface BlockLookupList {\n  committed?: string[];\n  uncommitted?: string[];\n  latest?: string[];\n}\n\nexport interface BlockList {\n  committedBlocks?: Block[];\n  uncommittedBlocks?: Block[];\n}\n\n/** Represents a single block in a block blob.  It describes the block's ID and size. */\nexport interface Block {\n  /** The base64 encoded block ID. */\n  name: string;\n  /** The block size in bytes. */\n  size: number;\n}\n\n/** the list of pages */\nexport interface PageList {\n  pageRange?: PageRange[];\n  clearRange?: ClearRange[];\n  continuationToken?: string;\n}\n\nexport interface PageRange {\n  start: number;\n  end: number;\n}\n\nexport interface ClearRange {\n  start: number;\n  end: number;\n}\n\n/** Groups the set of query request settings. */\nexport interface QueryRequest {\n  /** Required. The type of the provided query expression. */\n  queryType: string;\n  /** The query expression in SQL. The maximum size of the query expression is 256KiB. */\n  expression: string;\n  inputSerialization?: QuerySerialization;\n  outputSerialization?: QuerySerialization;\n}\n\nexport interface QuerySerialization {\n  format: QueryFormat;\n}\n\nexport interface QueryFormat {\n  /** The quick query format type. */\n  type: QueryFormatType;\n  /** Groups the settings used for interpreting the blob data if the blob is delimited text formatted. */\n  delimitedTextConfiguration?: DelimitedTextConfiguration;\n  /** json text configuration */\n  jsonTextConfiguration?: JsonTextConfiguration;\n  /** Groups the settings used for formatting the response if the response should be Arrow formatted. */\n  arrowConfiguration?: ArrowConfiguration;\n  /** parquet configuration */\n  parquetTextConfiguration?: Record<string, unknown>;\n}\n\n/** Groups the settings used for interpreting the blob data if the blob is delimited text formatted. */\nexport interface DelimitedTextConfiguration {\n  /** The string used to separate columns. */\n  columnSeparator?: string;\n  /** The string used to quote a specific field. */\n  fieldQuote?: string;\n  /** The string used to separate records. */\n  recordSeparator?: string;\n  /** The string used as an escape character. */\n  escapeChar?: string;\n  /** Represents whether the data has headers. */\n  headersPresent?: boolean;\n}\n\n/** json text configuration */\nexport interface JsonTextConfiguration {\n  /** The string used to separate records. */\n  recordSeparator?: string;\n}\n\n/** Groups the settings used for formatting the response if the response should be Arrow formatted. */\nexport interface ArrowConfiguration {\n  schema: ArrowField[];\n}\n\n/** Groups settings regarding specific field of an arrow schema */\nexport interface ArrowField {\n  type: string;\n  name?: string;\n  precision?: number;\n  scale?: number;\n}\n\n/** Defines headers for Service_setProperties operation. */\nexport interface ServiceSetPropertiesHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_setProperties operation. */\nexport interface ServiceSetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getProperties operation. */\nexport interface ServiceGetPropertiesHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getProperties operation. */\nexport interface ServiceGetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getStatistics operation. */\nexport interface ServiceGetStatisticsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getStatistics operation. */\nexport interface ServiceGetStatisticsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_listContainersSegment operation. */\nexport interface ServiceListContainersSegmentHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_listContainersSegment operation. */\nexport interface ServiceListContainersSegmentExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getUserDelegationKey operation. */\nexport interface ServiceGetUserDelegationKeyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getUserDelegationKey operation. */\nexport interface ServiceGetUserDelegationKeyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getAccountInfo operation. */\nexport interface ServiceGetAccountInfoHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Identifies the sku name of the account */\n  skuName?: SkuName;\n  /** Identifies the account kind */\n  accountKind?: AccountKind;\n  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */\n  isHierarchicalNamespaceEnabled?: boolean;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getAccountInfo operation. */\nexport interface ServiceGetAccountInfoExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_submitBatch operation. */\nexport interface ServiceSubmitBatchHeaders {\n  /** The media type of the body of the response. For batch requests, this is multipart/mixed; boundary=batchresponse_GUID */\n  contentType?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_submitBatch operation. */\nexport interface ServiceSubmitBatchExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_filterBlobs operation. */\nexport interface ServiceFilterBlobsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Service_filterBlobs operation. */\nexport interface ServiceFilterBlobsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_create operation. */\nexport interface ContainerCreateHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_create operation. */\nexport interface ContainerCreateExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_getProperties operation. */\nexport interface ContainerGetPropertiesHeaders {\n  metadata?: { [propertyName: string]: string };\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** When a blob is leased, specifies whether the lease is of infinite or fixed duration. */\n  leaseDuration?: LeaseDurationType;\n  /** Lease state of the blob. */\n  leaseState?: LeaseStateType;\n  /** The current lease status of the blob. */\n  leaseStatus?: LeaseStatusType;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Indicated whether data in the container may be accessed publicly and the level of access */\n  blobPublicAccess?: PublicAccessType;\n  /** Indicates whether the container has an immutability policy set on it. */\n  hasImmutabilityPolicy?: boolean;\n  /** Indicates whether the container has a legal hold. */\n  hasLegalHold?: boolean;\n  /** The default encryption scope for the container. */\n  defaultEncryptionScope?: string;\n  /** Indicates whether the container's default encryption scope can be overriden. */\n  denyEncryptionScopeOverride?: boolean;\n  /** Indicates whether version level worm is enabled on a container. */\n  isImmutableStorageWithVersioningEnabled?: boolean;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_getProperties operation. */\nexport interface ContainerGetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_delete operation. */\nexport interface ContainerDeleteHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_delete operation. */\nexport interface ContainerDeleteExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_setMetadata operation. */\nexport interface ContainerSetMetadataHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_setMetadata operation. */\nexport interface ContainerSetMetadataExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_getAccessPolicy operation. */\nexport interface ContainerGetAccessPolicyHeaders {\n  /** Indicated whether data in the container may be accessed publicly and the level of access */\n  blobPublicAccess?: PublicAccessType;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_getAccessPolicy operation. */\nexport interface ContainerGetAccessPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_setAccessPolicy operation. */\nexport interface ContainerSetAccessPolicyHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_setAccessPolicy operation. */\nexport interface ContainerSetAccessPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_restore operation. */\nexport interface ContainerRestoreHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_restore operation. */\nexport interface ContainerRestoreExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_rename operation. */\nexport interface ContainerRenameHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_rename operation. */\nexport interface ContainerRenameExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_submitBatch operation. */\nexport interface ContainerSubmitBatchHeaders {\n  /** The media type of the body of the response. For batch requests, this is multipart/mixed; boundary=batchresponse_GUID */\n  contentType?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n}\n\n/** Defines headers for Container_submitBatch operation. */\nexport interface ContainerSubmitBatchExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_filterBlobs operation. */\nexport interface ContainerFilterBlobsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_filterBlobs operation. */\nexport interface ContainerFilterBlobsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_acquireLease operation. */\nexport interface ContainerAcquireLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Uniquely identifies a container's lease */\n  leaseId?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_acquireLease operation. */\nexport interface ContainerAcquireLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_releaseLease operation. */\nexport interface ContainerReleaseLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_releaseLease operation. */\nexport interface ContainerReleaseLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_renewLease operation. */\nexport interface ContainerRenewLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Uniquely identifies a container's lease */\n  leaseId?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_renewLease operation. */\nexport interface ContainerRenewLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_breakLease operation. */\nexport interface ContainerBreakLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTime?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_breakLease operation. */\nexport interface ContainerBreakLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_changeLease operation. */\nexport interface ContainerChangeLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Uniquely identifies a container's lease */\n  leaseId?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Container_changeLease operation. */\nexport interface ContainerChangeLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_listBlobFlatSegment operation. */\nexport interface ContainerListBlobFlatSegmentHeaders {\n  /** The media type of the body of the response. For List Blobs this is 'application/xml' */\n  contentType?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_listBlobFlatSegment operation. */\nexport interface ContainerListBlobFlatSegmentExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_listBlobHierarchySegment operation. */\nexport interface ContainerListBlobHierarchySegmentHeaders {\n  /** The media type of the body of the response. For List Blobs this is 'application/xml' */\n  contentType?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Container_listBlobHierarchySegment operation. */\nexport interface ContainerListBlobHierarchySegmentExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Container_getAccountInfo operation. */\nexport interface ContainerGetAccountInfoHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Identifies the sku name of the account */\n  skuName?: SkuName;\n  /** Identifies the account kind */\n  accountKind?: AccountKind;\n  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */\n  isHierarchicalNamespaceEnabled?: boolean;\n}\n\n/** Defines headers for Container_getAccountInfo operation. */\nexport interface ContainerGetAccountInfoExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_download operation. */\nexport interface BlobDownloadHeaders {\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Returns the date and time the blob was created. */\n  createdOn?: Date;\n  metadata?: { [propertyName: string]: string };\n  /** Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication. */\n  objectReplicationPolicyId?: string;\n  /** Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed). */\n  objectReplicationRules?: { [propertyName: string]: string };\n  /** The number of bytes present in the response body. */\n  contentLength?: number;\n  /** The media type of the body of the response. For Download Blob this is 'application/octet-stream' */\n  contentType?: string;\n  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */\n  contentRange?: string;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header returns the value that was specified for the Content-Encoding request header */\n  contentEncoding?: string;\n  /** This header is returned if it was previously specified for the blob. */\n  cacheControl?: string;\n  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */\n  contentDisposition?: string;\n  /** This header returns the value that was specified for the Content-Language request header. */\n  contentLanguage?: string;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** The blob's type. */\n  blobType?: BlobType;\n  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copyCompletedOn?: Date;\n  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyStatusDescription?: string;\n  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */\n  copyId?: string;\n  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyProgress?: string;\n  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copySource?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: CopyStatusType;\n  /** When a blob is leased, specifies whether the lease is of infinite or fixed duration. */\n  leaseDuration?: LeaseDurationType;\n  /** Lease state of the blob. */\n  leaseState?: LeaseStateType;\n  /** The current lease status of the blob. */\n  leaseStatus?: LeaseStatusType;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header. */\n  isCurrentVersion?: boolean;\n  /** Indicates that the service supports requests for partial blob content. */\n  acceptRanges?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */\n  blobCommittedBlockCount?: number;\n  /** The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted). */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */\n  blobContentMD5?: Uint8Array;\n  /** The number of tags associated with the blob */\n  tagCount?: number;\n  /** If this blob has been sealed */\n  isSealed?: boolean;\n  /** UTC date/time value generated by the service that indicates the time at which the blob was last read or written to */\n  lastAccessed?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */\n  immutabilityPolicyExpiresOn?: Date;\n  /** Indicates immutability policy mode. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Indicates if a legal hold is present on the blob. */\n  legalHold?: boolean;\n  /** Error Code */\n  errorCode?: string;\n  /** If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request). */\n  contentCrc64?: Uint8Array;\n}\n\n/** Defines headers for Blob_download operation. */\nexport interface BlobDownloadExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_getProperties operation. */\nexport interface BlobGetPropertiesHeaders {\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Returns the date and time the blob was created. */\n  createdOn?: Date;\n  metadata?: { [propertyName: string]: string };\n  /** Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication. */\n  objectReplicationPolicyId?: string;\n  /** Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed). */\n  objectReplicationRules?: { [propertyName: string]: string };\n  /** The blob's type. */\n  blobType?: BlobType;\n  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copyCompletedOn?: Date;\n  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyStatusDescription?: string;\n  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */\n  copyId?: string;\n  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyProgress?: string;\n  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copySource?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: CopyStatusType;\n  /** Included if the blob is incremental copy blob. */\n  isIncrementalCopy?: boolean;\n  /** Included if the blob is incremental copy blob or incremental copy snapshot, if x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot for this blob. */\n  destinationSnapshot?: string;\n  /** When a blob is leased, specifies whether the lease is of infinite or fixed duration. */\n  leaseDuration?: LeaseDurationType;\n  /** Lease state of the blob. */\n  leaseState?: LeaseStateType;\n  /** The current lease status of the blob. */\n  leaseStatus?: LeaseStatusType;\n  /** The size of the blob in bytes. For a page blob, this header returns the value of the x-ms-blob-content-length header that is stored with the blob. */\n  contentLength?: number;\n  /** The content type specified for the blob. The default content type is 'application/octet-stream' */\n  contentType?: string;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header returns the value that was specified for the Content-Encoding request header */\n  contentEncoding?: string;\n  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */\n  contentDisposition?: string;\n  /** This header returns the value that was specified for the Content-Language request header. */\n  contentLanguage?: string;\n  /** This header is returned if it was previously specified for the blob. */\n  cacheControl?: string;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Indicates that the service supports requests for partial blob content. */\n  acceptRanges?: string;\n  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */\n  blobCommittedBlockCount?: number;\n  /** The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted). */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only returned when the metadata was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** The tier of page blob on a premium storage account or tier of block blob on blob storage LRS accounts. For a list of allowed premium page blob tiers, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For blob storage LRS accounts, valid values are Hot/Cool/Archive. */\n  accessTier?: string;\n  /** For page blobs on a premium storage account only. If the access tier is not explicitly set on the blob, the tier is inferred based on its content length and this header will be returned with true value. */\n  accessTierInferred?: boolean;\n  /** For blob storage LRS accounts, valid values are rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not complete then this header is returned indicating that rehydrate is pending and also tells the destination tier. */\n  archiveStatus?: string;\n  /** The time the tier was changed on the object. This is only returned if the tier on the block blob was ever set. */\n  accessTierChangedOn?: Date;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header. */\n  isCurrentVersion?: boolean;\n  /** The number of tags associated with the blob */\n  tagCount?: number;\n  /** The time this blob will expire. */\n  expiresOn?: Date;\n  /** If this blob has been sealed */\n  isSealed?: boolean;\n  /** If an object is in rehydrate pending state then this header is returned with priority of rehydrate. */\n  rehydratePriority?: RehydratePriority;\n  /** UTC date/time value generated by the service that indicates the time at which the blob was last read or written to */\n  lastAccessed?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */\n  immutabilityPolicyExpiresOn?: Date;\n  /** Indicates immutability policy mode. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Indicates if a legal hold is present on the blob. */\n  legalHold?: boolean;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_getProperties operation. */\nexport interface BlobGetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_delete operation. */\nexport interface BlobDeleteHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_delete operation. */\nexport interface BlobDeleteExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_undelete operation. */\nexport interface BlobUndeleteHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_undelete operation. */\nexport interface BlobUndeleteExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setExpiry operation. */\nexport interface BlobSetExpiryHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Blob_setExpiry operation. */\nexport interface BlobSetExpiryExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setHttpHeaders operation. */\nexport interface BlobSetHttpHeadersHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setHttpHeaders operation. */\nexport interface BlobSetHttpHeadersExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setImmutabilityPolicy operation. */\nexport interface BlobSetImmutabilityPolicyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Indicates the time the immutability policy will expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Indicates immutability policy mode. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n}\n\n/** Defines headers for Blob_setImmutabilityPolicy operation. */\nexport interface BlobSetImmutabilityPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_deleteImmutabilityPolicy operation. */\nexport interface BlobDeleteImmutabilityPolicyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_deleteImmutabilityPolicy operation. */\nexport interface BlobDeleteImmutabilityPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setLegalHold operation. */\nexport interface BlobSetLegalHoldHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Indicates if the blob has a legal hold. */\n  legalHold?: boolean;\n}\n\n/** Defines headers for Blob_setLegalHold operation. */\nexport interface BlobSetLegalHoldExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setMetadata operation. */\nexport interface BlobSetMetadataHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only returned when the metadata was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setMetadata operation. */\nexport interface BlobSetMetadataExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_acquireLease operation. */\nexport interface BlobAcquireLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Uniquely identifies a blobs' lease */\n  leaseId?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_acquireLease operation. */\nexport interface BlobAcquireLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_releaseLease operation. */\nexport interface BlobReleaseLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_releaseLease operation. */\nexport interface BlobReleaseLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_renewLease operation. */\nexport interface BlobRenewLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Uniquely identifies a blobs' lease */\n  leaseId?: string;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_renewLease operation. */\nexport interface BlobRenewLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_changeLease operation. */\nexport interface BlobChangeLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Uniquely identifies a blobs' lease */\n  leaseId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_changeLease operation. */\nexport interface BlobChangeLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_breakLease operation. */\nexport interface BlobBreakLeaseHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTime?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n}\n\n/** Defines headers for Blob_breakLease operation. */\nexport interface BlobBreakLeaseExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_createSnapshot operation. */\nexport interface BlobCreateSnapshotHeaders {\n  /** Uniquely identifies the snapshot and indicates the snapshot version. It may be used in subsequent requests to access the snapshot */\n  snapshot?: string;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** True if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. For a snapshot request, this header is set to true when metadata was provided in the request and encrypted with a customer-provided key. */\n  isServerEncrypted?: boolean;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_createSnapshot operation. */\nexport interface BlobCreateSnapshotExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_startCopyFromURL operation. */\nexport interface BlobStartCopyFromURLHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */\n  copyId?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: CopyStatusType;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_startCopyFromURL operation. */\nexport interface BlobStartCopyFromURLExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_copyFromURL operation. */\nexport interface BlobCopyFromURLHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** String identifier for this copy operation. */\n  copyId?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: SyncCopyStatusType;\n  /** This response header is returned so that the client can check for the integrity of the copied content. This header is only returned if the source content MD5 was specified. */\n  contentMD5?: Uint8Array;\n  /** This response header is returned so that the client can check for the integrity of the copied content. */\n  xMsContentCrc64?: Uint8Array;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_copyFromURL operation. */\nexport interface BlobCopyFromURLExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_abortCopyFromURL operation. */\nexport interface BlobAbortCopyFromURLHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_abortCopyFromURL operation. */\nexport interface BlobAbortCopyFromURLExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setTier operation. */\nexport interface BlobSetTierHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and newer. */\n  version?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setTier operation. */\nexport interface BlobSetTierExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_getAccountInfo operation. */\nexport interface BlobGetAccountInfoHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Identifies the sku name of the account */\n  skuName?: SkuName;\n  /** Identifies the account kind */\n  accountKind?: AccountKind;\n  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */\n  isHierarchicalNamespaceEnabled?: boolean;\n}\n\n/** Defines headers for Blob_getAccountInfo operation. */\nexport interface BlobGetAccountInfoExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_query operation. */\nexport interface BlobQueryHeaders {\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  metadata?: { [propertyName: string]: string };\n  /** The number of bytes present in the response body. */\n  contentLength?: number;\n  /** The media type of the body of the response. For Download Blob this is 'application/octet-stream' */\n  contentType?: string;\n  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */\n  contentRange?: string;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header returns the value that was specified for the Content-Encoding request header */\n  contentEncoding?: string;\n  /** This header is returned if it was previously specified for the blob. */\n  cacheControl?: string;\n  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */\n  contentDisposition?: string;\n  /** This header returns the value that was specified for the Content-Language request header. */\n  contentLanguage?: string;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** The blob's type. */\n  blobType?: BlobType;\n  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copyCompletionTime?: Date;\n  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyStatusDescription?: string;\n  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */\n  copyId?: string;\n  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */\n  copyProgress?: string;\n  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */\n  copySource?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: CopyStatusType;\n  /** When a blob is leased, specifies whether the lease is of infinite or fixed duration. */\n  leaseDuration?: LeaseDurationType;\n  /** Lease state of the blob. */\n  leaseState?: LeaseStateType;\n  /** The current lease status of the blob. */\n  leaseStatus?: LeaseStatusType;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** Indicates that the service supports requests for partial blob content. */\n  acceptRanges?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */\n  blobCommittedBlockCount?: number;\n  /** The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted). */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */\n  blobContentMD5?: Uint8Array;\n  /** Error Code */\n  errorCode?: string;\n  /** If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request). */\n  contentCrc64?: Uint8Array;\n}\n\n/** Defines headers for Blob_query operation. */\nexport interface BlobQueryExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_getTags operation. */\nexport interface BlobGetTagsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_getTags operation. */\nexport interface BlobGetTagsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setTags operation. */\nexport interface BlobSetTagsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for Blob_setTags operation. */\nexport interface BlobSetTagsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_create operation. */\nexport interface PageBlobCreateHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_create operation. */\nexport interface PageBlobCreateExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_uploadPages operation. */\nexport interface PageBlobUploadPagesHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** The current sequence number for the page blob. */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the pages. This header is only returned when the pages were encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_uploadPages operation. */\nexport interface PageBlobUploadPagesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_clearPages operation. */\nexport interface PageBlobClearPagesHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** The current sequence number for the page blob. */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_clearPages operation. */\nexport interface PageBlobClearPagesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_uploadPagesFromURL operation. */\nexport interface PageBlobUploadPagesFromURLHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** The current sequence number for the page blob. */\n  blobSequenceNumber?: number;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_uploadPagesFromURL operation. */\nexport interface PageBlobUploadPagesFromURLExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_getPageRanges operation. */\nexport interface PageBlobGetPageRangesHeaders {\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** The size of the blob in bytes. */\n  blobContentLength?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_getPageRanges operation. */\nexport interface PageBlobGetPageRangesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_getPageRangesDiff operation. */\nexport interface PageBlobGetPageRangesDiffHeaders {\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** The size of the blob in bytes. */\n  blobContentLength?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_getPageRangesDiff operation. */\nexport interface PageBlobGetPageRangesDiffExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_resize operation. */\nexport interface PageBlobResizeHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_resize operation. */\nexport interface PageBlobResizeExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_updateSequenceNumber operation. */\nexport interface PageBlobUpdateSequenceNumberHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs */\n  blobSequenceNumber?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_updateSequenceNumber operation. */\nexport interface PageBlobUpdateSequenceNumberExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_copyIncremental operation. */\nexport interface PageBlobCopyIncrementalHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */\n  copyId?: string;\n  /** State of the copy operation identified by x-ms-copy-id. */\n  copyStatus?: CopyStatusType;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for PageBlob_copyIncremental operation. */\nexport interface PageBlobCopyIncrementalExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_create operation. */\nexport interface AppendBlobCreateHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_create operation. */\nexport interface AppendBlobCreateExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_appendBlock operation. */\nexport interface AppendBlobAppendBlockHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** This response header is returned only for append operations. It returns the offset at which the block was committed, in bytes. */\n  blobAppendOffset?: string;\n  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */\n  blobCommittedBlockCount?: number;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_appendBlock operation. */\nexport interface AppendBlobAppendBlockExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_appendBlockFromUrl operation. */\nexport interface AppendBlobAppendBlockFromUrlHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** This response header is returned only for append operations. It returns the offset at which the block was committed, in bytes. */\n  blobAppendOffset?: string;\n  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */\n  blobCommittedBlockCount?: number;\n  /** The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_appendBlockFromUrl operation. */\nexport interface AppendBlobAppendBlockFromUrlExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for AppendBlob_seal operation. */\nexport interface AppendBlobSealHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** If this blob has been sealed */\n  isSealed?: boolean;\n}\n\n/** Defines headers for AppendBlob_seal operation. */\nexport interface AppendBlobSealExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_upload operation. */\nexport interface BlockBlobUploadHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_upload operation. */\nexport interface BlockBlobUploadExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_putBlobFromUrl operation. */\nexport interface BlockBlobPutBlobFromUrlHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */\n  contentMD5?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_putBlobFromUrl operation. */\nexport interface BlockBlobPutBlobFromUrlExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_stageBlock operation. */\nexport interface BlockBlobStageBlockHeaders {\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  contentMD5?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_stageBlock operation. */\nexport interface BlockBlobStageBlockExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_stageBlockFromURL operation. */\nexport interface BlockBlobStageBlockFromURLHeaders {\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. The value of this header is computed by the Blob service; it is not necessarily the same value specified in the request headers. */\n  xMsContentCrc64?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the block. This header is only returned when the block was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_stageBlockFromURL operation. */\nexport interface BlockBlobStageBlockFromURLExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_commitBlockList operation. */\nexport interface BlockBlobCommitBlockListHeaders {\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** This header is returned so that the client can check for message content integrity. This header refers to the content of the request, meaning, in this case, the list of blocks, and not the content of the blob itself. */\n  contentMD5?: Uint8Array;\n  /** This header is returned so that the client can check for message content integrity. This header refers to the content of the request, meaning, in this case, the list of blocks, and not the content of the blob itself. */\n  xMsContentCrc64?: Uint8Array;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */\n  versionId?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */\n  isServerEncrypted?: boolean;\n  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */\n  encryptionKeySha256?: string;\n  /** Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope. */\n  encryptionScope?: string;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_commitBlockList operation. */\nexport interface BlockBlobCommitBlockListExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_getBlockList operation. */\nexport interface BlockBlobGetBlockListHeaders {\n  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */\n  lastModified?: Date;\n  /** The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes. */\n  etag?: string;\n  /** The media type of the body of the response. For Get Block List this is 'application/xml' */\n  contentType?: string;\n  /** The size of the blob in bytes. */\n  blobContentLength?: number;\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  date?: Date;\n  /** Error Code */\n  errorCode?: string;\n}\n\n/** Defines headers for BlockBlob_getBlockList operation. */\nexport interface BlockBlobGetBlockListExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Parameter group */\nexport interface ContainerEncryptionScope {\n  /** Optional.  Version 2019-07-07 and later.  Specifies the default encryption scope to set on the container and use for all future writes. */\n  defaultEncryptionScope?: string;\n  /** Optional.  Version 2019-07-07 and newer.  If true, prevents any request from specifying a different encryption scope than the scope set on the container. */\n  preventEncryptionScopeOverride?: boolean;\n}\n\n/** Parameter group */\nexport interface LeaseAccessConditions {\n  /** If specified, the operation only succeeds if the resource's lease is active and matches this ID. */\n  leaseId?: string;\n}\n\n/** Parameter group */\nexport interface ModifiedAccessConditions {\n  /** Specify this header value to operate only on a blob if it has been modified since the specified date/time. */\n  ifModifiedSince?: Date;\n  /** Specify this header value to operate only on a blob if it has not been modified since the specified date/time. */\n  ifUnmodifiedSince?: Date;\n  /** Specify an ETag value to operate only on blobs with a matching value. */\n  ifMatch?: string;\n  /** Specify an ETag value to operate only on blobs without a matching value. */\n  ifNoneMatch?: string;\n  /** Specify a SQL where clause on blob tags to operate only on blobs with a matching value. */\n  ifTags?: string;\n}\n\n/** Parameter group */\nexport interface CpkInfo {\n  /** Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionKey?: string;\n  /** The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided. */\n  encryptionKeySha256?: string;\n  /** The algorithm used to produce the encryption key hash. Currently, the only accepted value is \"AES256\". Must be provided if the x-ms-encryption-key header is provided. */\n  encryptionAlgorithm?: EncryptionAlgorithmType;\n}\n\n/** Parameter group */\nexport interface BlobHttpHeaders {\n  /** Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request. */\n  blobCacheControl?: string;\n  /** Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request. */\n  blobContentType?: string;\n  /** Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded. */\n  blobContentMD5?: Uint8Array;\n  /** Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request. */\n  blobContentEncoding?: string;\n  /** Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request. */\n  blobContentLanguage?: string;\n  /** Optional. Sets the blob's Content-Disposition header. */\n  blobContentDisposition?: string;\n}\n\n/** Parameter group */\nexport interface SourceModifiedAccessConditions {\n  /** Specify this header value to operate only on a blob if it has been modified since the specified date/time. */\n  sourceIfModifiedSince?: Date;\n  /** Specify this header value to operate only on a blob if it has not been modified since the specified date/time. */\n  sourceIfUnmodifiedSince?: Date;\n  /** Specify an ETag value to operate only on blobs with a matching value. */\n  sourceIfMatch?: string;\n  /** Specify an ETag value to operate only on blobs without a matching value. */\n  sourceIfNoneMatch?: string;\n  /** Specify a SQL where clause on blob tags to operate only on blobs with a matching value. */\n  sourceIfTags?: string;\n}\n\n/** Parameter group */\nexport interface SequenceNumberAccessConditions {\n  /** Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified. */\n  ifSequenceNumberLessThanOrEqualTo?: number;\n  /** Specify this header value to operate only on a blob if it has a sequence number less than the specified. */\n  ifSequenceNumberLessThan?: number;\n  /** Specify this header value to operate only on a blob if it has the specified sequence number. */\n  ifSequenceNumberEqualTo?: number;\n}\n\n/** Parameter group */\nexport interface AppendPositionAccessConditions {\n  /** Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed). */\n  maxSize?: number;\n  /** Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed). */\n  appendPosition?: number;\n}\n\n/** Known values of {@link EncryptionAlgorithmType} that the service accepts. */\nexport enum KnownEncryptionAlgorithmType {\n  /** AES256 */\n  AES256 = \"AES256\",\n}\n\n/**\n * Defines values for EncryptionAlgorithmType. \\\n * {@link KnownEncryptionAlgorithmType} can be used interchangeably with EncryptionAlgorithmType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AES256**\n */\nexport type EncryptionAlgorithmType = string;\n\n/** Known values of {@link BlobExpiryOptions} that the service accepts. */\nexport enum KnownBlobExpiryOptions {\n  /** NeverExpire */\n  NeverExpire = \"NeverExpire\",\n  /** RelativeToCreation */\n  RelativeToCreation = \"RelativeToCreation\",\n  /** RelativeToNow */\n  RelativeToNow = \"RelativeToNow\",\n  /** Absolute */\n  Absolute = \"Absolute\",\n}\n\n/**\n * Defines values for BlobExpiryOptions. \\\n * {@link KnownBlobExpiryOptions} can be used interchangeably with BlobExpiryOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NeverExpire** \\\n * **RelativeToCreation** \\\n * **RelativeToNow** \\\n * **Absolute**\n */\nexport type BlobExpiryOptions = string;\n\n/** Known values of {@link StorageErrorCode} that the service accepts. */\nexport enum KnownStorageErrorCode {\n  /** AccountAlreadyExists */\n  AccountAlreadyExists = \"AccountAlreadyExists\",\n  /** AccountBeingCreated */\n  AccountBeingCreated = \"AccountBeingCreated\",\n  /** AccountIsDisabled */\n  AccountIsDisabled = \"AccountIsDisabled\",\n  /** AuthenticationFailed */\n  AuthenticationFailed = \"AuthenticationFailed\",\n  /** AuthorizationFailure */\n  AuthorizationFailure = \"AuthorizationFailure\",\n  /** ConditionHeadersNotSupported */\n  ConditionHeadersNotSupported = \"ConditionHeadersNotSupported\",\n  /** ConditionNotMet */\n  ConditionNotMet = \"ConditionNotMet\",\n  /** EmptyMetadataKey */\n  EmptyMetadataKey = \"EmptyMetadataKey\",\n  /** InsufficientAccountPermissions */\n  InsufficientAccountPermissions = \"InsufficientAccountPermissions\",\n  /** InternalError */\n  InternalError = \"InternalError\",\n  /** InvalidAuthenticationInfo */\n  InvalidAuthenticationInfo = \"InvalidAuthenticationInfo\",\n  /** InvalidHeaderValue */\n  InvalidHeaderValue = \"InvalidHeaderValue\",\n  /** InvalidHttpVerb */\n  InvalidHttpVerb = \"InvalidHttpVerb\",\n  /** InvalidInput */\n  InvalidInput = \"InvalidInput\",\n  /** InvalidMd5 */\n  InvalidMd5 = \"InvalidMd5\",\n  /** InvalidMetadata */\n  InvalidMetadata = \"InvalidMetadata\",\n  /** InvalidQueryParameterValue */\n  InvalidQueryParameterValue = \"InvalidQueryParameterValue\",\n  /** InvalidRange */\n  InvalidRange = \"InvalidRange\",\n  /** InvalidResourceName */\n  InvalidResourceName = \"InvalidResourceName\",\n  /** InvalidUri */\n  InvalidUri = \"InvalidUri\",\n  /** InvalidXmlDocument */\n  InvalidXmlDocument = \"InvalidXmlDocument\",\n  /** InvalidXmlNodeValue */\n  InvalidXmlNodeValue = \"InvalidXmlNodeValue\",\n  /** Md5Mismatch */\n  Md5Mismatch = \"Md5Mismatch\",\n  /** MetadataTooLarge */\n  MetadataTooLarge = \"MetadataTooLarge\",\n  /** MissingContentLengthHeader */\n  MissingContentLengthHeader = \"MissingContentLengthHeader\",\n  /** MissingRequiredQueryParameter */\n  MissingRequiredQueryParameter = \"MissingRequiredQueryParameter\",\n  /** MissingRequiredHeader */\n  MissingRequiredHeader = \"MissingRequiredHeader\",\n  /** MissingRequiredXmlNode */\n  MissingRequiredXmlNode = \"MissingRequiredXmlNode\",\n  /** MultipleConditionHeadersNotSupported */\n  MultipleConditionHeadersNotSupported = \"MultipleConditionHeadersNotSupported\",\n  /** OperationTimedOut */\n  OperationTimedOut = \"OperationTimedOut\",\n  /** OutOfRangeInput */\n  OutOfRangeInput = \"OutOfRangeInput\",\n  /** OutOfRangeQueryParameterValue */\n  OutOfRangeQueryParameterValue = \"OutOfRangeQueryParameterValue\",\n  /** RequestBodyTooLarge */\n  RequestBodyTooLarge = \"RequestBodyTooLarge\",\n  /** ResourceTypeMismatch */\n  ResourceTypeMismatch = \"ResourceTypeMismatch\",\n  /** RequestUrlFailedToParse */\n  RequestUrlFailedToParse = \"RequestUrlFailedToParse\",\n  /** ResourceAlreadyExists */\n  ResourceAlreadyExists = \"ResourceAlreadyExists\",\n  /** ResourceNotFound */\n  ResourceNotFound = \"ResourceNotFound\",\n  /** ServerBusy */\n  ServerBusy = \"ServerBusy\",\n  /** UnsupportedHeader */\n  UnsupportedHeader = \"UnsupportedHeader\",\n  /** UnsupportedXmlNode */\n  UnsupportedXmlNode = \"UnsupportedXmlNode\",\n  /** UnsupportedQueryParameter */\n  UnsupportedQueryParameter = \"UnsupportedQueryParameter\",\n  /** UnsupportedHttpVerb */\n  UnsupportedHttpVerb = \"UnsupportedHttpVerb\",\n  /** AppendPositionConditionNotMet */\n  AppendPositionConditionNotMet = \"AppendPositionConditionNotMet\",\n  /** BlobAlreadyExists */\n  BlobAlreadyExists = \"BlobAlreadyExists\",\n  /** BlobImmutableDueToPolicy */\n  BlobImmutableDueToPolicy = \"BlobImmutableDueToPolicy\",\n  /** BlobNotFound */\n  BlobNotFound = \"BlobNotFound\",\n  /** BlobOverwritten */\n  BlobOverwritten = \"BlobOverwritten\",\n  /** BlobTierInadequateForContentLength */\n  BlobTierInadequateForContentLength = \"BlobTierInadequateForContentLength\",\n  /** BlobUsesCustomerSpecifiedEncryption */\n  BlobUsesCustomerSpecifiedEncryption = \"BlobUsesCustomerSpecifiedEncryption\",\n  /** BlockCountExceedsLimit */\n  BlockCountExceedsLimit = \"BlockCountExceedsLimit\",\n  /** BlockListTooLong */\n  BlockListTooLong = \"BlockListTooLong\",\n  /** CannotChangeToLowerTier */\n  CannotChangeToLowerTier = \"CannotChangeToLowerTier\",\n  /** CannotVerifyCopySource */\n  CannotVerifyCopySource = \"CannotVerifyCopySource\",\n  /** ContainerAlreadyExists */\n  ContainerAlreadyExists = \"ContainerAlreadyExists\",\n  /** ContainerBeingDeleted */\n  ContainerBeingDeleted = \"ContainerBeingDeleted\",\n  /** ContainerDisabled */\n  ContainerDisabled = \"ContainerDisabled\",\n  /** ContainerNotFound */\n  ContainerNotFound = \"ContainerNotFound\",\n  /** ContentLengthLargerThanTierLimit */\n  ContentLengthLargerThanTierLimit = \"ContentLengthLargerThanTierLimit\",\n  /** CopyAcrossAccountsNotSupported */\n  CopyAcrossAccountsNotSupported = \"CopyAcrossAccountsNotSupported\",\n  /** CopyIdMismatch */\n  CopyIdMismatch = \"CopyIdMismatch\",\n  /** FeatureVersionMismatch */\n  FeatureVersionMismatch = \"FeatureVersionMismatch\",\n  /** IncrementalCopyBlobMismatch */\n  IncrementalCopyBlobMismatch = \"IncrementalCopyBlobMismatch\",\n  /** IncrementalCopyOfEarlierVersionSnapshotNotAllowed */\n  IncrementalCopyOfEarlierVersionSnapshotNotAllowed = \"IncrementalCopyOfEarlierVersionSnapshotNotAllowed\",\n  /** IncrementalCopySourceMustBeSnapshot */\n  IncrementalCopySourceMustBeSnapshot = \"IncrementalCopySourceMustBeSnapshot\",\n  /** InfiniteLeaseDurationRequired */\n  InfiniteLeaseDurationRequired = \"InfiniteLeaseDurationRequired\",\n  /** InvalidBlobOrBlock */\n  InvalidBlobOrBlock = \"InvalidBlobOrBlock\",\n  /** InvalidBlobTier */\n  InvalidBlobTier = \"InvalidBlobTier\",\n  /** InvalidBlobType */\n  InvalidBlobType = \"InvalidBlobType\",\n  /** InvalidBlockId */\n  InvalidBlockId = \"InvalidBlockId\",\n  /** InvalidBlockList */\n  InvalidBlockList = \"InvalidBlockList\",\n  /** InvalidOperation */\n  InvalidOperation = \"InvalidOperation\",\n  /** InvalidPageRange */\n  InvalidPageRange = \"InvalidPageRange\",\n  /** InvalidSourceBlobType */\n  InvalidSourceBlobType = \"InvalidSourceBlobType\",\n  /** InvalidSourceBlobUrl */\n  InvalidSourceBlobUrl = \"InvalidSourceBlobUrl\",\n  /** InvalidVersionForPageBlobOperation */\n  InvalidVersionForPageBlobOperation = \"InvalidVersionForPageBlobOperation\",\n  /** LeaseAlreadyPresent */\n  LeaseAlreadyPresent = \"LeaseAlreadyPresent\",\n  /** LeaseAlreadyBroken */\n  LeaseAlreadyBroken = \"LeaseAlreadyBroken\",\n  /** LeaseIdMismatchWithBlobOperation */\n  LeaseIdMismatchWithBlobOperation = \"LeaseIdMismatchWithBlobOperation\",\n  /** LeaseIdMismatchWithContainerOperation */\n  LeaseIdMismatchWithContainerOperation = \"LeaseIdMismatchWithContainerOperation\",\n  /** LeaseIdMismatchWithLeaseOperation */\n  LeaseIdMismatchWithLeaseOperation = \"LeaseIdMismatchWithLeaseOperation\",\n  /** LeaseIdMissing */\n  LeaseIdMissing = \"LeaseIdMissing\",\n  /** LeaseIsBreakingAndCannotBeAcquired */\n  LeaseIsBreakingAndCannotBeAcquired = \"LeaseIsBreakingAndCannotBeAcquired\",\n  /** LeaseIsBreakingAndCannotBeChanged */\n  LeaseIsBreakingAndCannotBeChanged = \"LeaseIsBreakingAndCannotBeChanged\",\n  /** LeaseIsBrokenAndCannotBeRenewed */\n  LeaseIsBrokenAndCannotBeRenewed = \"LeaseIsBrokenAndCannotBeRenewed\",\n  /** LeaseLost */\n  LeaseLost = \"LeaseLost\",\n  /** LeaseNotPresentWithBlobOperation */\n  LeaseNotPresentWithBlobOperation = \"LeaseNotPresentWithBlobOperation\",\n  /** LeaseNotPresentWithContainerOperation */\n  LeaseNotPresentWithContainerOperation = \"LeaseNotPresentWithContainerOperation\",\n  /** LeaseNotPresentWithLeaseOperation */\n  LeaseNotPresentWithLeaseOperation = \"LeaseNotPresentWithLeaseOperation\",\n  /** MaxBlobSizeConditionNotMet */\n  MaxBlobSizeConditionNotMet = \"MaxBlobSizeConditionNotMet\",\n  /** NoAuthenticationInformation */\n  NoAuthenticationInformation = \"NoAuthenticationInformation\",\n  /** NoPendingCopyOperation */\n  NoPendingCopyOperation = \"NoPendingCopyOperation\",\n  /** OperationNotAllowedOnIncrementalCopyBlob */\n  OperationNotAllowedOnIncrementalCopyBlob = \"OperationNotAllowedOnIncrementalCopyBlob\",\n  /** PendingCopyOperation */\n  PendingCopyOperation = \"PendingCopyOperation\",\n  /** PreviousSnapshotCannotBeNewer */\n  PreviousSnapshotCannotBeNewer = \"PreviousSnapshotCannotBeNewer\",\n  /** PreviousSnapshotNotFound */\n  PreviousSnapshotNotFound = \"PreviousSnapshotNotFound\",\n  /** PreviousSnapshotOperationNotSupported */\n  PreviousSnapshotOperationNotSupported = \"PreviousSnapshotOperationNotSupported\",\n  /** SequenceNumberConditionNotMet */\n  SequenceNumberConditionNotMet = \"SequenceNumberConditionNotMet\",\n  /** SequenceNumberIncrementTooLarge */\n  SequenceNumberIncrementTooLarge = \"SequenceNumberIncrementTooLarge\",\n  /** SnapshotCountExceeded */\n  SnapshotCountExceeded = \"SnapshotCountExceeded\",\n  /** SnapshotOperationRateExceeded */\n  SnapshotOperationRateExceeded = \"SnapshotOperationRateExceeded\",\n  /** SnapshotsPresent */\n  SnapshotsPresent = \"SnapshotsPresent\",\n  /** SourceConditionNotMet */\n  SourceConditionNotMet = \"SourceConditionNotMet\",\n  /** SystemInUse */\n  SystemInUse = \"SystemInUse\",\n  /** TargetConditionNotMet */\n  TargetConditionNotMet = \"TargetConditionNotMet\",\n  /** UnauthorizedBlobOverwrite */\n  UnauthorizedBlobOverwrite = \"UnauthorizedBlobOverwrite\",\n  /** BlobBeingRehydrated */\n  BlobBeingRehydrated = \"BlobBeingRehydrated\",\n  /** BlobArchived */\n  BlobArchived = \"BlobArchived\",\n  /** BlobNotArchived */\n  BlobNotArchived = \"BlobNotArchived\",\n  /** AuthorizationSourceIPMismatch */\n  AuthorizationSourceIPMismatch = \"AuthorizationSourceIPMismatch\",\n  /** AuthorizationProtocolMismatch */\n  AuthorizationProtocolMismatch = \"AuthorizationProtocolMismatch\",\n  /** AuthorizationPermissionMismatch */\n  AuthorizationPermissionMismatch = \"AuthorizationPermissionMismatch\",\n  /** AuthorizationServiceMismatch */\n  AuthorizationServiceMismatch = \"AuthorizationServiceMismatch\",\n  /** AuthorizationResourceTypeMismatch */\n  AuthorizationResourceTypeMismatch = \"AuthorizationResourceTypeMismatch\",\n}\n\n/**\n * Defines values for StorageErrorCode. \\\n * {@link KnownStorageErrorCode} can be used interchangeably with StorageErrorCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AccountAlreadyExists** \\\n * **AccountBeingCreated** \\\n * **AccountIsDisabled** \\\n * **AuthenticationFailed** \\\n * **AuthorizationFailure** \\\n * **ConditionHeadersNotSupported** \\\n * **ConditionNotMet** \\\n * **EmptyMetadataKey** \\\n * **InsufficientAccountPermissions** \\\n * **InternalError** \\\n * **InvalidAuthenticationInfo** \\\n * **InvalidHeaderValue** \\\n * **InvalidHttpVerb** \\\n * **InvalidInput** \\\n * **InvalidMd5** \\\n * **InvalidMetadata** \\\n * **InvalidQueryParameterValue** \\\n * **InvalidRange** \\\n * **InvalidResourceName** \\\n * **InvalidUri** \\\n * **InvalidXmlDocument** \\\n * **InvalidXmlNodeValue** \\\n * **Md5Mismatch** \\\n * **MetadataTooLarge** \\\n * **MissingContentLengthHeader** \\\n * **MissingRequiredQueryParameter** \\\n * **MissingRequiredHeader** \\\n * **MissingRequiredXmlNode** \\\n * **MultipleConditionHeadersNotSupported** \\\n * **OperationTimedOut** \\\n * **OutOfRangeInput** \\\n * **OutOfRangeQueryParameterValue** \\\n * **RequestBodyTooLarge** \\\n * **ResourceTypeMismatch** \\\n * **RequestUrlFailedToParse** \\\n * **ResourceAlreadyExists** \\\n * **ResourceNotFound** \\\n * **ServerBusy** \\\n * **UnsupportedHeader** \\\n * **UnsupportedXmlNode** \\\n * **UnsupportedQueryParameter** \\\n * **UnsupportedHttpVerb** \\\n * **AppendPositionConditionNotMet** \\\n * **BlobAlreadyExists** \\\n * **BlobImmutableDueToPolicy** \\\n * **BlobNotFound** \\\n * **BlobOverwritten** \\\n * **BlobTierInadequateForContentLength** \\\n * **BlobUsesCustomerSpecifiedEncryption** \\\n * **BlockCountExceedsLimit** \\\n * **BlockListTooLong** \\\n * **CannotChangeToLowerTier** \\\n * **CannotVerifyCopySource** \\\n * **ContainerAlreadyExists** \\\n * **ContainerBeingDeleted** \\\n * **ContainerDisabled** \\\n * **ContainerNotFound** \\\n * **ContentLengthLargerThanTierLimit** \\\n * **CopyAcrossAccountsNotSupported** \\\n * **CopyIdMismatch** \\\n * **FeatureVersionMismatch** \\\n * **IncrementalCopyBlobMismatch** \\\n * **IncrementalCopyOfEarlierVersionSnapshotNotAllowed** \\\n * **IncrementalCopySourceMustBeSnapshot** \\\n * **InfiniteLeaseDurationRequired** \\\n * **InvalidBlobOrBlock** \\\n * **InvalidBlobTier** \\\n * **InvalidBlobType** \\\n * **InvalidBlockId** \\\n * **InvalidBlockList** \\\n * **InvalidOperation** \\\n * **InvalidPageRange** \\\n * **InvalidSourceBlobType** \\\n * **InvalidSourceBlobUrl** \\\n * **InvalidVersionForPageBlobOperation** \\\n * **LeaseAlreadyPresent** \\\n * **LeaseAlreadyBroken** \\\n * **LeaseIdMismatchWithBlobOperation** \\\n * **LeaseIdMismatchWithContainerOperation** \\\n * **LeaseIdMismatchWithLeaseOperation** \\\n * **LeaseIdMissing** \\\n * **LeaseIsBreakingAndCannotBeAcquired** \\\n * **LeaseIsBreakingAndCannotBeChanged** \\\n * **LeaseIsBrokenAndCannotBeRenewed** \\\n * **LeaseLost** \\\n * **LeaseNotPresentWithBlobOperation** \\\n * **LeaseNotPresentWithContainerOperation** \\\n * **LeaseNotPresentWithLeaseOperation** \\\n * **MaxBlobSizeConditionNotMet** \\\n * **NoAuthenticationInformation** \\\n * **NoPendingCopyOperation** \\\n * **OperationNotAllowedOnIncrementalCopyBlob** \\\n * **PendingCopyOperation** \\\n * **PreviousSnapshotCannotBeNewer** \\\n * **PreviousSnapshotNotFound** \\\n * **PreviousSnapshotOperationNotSupported** \\\n * **SequenceNumberConditionNotMet** \\\n * **SequenceNumberIncrementTooLarge** \\\n * **SnapshotCountExceeded** \\\n * **SnapshotOperationRateExceeded** \\\n * **SnapshotsPresent** \\\n * **SourceConditionNotMet** \\\n * **SystemInUse** \\\n * **TargetConditionNotMet** \\\n * **UnauthorizedBlobOverwrite** \\\n * **BlobBeingRehydrated** \\\n * **BlobArchived** \\\n * **BlobNotArchived** \\\n * **AuthorizationSourceIPMismatch** \\\n * **AuthorizationProtocolMismatch** \\\n * **AuthorizationPermissionMismatch** \\\n * **AuthorizationServiceMismatch** \\\n * **AuthorizationResourceTypeMismatch**\n */\nexport type StorageErrorCode = string;\n/** Defines values for GeoReplicationStatusType. */\nexport type GeoReplicationStatusType = \"live\" | \"bootstrap\" | \"unavailable\";\n/** Defines values for ListContainersIncludeType. */\nexport type ListContainersIncludeType = \"metadata\" | \"deleted\" | \"system\";\n/** Defines values for LeaseStatusType. */\nexport type LeaseStatusType = \"locked\" | \"unlocked\";\n/** Defines values for LeaseStateType. */\nexport type LeaseStateType =\n  | \"available\"\n  | \"leased\"\n  | \"expired\"\n  | \"breaking\"\n  | \"broken\";\n/** Defines values for LeaseDurationType. */\nexport type LeaseDurationType = \"infinite\" | \"fixed\";\n/** Defines values for PublicAccessType. */\nexport type PublicAccessType = \"container\" | \"blob\";\n/** Defines values for SkuName. */\nexport type SkuName =\n  | \"Standard_LRS\"\n  | \"Standard_GRS\"\n  | \"Standard_RAGRS\"\n  | \"Standard_ZRS\"\n  | \"Premium_LRS\";\n/** Defines values for AccountKind. */\nexport type AccountKind =\n  | \"Storage\"\n  | \"BlobStorage\"\n  | \"StorageV2\"\n  | \"FileStorage\"\n  | \"BlockBlobStorage\";\n/** Defines values for ListBlobsIncludeItem. */\nexport type ListBlobsIncludeItem =\n  | \"copy\"\n  | \"deleted\"\n  | \"metadata\"\n  | \"snapshots\"\n  | \"uncommittedblobs\"\n  | \"versions\"\n  | \"tags\"\n  | \"immutabilitypolicy\"\n  | \"legalhold\"\n  | \"deletedwithversions\";\n/** Defines values for BlobType. */\nexport type BlobType = \"BlockBlob\" | \"PageBlob\" | \"AppendBlob\";\n/** Defines values for CopyStatusType. */\nexport type CopyStatusType = \"pending\" | \"success\" | \"aborted\" | \"failed\";\n/** Defines values for AccessTier. */\nexport type AccessTier =\n  | \"P4\"\n  | \"P6\"\n  | \"P10\"\n  | \"P15\"\n  | \"P20\"\n  | \"P30\"\n  | \"P40\"\n  | \"P50\"\n  | \"P60\"\n  | \"P70\"\n  | \"P80\"\n  | \"Hot\"\n  | \"Cool\"\n  | \"Archive\"\n  | \"Cold\";\n/** Defines values for ArchiveStatus. */\nexport type ArchiveStatus =\n  | \"rehydrate-pending-to-hot\"\n  | \"rehydrate-pending-to-cool\"\n  | \"rehydrate-pending-to-cold\";\n/** Defines values for RehydratePriority. */\nexport type RehydratePriority = \"High\" | \"Standard\";\n/** Defines values for BlobImmutabilityPolicyMode. */\nexport type BlobImmutabilityPolicyMode = \"Mutable\" | \"Unlocked\" | \"Locked\";\n/** Defines values for DeleteSnapshotsOptionType. */\nexport type DeleteSnapshotsOptionType = \"include\" | \"only\";\n/** Defines values for BlobCopySourceTags. */\nexport type BlobCopySourceTags = \"REPLACE\" | \"COPY\";\n/** Defines values for BlockListType. */\nexport type BlockListType = \"committed\" | \"uncommitted\" | \"all\";\n/** Defines values for SequenceNumberActionType. */\nexport type SequenceNumberActionType = \"max\" | \"update\" | \"increment\";\n/** Defines values for QueryFormatType. */\nexport type QueryFormatType = \"delimited\" | \"json\" | \"arrow\" | \"parquet\";\n/** Defines values for SyncCopyStatusType. */\nexport type SyncCopyStatusType = \"success\";\n\n/** Optional parameters. */\nexport interface ServiceSetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the setProperties operation. */\nexport type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders;\n\n/** Optional parameters. */\nexport interface ServiceGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type ServiceGetPropertiesResponse = ServiceGetPropertiesHeaders &\n  BlobServiceProperties;\n\n/** Optional parameters. */\nexport interface ServiceGetStatisticsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getStatistics operation. */\nexport type ServiceGetStatisticsResponse = ServiceGetStatisticsHeaders &\n  BlobServiceStatistics;\n\n/** Optional parameters. */\nexport interface ServiceListContainersSegmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Filters the results to return only containers whose name begins with the specified prefix. */\n  prefix?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** Include this parameter to specify that the container's metadata be returned as part of the response body. */\n  include?: ListContainersIncludeType[];\n}\n\n/** Contains response data for the listContainersSegment operation. */\nexport type ServiceListContainersSegmentResponse =\n  ServiceListContainersSegmentHeaders & ListContainersSegmentResponse;\n\n/** Optional parameters. */\nexport interface ServiceGetUserDelegationKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getUserDelegationKey operation. */\nexport type ServiceGetUserDelegationKeyResponse =\n  ServiceGetUserDelegationKeyHeaders & UserDelegationKey;\n\n/** Optional parameters. */\nexport interface ServiceGetAccountInfoOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getAccountInfo operation. */\nexport type ServiceGetAccountInfoResponse = ServiceGetAccountInfoHeaders;\n\n/** Optional parameters. */\nexport interface ServiceSubmitBatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the submitBatch operation. */\nexport type ServiceSubmitBatchResponse = ServiceSubmitBatchHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always `undefined` in node.js.\n   */\n  blobBody?: Promise<Blob>;\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always `undefined` in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n};\n\n/** Optional parameters. */\nexport interface ServiceFilterBlobsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** Filters the results to return only to return only blobs whose tags match the specified expression. */\n  where?: string;\n}\n\n/** Contains response data for the filterBlobs operation. */\nexport type ServiceFilterBlobsResponse = ServiceFilterBlobsHeaders &\n  FilterBlobSegment;\n\n/** Optional parameters. */\nexport interface ContainerCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  containerEncryptionScope?: ContainerEncryptionScope;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies whether data in the container may be accessed publicly and the level of access */\n  access?: PublicAccessType;\n}\n\n/** Contains response data for the create operation. */\nexport type ContainerCreateResponse = ContainerCreateHeaders;\n\n/** Optional parameters. */\nexport interface ContainerGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type ContainerGetPropertiesResponse = ContainerGetPropertiesHeaders;\n\n/** Optional parameters. */\nexport interface ContainerDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type ContainerDeleteResponse = ContainerDeleteHeaders;\n\n/** Optional parameters. */\nexport interface ContainerSetMetadataOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** Contains response data for the setMetadata operation. */\nexport type ContainerSetMetadataResponse = ContainerSetMetadataHeaders;\n\n/** Optional parameters. */\nexport interface ContainerGetAccessPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getAccessPolicy operation. */\nexport type ContainerGetAccessPolicyResponse = ContainerGetAccessPolicyHeaders &\n  SignedIdentifier[];\n\n/** Optional parameters. */\nexport interface ContainerSetAccessPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies whether data in the container may be accessed publicly and the level of access */\n  access?: PublicAccessType;\n  /** the acls for the container */\n  containerAcl?: SignedIdentifier[];\n}\n\n/** Contains response data for the setAccessPolicy operation. */\nexport type ContainerSetAccessPolicyResponse = ContainerSetAccessPolicyHeaders;\n\n/** Optional parameters. */\nexport interface ContainerRestoreOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional.  Version 2019-12-12 and later.  Specifies the name of the deleted container to restore. */\n  deletedContainerName?: string;\n  /** Optional.  Version 2019-12-12 and later.  Specifies the version of the deleted container to restore. */\n  deletedContainerVersion?: string;\n}\n\n/** Contains response data for the restore operation. */\nexport type ContainerRestoreResponse = ContainerRestoreHeaders;\n\n/** Optional parameters. */\nexport interface ContainerRenameOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** A lease ID for the source path. If specified, the source path must have an active lease and the lease ID must match. */\n  sourceLeaseId?: string;\n}\n\n/** Contains response data for the rename operation. */\nexport type ContainerRenameResponse = ContainerRenameHeaders;\n\n/** Optional parameters. */\nexport interface ContainerSubmitBatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the submitBatch operation. */\nexport type ContainerSubmitBatchResponse = ContainerSubmitBatchHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always `undefined` in node.js.\n   */\n  blobBody?: Promise<Blob>;\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always `undefined` in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n};\n\n/** Optional parameters. */\nexport interface ContainerFilterBlobsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** Filters the results to return only to return only blobs whose tags match the specified expression. */\n  where?: string;\n}\n\n/** Contains response data for the filterBlobs operation. */\nexport type ContainerFilterBlobsResponse = ContainerFilterBlobsHeaders &\n  FilterBlobSegment;\n\n/** Optional parameters. */\nexport interface ContainerAcquireLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */\n  duration?: number;\n  /** Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. */\n  proposedLeaseId?: string;\n}\n\n/** Contains response data for the acquireLease operation. */\nexport type ContainerAcquireLeaseResponse = ContainerAcquireLeaseHeaders;\n\n/** Optional parameters. */\nexport interface ContainerReleaseLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the releaseLease operation. */\nexport type ContainerReleaseLeaseResponse = ContainerReleaseLeaseHeaders;\n\n/** Optional parameters. */\nexport interface ContainerRenewLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the renewLease operation. */\nexport type ContainerRenewLeaseResponse = ContainerRenewLeaseHeaders;\n\n/** Optional parameters. */\nexport interface ContainerBreakLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately. */\n  breakPeriod?: number;\n}\n\n/** Contains response data for the breakLease operation. */\nexport type ContainerBreakLeaseResponse = ContainerBreakLeaseHeaders;\n\n/** Optional parameters. */\nexport interface ContainerChangeLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the changeLease operation. */\nexport type ContainerChangeLeaseResponse = ContainerChangeLeaseHeaders;\n\n/** Optional parameters. */\nexport interface ContainerListBlobFlatSegmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Filters the results to return only containers whose name begins with the specified prefix. */\n  prefix?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** Include this parameter to specify one or more datasets to include in the response. */\n  include?: ListBlobsIncludeItem[];\n}\n\n/** Contains response data for the listBlobFlatSegment operation. */\nexport type ContainerListBlobFlatSegmentResponse =\n  ContainerListBlobFlatSegmentHeaders & ListBlobsFlatSegmentResponse;\n\n/** Optional parameters. */\nexport interface ContainerListBlobHierarchySegmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Filters the results to return only containers whose name begins with the specified prefix. */\n  prefix?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** Include this parameter to specify one or more datasets to include in the response. */\n  include?: ListBlobsIncludeItem[];\n}\n\n/** Contains response data for the listBlobHierarchySegment operation. */\nexport type ContainerListBlobHierarchySegmentResponse =\n  ContainerListBlobHierarchySegmentHeaders & ListBlobsHierarchySegmentResponse;\n\n/** Optional parameters. */\nexport interface ContainerGetAccountInfoOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getAccountInfo operation. */\nexport type ContainerGetAccountInfoResponse = ContainerGetAccountInfoHeaders;\n\n/** Optional parameters. */\nexport interface BlobDownloadOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n  /** Return only the bytes of the blob in the specified range. */\n  range?: string;\n  /** When set to true and specified together with the Range, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size. */\n  rangeGetContentMD5?: boolean;\n  /** When set to true and specified together with the Range, the service returns the CRC64 hash for the range, as long as the range is less than or equal to 4 MB in size. */\n  rangeGetContentCRC64?: boolean;\n}\n\n/** Contains response data for the download operation. */\nexport type BlobDownloadResponse = BlobDownloadHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always `undefined` in node.js.\n   */\n  blobBody?: Promise<Blob>;\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always `undefined` in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n};\n\n/** Optional parameters. */\nexport interface BlobGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type BlobGetPropertiesResponse = BlobGetPropertiesHeaders;\n\n/** Optional parameters. */\nexport interface BlobDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n  /** Required if the blob has associated snapshots. Specify one of the following two options: include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots and not the blob itself */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /** Optional.  Only possible value is 'permanent', which specifies to permanently delete a blob if blob soft delete is enabled. */\n  blobDeleteType?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type BlobDeleteResponse = BlobDeleteHeaders;\n\n/** Optional parameters. */\nexport interface BlobUndeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the undelete operation. */\nexport type BlobUndeleteResponse = BlobUndeleteHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetExpiryOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The time to set the blob to expiry */\n  expiresOn?: string;\n}\n\n/** Contains response data for the setExpiry operation. */\nexport type BlobSetExpiryResponse = BlobSetExpiryHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetHttpHeadersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the setHttpHeaders operation. */\nexport type BlobSetHttpHeadersResponse = BlobSetHttpHeadersHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n}\n\n/** Contains response data for the setImmutabilityPolicy operation. */\nexport type BlobSetImmutabilityPolicyResponse =\n  BlobSetImmutabilityPolicyHeaders;\n\n/** Optional parameters. */\nexport interface BlobDeleteImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the deleteImmutabilityPolicy operation. */\nexport type BlobDeleteImmutabilityPolicyResponse =\n  BlobDeleteImmutabilityPolicyHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetLegalHoldOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the setLegalHold operation. */\nexport type BlobSetLegalHoldResponse = BlobSetLegalHoldHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetMetadataOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n}\n\n/** Contains response data for the setMetadata operation. */\nexport type BlobSetMetadataResponse = BlobSetMetadataHeaders;\n\n/** Optional parameters. */\nexport interface BlobAcquireLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */\n  duration?: number;\n  /** Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. */\n  proposedLeaseId?: string;\n}\n\n/** Contains response data for the acquireLease operation. */\nexport type BlobAcquireLeaseResponse = BlobAcquireLeaseHeaders;\n\n/** Optional parameters. */\nexport interface BlobReleaseLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the releaseLease operation. */\nexport type BlobReleaseLeaseResponse = BlobReleaseLeaseHeaders;\n\n/** Optional parameters. */\nexport interface BlobRenewLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the renewLease operation. */\nexport type BlobRenewLeaseResponse = BlobRenewLeaseHeaders;\n\n/** Optional parameters. */\nexport interface BlobChangeLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the changeLease operation. */\nexport type BlobChangeLeaseResponse = BlobChangeLeaseHeaders;\n\n/** Optional parameters. */\nexport interface BlobBreakLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately. */\n  breakPeriod?: number;\n}\n\n/** Contains response data for the breakLease operation. */\nexport type BlobBreakLeaseResponse = BlobBreakLeaseHeaders;\n\n/** Optional parameters. */\nexport interface BlobCreateSnapshotOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n}\n\n/** Contains response data for the createSnapshot operation. */\nexport type BlobCreateSnapshotResponse = BlobCreateSnapshotHeaders;\n\n/** Optional parameters. */\nexport interface BlobStartCopyFromURLOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional: Indicates the priority with which to rehydrate an archived blob. */\n  rehydratePriority?: RehydratePriority;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Overrides the sealed state of the destination blob.  Service version 2019-12-12 and newer. */\n  sealBlob?: boolean;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n}\n\n/** Contains response data for the startCopyFromURL operation. */\nexport type BlobStartCopyFromURLResponse = BlobStartCopyFromURLHeaders;\n\n/** Optional parameters. */\nexport interface BlobCopyFromURLOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n  /** Specify the md5 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentMD5?: Uint8Array;\n  /** Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. */\n  copySourceAuthorization?: string;\n  /** Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by x-ms-tags. */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/** Contains response data for the copyFromURL operation. */\nexport type BlobCopyFromURLResponse = BlobCopyFromURLHeaders;\n\n/** Optional parameters. */\nexport interface BlobAbortCopyFromURLOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the abortCopyFromURL operation. */\nexport type BlobAbortCopyFromURLResponse = BlobAbortCopyFromURLHeaders;\n\n/** Optional parameters. */\nexport interface BlobSetTierOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n  /** Optional: Indicates the priority with which to rehydrate an archived blob. */\n  rehydratePriority?: RehydratePriority;\n}\n\n/** Contains response data for the setTier operation. */\nexport type BlobSetTierResponse = BlobSetTierHeaders;\n\n/** Optional parameters. */\nexport interface BlobGetAccountInfoOptionalParams\n  extends coreClient.OperationOptions {\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the getAccountInfo operation. */\nexport type BlobGetAccountInfoResponse = BlobGetAccountInfoHeaders;\n\n/** Optional parameters. */\nexport interface BlobQueryOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** the query request */\n  queryRequest?: QueryRequest;\n}\n\n/** Contains response data for the query operation. */\nexport type BlobQueryResponse = BlobQueryHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always `undefined` in node.js.\n   */\n  blobBody?: Promise<Blob>;\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always `undefined` in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n};\n\n/** Optional parameters. */\nexport interface BlobGetTagsOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n}\n\n/** Contains response data for the getTags operation. */\nexport type BlobGetTagsResponse = BlobGetTagsHeaders & BlobTags;\n\n/** Optional parameters. */\nexport interface BlobSetTagsOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer. */\n  versionId?: string;\n  /** Blob tags */\n  tags?: BlobTags;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the setTags operation. */\nexport type BlobSetTagsResponse = BlobSetTagsHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n  /** Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1. */\n  blobSequenceNumber?: number;\n}\n\n/** Contains response data for the create operation. */\nexport type PageBlobCreateResponse = PageBlobCreateHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobUploadPagesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Return only the bytes of the blob in the specified range. */\n  range?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the uploadPages operation. */\nexport type PageBlobUploadPagesResponse = PageBlobUploadPagesHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobClearPagesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Return only the bytes of the blob in the specified range. */\n  range?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n}\n\n/** Contains response data for the clearPages operation. */\nexport type PageBlobClearPagesResponse = PageBlobClearPagesHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobUploadPagesFromURLOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** Parameter group */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the md5 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentMD5?: Uint8Array;\n  /** Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. */\n  copySourceAuthorization?: string;\n  /** Specify the crc64 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the uploadPagesFromURL operation. */\nexport type PageBlobUploadPagesFromURLResponse =\n  PageBlobUploadPagesFromURLHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobGetPageRangesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** Return only the bytes of the blob in the specified range. */\n  range?: string;\n}\n\n/** Contains response data for the getPageRanges operation. */\nexport type PageBlobGetPageRangesResponse = PageBlobGetPageRangesHeaders &\n  PageList;\n\n/** Optional parameters. */\nexport interface PageBlobGetPageRangesDiffOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the ContinuationToken value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */\n  marker?: string;\n  /** Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000. */\n  maxPageSize?: number;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n  /** Return only the bytes of the blob in the specified range. */\n  range?: string;\n  /** Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that specifies that the response will contain only pages that were changed between target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only for blobs created on or after January 1, 2016. */\n  prevsnapshot?: string;\n  /** Optional. This header is only supported in service versions 2019-04-19 and after and specifies the URL of a previous snapshot of the target blob. The response will only contain pages that were changed between the target blob and its previous snapshot. */\n  prevSnapshotUrl?: string;\n}\n\n/** Contains response data for the getPageRangesDiff operation. */\nexport type PageBlobGetPageRangesDiffResponse =\n  PageBlobGetPageRangesDiffHeaders & PageList;\n\n/** Optional parameters. */\nexport interface PageBlobResizeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n}\n\n/** Contains response data for the resize operation. */\nexport type PageBlobResizeResponse = PageBlobResizeHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobUpdateSequenceNumberOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1. */\n  blobSequenceNumber?: number;\n}\n\n/** Contains response data for the updateSequenceNumber operation. */\nexport type PageBlobUpdateSequenceNumberResponse =\n  PageBlobUpdateSequenceNumberHeaders;\n\n/** Optional parameters. */\nexport interface PageBlobCopyIncrementalOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the copyIncremental operation. */\nexport type PageBlobCopyIncrementalResponse = PageBlobCopyIncrementalHeaders;\n\n/** Optional parameters. */\nexport interface AppendBlobCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n}\n\n/** Contains response data for the create operation. */\nexport type AppendBlobCreateResponse = AppendBlobCreateHeaders;\n\n/** Optional parameters. */\nexport interface AppendBlobAppendBlockOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the appendBlock operation. */\nexport type AppendBlobAppendBlockResponse = AppendBlobAppendBlockHeaders;\n\n/** Optional parameters. */\nexport interface AppendBlobAppendBlockFromUrlOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** Parameter group */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the md5 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentMD5?: Uint8Array;\n  /** Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. */\n  copySourceAuthorization?: string;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the crc64 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentCrc64?: Uint8Array;\n  /** Bytes of source data in the specified range. */\n  sourceRange?: string;\n}\n\n/** Contains response data for the appendBlockFromUrl operation. */\nexport type AppendBlobAppendBlockFromUrlResponse =\n  AppendBlobAppendBlockFromUrlHeaders;\n\n/** Optional parameters. */\nexport interface AppendBlobSealOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the seal operation. */\nexport type AppendBlobSealResponse = AppendBlobSealHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobUploadOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the upload operation. */\nexport type BlockBlobUploadResponse = BlockBlobUploadHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobPutBlobFromUrlOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specify the md5 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentMD5?: Uint8Array;\n  /** Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. */\n  copySourceAuthorization?: string;\n  /** Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by x-ms-tags. */\n  copySourceTags?: BlobCopySourceTags;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Optional, default is true.  Indicates if properties from the source blob should be copied. */\n  copySourceBlobProperties?: boolean;\n}\n\n/** Contains response data for the putBlobFromUrl operation. */\nexport type BlockBlobPutBlobFromUrlResponse = BlockBlobPutBlobFromUrlHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobStageBlockOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the stageBlock operation. */\nexport type BlockBlobStageBlockResponse = BlockBlobStageBlockHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobStageBlockFromURLOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Specify the md5 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentMD5?: Uint8Array;\n  /** Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. */\n  copySourceAuthorization?: string;\n  /** Specify the crc64 calculated for the range of bytes that must be read from the copy source. */\n  sourceContentCrc64?: Uint8Array;\n  /** Bytes of source data in the specified range. */\n  sourceRange?: string;\n}\n\n/** Contains response data for the stageBlockFromURL operation. */\nexport type BlockBlobStageBlockFromURLResponse =\n  BlockBlobStageBlockFromURLHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobCommitBlockListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** Parameter group */\n  cpkInfo?: CpkInfo;\n  /** Parameter group */\n  blobHttpHeaders?: BlobHttpHeaders;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information. */\n  metadata?: { [propertyName: string]: string };\n  /** Specifies the date time when the blobs immutability policy is set to expire. */\n  immutabilityPolicyExpiry?: Date;\n  /** Specifies the immutability policy mode to set on the blob. */\n  immutabilityPolicyMode?: BlobImmutabilityPolicyMode;\n  /** Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services. */\n  encryptionScope?: string;\n  /** Optional. Indicates the tier to be set on the blob. */\n  tier?: AccessTier;\n  /** Optional.  Used to set blob tags in various blob operations. */\n  blobTagsString?: string;\n  /** Specified if a legal hold should be set on the blob. */\n  legalHold?: boolean;\n  /** Specify the transactional md5 for the body, to be validated by the service. */\n  transactionalContentMD5?: Uint8Array;\n  /** Specify the transactional crc64 for the body, to be validated by the service. */\n  transactionalContentCrc64?: Uint8Array;\n}\n\n/** Contains response data for the commitBlockList operation. */\nexport type BlockBlobCommitBlockListResponse = BlockBlobCommitBlockListHeaders;\n\n/** Optional parameters. */\nexport interface BlockBlobGetBlockListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /** Parameter group */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /** The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a> */\n  timeoutInSeconds?: number;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled. */\n  requestId?: string;\n  /** The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a> */\n  snapshot?: string;\n}\n\n/** Contains response data for the getBlockList operation. */\nexport type BlockBlobGetBlockListResponse = BlockBlobGetBlockListHeaders &\n  BlockList;\n\n/** Optional parameters. */\nexport interface StorageClientOptionalParams\n  extends coreHttpCompat.ExtendedServiceClientOptions {\n  /** Specifies the version of the operation to use for this request. */\n  version?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const BlobServiceProperties: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      blobAnalyticsLogging: {\n        serializedName: \"Logging\",\n        xmlName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\",\n        },\n      },\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\",\n            },\n          },\n        },\n      },\n      defaultServiceVersion: {\n        serializedName: \"DefaultServiceVersion\",\n        xmlName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteRetentionPolicy: {\n        serializedName: \"DeleteRetentionPolicy\",\n        xmlName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n      staticWebsite: {\n        serializedName: \"StaticWebsite\",\n        xmlName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\",\n        },\n      },\n    },\n  },\n};\n\nexport const Logging: coreClient.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteProperty: {\n        serializedName: \"Delete\",\n        required: true,\n        xmlName: \"Delete\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      read: {\n        serializedName: \"Read\",\n        required: true,\n        xmlName: \"Read\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      write: {\n        serializedName: \"Write\",\n        required: true,\n        xmlName: \"Write\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const RetentionPolicy: coreClient.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      days: {\n        constraints: {\n          InclusiveMinimum: 1,\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Metrics: coreClient.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const CorsRule: coreClient.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const StaticWebsite: coreClient.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      indexDocument: {\n        serializedName: \"IndexDocument\",\n        xmlName: \"IndexDocument\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorDocument404Path: {\n        serializedName: \"ErrorDocument404Path\",\n        xmlName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\",\n        },\n      },\n      defaultIndexDocumentPath: {\n        serializedName: \"DefaultIndexDocumentPath\",\n        xmlName: \"DefaultIndexDocumentPath\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StorageError: coreClient.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authenticationErrorDetail: {\n        serializedName: \"AuthenticationErrorDetail\",\n        xmlName: \"AuthenticationErrorDetail\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobServiceStatistics: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceStatistics\",\n  xmlName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceStatistics\",\n    modelProperties: {\n      geoReplication: {\n        serializedName: \"GeoReplication\",\n        xmlName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\",\n        },\n      },\n    },\n  },\n};\n\nexport const GeoReplication: coreClient.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        required: true,\n        xmlName: \"Status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"live\", \"bootstrap\", \"unavailable\"],\n        },\n      },\n      lastSyncOn: {\n        serializedName: \"LastSyncTime\",\n        required: true,\n        xmlName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListContainersSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListContainersSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      containerItems: {\n        serializedName: \"ContainerItems\",\n        required: true,\n        xmlName: \"Containers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Container\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerItem: coreClient.CompositeMapper = {\n  serializedName: \"ContainerItem\",\n  xmlName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerProperties: coreClient.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      publicAccess: {\n        serializedName: \"PublicAccess\",\n        xmlName: \"PublicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"HasImmutabilityPolicy\",\n        xmlName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"HasLegalHold\",\n        xmlName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"DefaultEncryptionScope\",\n        xmlName: \"DefaultEncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      preventEncryptionScopeOverride: {\n        serializedName: \"DenyEncryptionScopeOverride\",\n        xmlName: \"DenyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"ImmutableStorageWithVersioningEnabled\",\n        xmlName: \"ImmutableStorageWithVersioningEnabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyInfo: coreClient.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        required: true,\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const UserDelegationKey: coreClient.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedObjectId: {\n        serializedName: \"SignedOid\",\n        required: true,\n        xmlName: \"SignedOid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedTenantId: {\n        serializedName: \"SignedTid\",\n        required: true,\n        xmlName: \"SignedTid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedStartsOn: {\n        serializedName: \"SignedStart\",\n        required: true,\n        xmlName: \"SignedStart\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedExpiresOn: {\n        serializedName: \"SignedExpiry\",\n        required: true,\n        xmlName: \"SignedExpiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedService: {\n        serializedName: \"SignedService\",\n        required: true,\n        xmlName: \"SignedService\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedVersion: {\n        serializedName: \"SignedVersion\",\n        required: true,\n        xmlName: \"SignedVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobSegment: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobSegment\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobSegment\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      where: {\n        serializedName: \"Where\",\n        required: true,\n        xmlName: \"Where\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobs: {\n        serializedName: \"Blobs\",\n        required: true,\n        xmlName: \"Blobs\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FilterBlobItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobItem: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobItem\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"Tags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTags: coreClient.CompositeMapper = {\n  serializedName: \"BlobTags\",\n  xmlName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTags\",\n    modelProperties: {\n      blobTagSet: {\n        serializedName: \"BlobTagSet\",\n        required: true,\n        xmlName: \"TagSet\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Tag\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobTag\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTag: coreClient.CompositeMapper = {\n  serializedName: \"BlobTag\",\n  xmlName: \"Tag\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTag\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        required: true,\n        xmlName: \"Key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedIdentifier: coreClient.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  xmlName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const AccessPolicy: coreClient.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsFlatSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobFlatListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobFlatListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobItemInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobItemInternal\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        required: true,\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        required: true,\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"VersionId\",\n        xmlName: \"VersionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"IsCurrentVersion\",\n        xmlName: \"IsCurrentVersion\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobPropertiesInternal\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobTags: {\n        serializedName: \"BlobTags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n      objectReplicationMetadata: {\n        serializedName: \"ObjectReplicationMetadata\",\n        xmlName: \"OrMetadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      hasVersionsOnly: {\n        serializedName: \"HasVersionsOnly\",\n        xmlName: \"HasVersionsOnly\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobName: coreClient.CompositeMapper = {\n  serializedName: \"BlobName\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobName\",\n    modelProperties: {\n      encoded: {\n        serializedName: \"Encoded\",\n        xmlName: \"Encoded\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      content: {\n        serializedName: \"content\",\n        xmlName: \"content\",\n        xmlIsMsText: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPropertiesInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobPropertiesInternal\",\n  xmlName: \"Properties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPropertiesInternal\",\n    modelProperties: {\n      createdOn: {\n        serializedName: \"Creation-Time\",\n        xmlName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLength: {\n        serializedName: \"Content-Length\",\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"Content-Type\",\n        xmlName: \"Content-Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"Content-Encoding\",\n        xmlName: \"Content-Encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"Content-Language\",\n        xmlName: \"Content-Language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"Content-MD5\",\n        xmlName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"Content-Disposition\",\n        xmlName: \"Content-Disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"Cache-Control\",\n        xmlName: \"Cache-Control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"BlobType\",\n        xmlName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      copyId: {\n        serializedName: \"CopyId\",\n        xmlName: \"CopyId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"CopyStatus\",\n        xmlName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      copySource: {\n        serializedName: \"CopySource\",\n        xmlName: \"CopySource\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"CopyProgress\",\n        xmlName: \"CopyProgress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"CopyCompletionTime\",\n        xmlName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"CopyStatusDescription\",\n        xmlName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverEncrypted: {\n        serializedName: \"ServerEncrypted\",\n        xmlName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      incrementalCopy: {\n        serializedName: \"IncrementalCopy\",\n        xmlName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"DestinationSnapshot\",\n        xmlName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"P4\",\n            \"P6\",\n            \"P10\",\n            \"P15\",\n            \"P20\",\n            \"P30\",\n            \"P40\",\n            \"P50\",\n            \"P60\",\n            \"P70\",\n            \"P80\",\n            \"Hot\",\n            \"Cool\",\n            \"Archive\",\n            \"Cold\",\n          ],\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"AccessTierInferred\",\n        xmlName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"ArchiveStatus\",\n        xmlName: \"ArchiveStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"rehydrate-pending-to-hot\",\n            \"rehydrate-pending-to-cool\",\n            \"rehydrate-pending-to-cold\",\n          ],\n        },\n      },\n      customerProvidedKeySha256: {\n        serializedName: \"CustomerProvidedKeySha256\",\n        xmlName: \"CustomerProvidedKeySha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"EncryptionScope\",\n        xmlName: \"EncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      tagCount: {\n        serializedName: \"TagCount\",\n        xmlName: \"TagCount\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry-Time\",\n        xmlName: \"Expiry-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"Sealed\",\n        xmlName: \"Sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"RehydratePriority\",\n        xmlName: \"RehydratePriority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessedOn: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"ImmutabilityPolicyUntilDate\",\n        xmlName: \"ImmutabilityPolicyUntilDate\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"ImmutabilityPolicyMode\",\n        xmlName: \"ImmutabilityPolicyMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"LegalHold\",\n        xmlName: \"LegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      delimiter: {\n        serializedName: \"Delimiter\",\n        xmlName: \"Delimiter\",\n        type: {\n          name: \"String\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobHierarchyListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobHierarchyListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        serializedName: \"BlobPrefixes\",\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\",\n            },\n          },\n        },\n      },\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPrefix: coreClient.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockLookupList: coreClient.CompositeMapper = {\n  serializedName: \"BlockLookupList\",\n  xmlName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        serializedName: \"Committed\",\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      uncommitted: {\n        serializedName: \"Uncommitted\",\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      latest: {\n        serializedName: \"Latest\",\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlockList: coreClient.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        serializedName: \"CommittedBlocks\",\n        xmlName: \"CommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n      uncommittedBlocks: {\n        serializedName: \"UncommittedBlocks\",\n        xmlName: \"UncommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Block: coreClient.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      size: {\n        serializedName: \"Size\",\n        required: true,\n        xmlName: \"Size\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageList: coreClient.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        serializedName: \"PageRange\",\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\",\n            },\n          },\n        },\n      },\n      clearRange: {\n        serializedName: \"ClearRange\",\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageRange: coreClient.CompositeMapper = {\n  serializedName: \"PageRange\",\n  xmlName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ClearRange: coreClient.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryRequest: coreClient.CompositeMapper = {\n  serializedName: \"QueryRequest\",\n  xmlName: \"QueryRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryRequest\",\n    modelProperties: {\n      queryType: {\n        serializedName: \"QueryType\",\n        required: true,\n        xmlName: \"QueryType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expression: {\n        serializedName: \"Expression\",\n        required: true,\n        xmlName: \"Expression\",\n        type: {\n          name: \"String\",\n        },\n      },\n      inputSerialization: {\n        serializedName: \"InputSerialization\",\n        xmlName: \"InputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n      outputSerialization: {\n        serializedName: \"OutputSerialization\",\n        xmlName: \"OutputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n    },\n  },\n};\n\nexport const QuerySerialization: coreClient.CompositeMapper = {\n  serializedName: \"QuerySerialization\",\n  type: {\n    name: \"Composite\",\n    className: \"QuerySerialization\",\n    modelProperties: {\n      format: {\n        serializedName: \"Format\",\n        xmlName: \"Format\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFormat\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryFormat: coreClient.CompositeMapper = {\n  serializedName: \"QueryFormat\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryFormat\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delimited\", \"json\", \"arrow\", \"parquet\"],\n        },\n      },\n      delimitedTextConfiguration: {\n        serializedName: \"DelimitedTextConfiguration\",\n        xmlName: \"DelimitedTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"DelimitedTextConfiguration\",\n        },\n      },\n      jsonTextConfiguration: {\n        serializedName: \"JsonTextConfiguration\",\n        xmlName: \"JsonTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonTextConfiguration\",\n        },\n      },\n      arrowConfiguration: {\n        serializedName: \"ArrowConfiguration\",\n        xmlName: \"ArrowConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"ArrowConfiguration\",\n        },\n      },\n      parquetTextConfiguration: {\n        serializedName: \"ParquetTextConfiguration\",\n        xmlName: \"ParquetTextConfiguration\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DelimitedTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"DelimitedTextConfiguration\",\n  xmlName: \"DelimitedTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"DelimitedTextConfiguration\",\n    modelProperties: {\n      columnSeparator: {\n        serializedName: \"ColumnSeparator\",\n        xmlName: \"ColumnSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fieldQuote: {\n        serializedName: \"FieldQuote\",\n        xmlName: \"FieldQuote\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      escapeChar: {\n        serializedName: \"EscapeChar\",\n        xmlName: \"EscapeChar\",\n        type: {\n          name: \"String\",\n        },\n      },\n      headersPresent: {\n        serializedName: \"HeadersPresent\",\n        xmlName: \"HasHeaders\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const JsonTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"JsonTextConfiguration\",\n  xmlName: \"JsonTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"JsonTextConfiguration\",\n    modelProperties: {\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"ArrowConfiguration\",\n  xmlName: \"ArrowConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowConfiguration\",\n    modelProperties: {\n      schema: {\n        serializedName: \"Schema\",\n        required: true,\n        xmlName: \"Schema\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Field\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArrowField\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowField: coreClient.CompositeMapper = {\n  serializedName: \"ArrowField\",\n  xmlName: \"Field\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowField\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      precision: {\n        serializedName: \"Precision\",\n        xmlName: \"Precision\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      scale: {\n        serializedName: \"Scale\",\n        xmlName: \"Scale\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_setPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceSetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetStatisticsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetStatisticsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getStatisticsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetStatisticsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceListContainersSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_listContainersSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceListContainersSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_listContainersSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceListContainersSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetUserDelegationKeyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getUserDelegationKeyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetUserDelegationKeyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getUserDelegationKeyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetUserDelegationKeyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSubmitBatchExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        xmlName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        xmlName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        xmlName: \"x-ms-default-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        xmlName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        xmlName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setMetadataExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetMetadataExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerSetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRestoreHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRestoreExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_submitBatchExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSubmitBatchExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerFilterBlobsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_filterBlobsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerFilterBlobsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerAcquireLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_acquireLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerAcquireLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerReleaseLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_releaseLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerReleaseLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_changeLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerChangeLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobFlatSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_listBlobFlatSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerListBlobFlatSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobFlatSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobFlatSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentHeaders\",\n      modelProperties: {\n        contentType: {\n          serializedName: \"content-type\",\n          xmlName: \"content-type\",\n          type: {\n            name: \"String\",\n          },\n        },\n        clientRequestId: {\n          serializedName: \"x-ms-client-request-id\",\n          xmlName: \"x-ms-client-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        requestId: {\n          serializedName: \"x-ms-request-id\",\n          xmlName: \"x-ms-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"x-ms-version\",\n          xmlName: \"x-ms-version\",\n          type: {\n            name: \"String\",\n          },\n        },\n        date: {\n          serializedName: \"date\",\n          xmlName: \"date\",\n          type: {\n            name: \"DateTimeRfc1123\",\n          },\n        },\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDownloadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDownloadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        xmlName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        xmlName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        xmlName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        xmlName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"x-ms-expiry-time\",\n        xmlName: \"x-ms-expiry-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"x-ms-rehydrate-priority\",\n        xmlName: \"x-ms-rehydrate-priority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiry: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_setImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobSetImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDeleteImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_deleteImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobDeleteImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetLegalHoldHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetLegalHoldExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_startCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_startCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobStartCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        defaultValue: \"success\",\n        isConstant: true,\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCopyFromURLExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_abortCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_abortCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobAbortCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetTierHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTierExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_uploadPagesFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUploadPagesFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesDiffHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesDiffHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesDiffExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesDiffExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesDiffExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobResizeHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobResizeExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_updateSequenceNumberHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_updateSequenceNumberExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUpdateSequenceNumberExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobCopyIncrementalHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_copyIncrementalHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCopyIncrementalExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_copyIncrementalExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobCopyIncrementalExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobAppendBlockFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobSealHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobSealExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_putBlobFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobPutBlobFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_putBlobFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobPutBlobFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobStageBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_stageBlockFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobStageBlockFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobCommitBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_commitBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobCommitBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_commitBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobCommitBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobGetBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_getBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobGetBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_getBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobGetBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  KeyInfo as KeyInfoMapper,\n  QueryRequest as QueryRequestMapper,\n  BlobTags as BlobTagsMapper,\n  BlockLookupList as BlockLookupListMapper,\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobServiceProperties: OperationParameter = {\n  parameterPath: \"blobServiceProperties\",\n  mapper: BlobServicePropertiesMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2024-08-04\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxPageSize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListContainersIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"metadata\", \"deleted\", \"system\"],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const keyInfo: OperationParameter = {\n  parameterPath: \"keyInfo\",\n  mapper: KeyInfoMapper,\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"userdelegationkey\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"account\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"batch\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const multipartContentType: OperationParameter = {\n  parameterPath: \"multipartContentType\",\n  mapper: {\n    serializedName: \"Content-Type\",\n    required: true,\n    xmlName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blobs\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const where: OperationQueryParameter = {\n  parameterPath: [\"options\", \"where\"],\n  mapper: {\n    serializedName: \"where\",\n    xmlName: \"where\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"container\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    headerCollectionPrefix: \"x-ms-meta-\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } },\n    },\n  },\n};\n\nexport const access: OperationParameter = {\n  parameterPath: [\"options\", \"access\"],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    xmlName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"container\", \"blob\"],\n    },\n  },\n};\n\nexport const defaultEncryptionScope: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"defaultEncryptionScope\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-default-encryption-scope\",\n    xmlName: \"x-ms-default-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const preventEncryptionScopeOverride: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"preventEncryptionScopeOverride\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-deny-encryption-scope-override\",\n    xmlName: \"x-ms-deny-encryption-scope-override\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifModifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifModifiedSince\"],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    xmlName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const ifUnmodifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifUnmodifiedSince\"],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    xmlName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const containerAcl: OperationParameter = {\n  parameterPath: [\"options\", \"containerAcl\"],\n  mapper: {\n    serializedName: \"containerAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\",\n        },\n      },\n    },\n  },\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-name\",\n    xmlName: \"x-ms-deleted-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-version\",\n    xmlName: \"x-ms-deleted-container-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rename\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContainerName: OperationParameter = {\n  parameterPath: \"sourceContainerName\",\n  mapper: {\n    serializedName: \"x-ms-source-container-name\",\n    required: true,\n    xmlName: \"x-ms-source-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"sourceLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    xmlName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const proposedLeaseId1: OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    required: true,\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListBlobsIncludeItem\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\",\n            \"versions\",\n            \"tags\",\n            \"immutabilitypolicy\",\n            \"legalhold\",\n            \"deletedwithversions\",\n          ],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const delimiter: OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    serializedName: \"delimiter\",\n    required: true,\n    xmlName: \"delimiter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const snapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"snapshot\"],\n  mapper: {\n    serializedName: \"snapshot\",\n    xmlName: \"snapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const versionId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"versionId\"],\n  mapper: {\n    serializedName: \"versionid\",\n    xmlName: \"versionid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const rangeGetContentCRC64: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentCRC64\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-crc64\",\n    xmlName: \"x-ms-range-get-content-crc64\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionKey: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKey\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key\",\n    xmlName: \"x-ms-encryption-key\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionKeySha256: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKeySha256\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key-sha256\",\n    xmlName: \"x-ms-encryption-key-sha256\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionAlgorithm: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionAlgorithm\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-algorithm\",\n    xmlName: \"x-ms-encryption-algorithm\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    xmlName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    xmlName: \"If-None-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifTags: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifTags\"],\n  mapper: {\n    serializedName: \"x-ms-if-tags\",\n    xmlName: \"x-ms-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"only\"],\n    },\n  },\n};\n\nexport const blobDeleteType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blobDeleteType\"],\n  mapper: {\n    serializedName: \"deletetype\",\n    xmlName: \"deletetype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"expiry\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiryOptions: OperationParameter = {\n  parameterPath: \"expiryOptions\",\n  mapper: {\n    serializedName: \"x-ms-expiry-option\",\n    required: true,\n    xmlName: \"x-ms-expiry-option\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiresOn: OperationParameter = {\n  parameterPath: [\"options\", \"expiresOn\"],\n  mapper: {\n    serializedName: \"x-ms-expiry-time\",\n    xmlName: \"x-ms-expiry-time\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    xmlName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentType: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentType\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    xmlName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    xmlName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    xmlName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    xmlName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    xmlName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"immutabilityPolicies\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const immutabilityPolicyExpiry: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyExpiry\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-until-date\",\n    xmlName: \"x-ms-immutability-policy-until-date\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const immutabilityPolicyMode: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyMode\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-mode\",\n    xmlName: \"x-ms-immutability-policy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n    },\n  },\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"legalhold\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    required: true,\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: [\"options\", \"encryptionScope\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-scope\",\n    xmlName: \"x-ms-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp14: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier: OperationParameter = {\n  parameterPath: [\"options\", \"tier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const rehydratePriority: OperationParameter = {\n  parameterPath: [\"options\", \"rehydratePriority\"],\n  mapper: {\n    serializedName: \"x-ms-rehydrate-priority\",\n    xmlName: \"x-ms-rehydrate-priority\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"High\", \"Standard\"],\n    },\n  },\n};\n\nexport const sourceIfModifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    xmlName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfUnmodifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    xmlName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfMatch: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfMatch\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    xmlName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfNoneMatch: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    xmlName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfTags: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfTags\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-tags\",\n    xmlName: \"x-ms-source-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobTagsString: OperationParameter = {\n  parameterPath: [\"options\", \"blobTagsString\"],\n  mapper: {\n    serializedName: \"x-ms-tags\",\n    xmlName: \"x-ms-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sealBlob: OperationParameter = {\n  parameterPath: [\"options\", \"sealBlob\"],\n  mapper: {\n    serializedName: \"x-ms-seal-blob\",\n    xmlName: \"x-ms-seal-blob\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const legalHold1: OperationParameter = {\n  parameterPath: [\"options\", \"legalHold\"],\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const xMsRequiresSync: OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    defaultValue: \"true\",\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    xmlName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceTags: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceTags\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-tag-option\",\n    xmlName: \"x-ms-copy-source-tag-option\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"REPLACE\", \"COPY\"],\n    },\n  },\n};\n\nexport const comp15: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp16: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tier\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier1: OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    required: true,\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const queryRequest: OperationParameter = {\n  parameterPath: [\"options\", \"queryRequest\"],\n  mapper: QueryRequestMapper,\n};\n\nexport const comp17: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"query\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp18: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tags\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tags: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: BlobTagsMapper,\n};\n\nexport const transactionalContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const transactionalContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-content-crc64\",\n    xmlName: \"x-ms-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobType: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"PageBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLength: OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    serializedName: \"x-ms-blob-content-length\",\n    required: true,\n    xmlName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const blobSequenceNumber: OperationParameter = {\n  parameterPath: [\"options\", \"blobSequenceNumber\"],\n  mapper: {\n    defaultValue: 0,\n    serializedName: \"x-ms-blob-sequence-number\",\n    xmlName: \"x-ms-blob-sequence-number\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp19: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"page\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const pageWrite: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThanOrEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    xmlName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThan: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    xmlName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    xmlName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const pageWrite1: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"clear\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceUrl: OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    required: true,\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp20: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"pagelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevsnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsnapshot\"],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    xmlName: \"prevsnapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevSnapshotUrl: OperationParameter = {\n  parameterPath: [\"options\", \"prevSnapshotUrl\"],\n  mapper: {\n    serializedName: \"x-ms-previous-snapshot-url\",\n    xmlName: \"x-ms-previous-snapshot-url\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sequenceNumberAction: OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    serializedName: \"x-ms-sequence-number-action\",\n    required: true,\n    xmlName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"update\", \"increment\"],\n    },\n  },\n};\n\nexport const comp21: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"incrementalcopy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType1: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"AppendBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp22: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"appendblock\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxSize: OperationParameter = {\n  parameterPath: [\"options\", \"appendPositionAccessConditions\", \"maxSize\"],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    xmlName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const appendPosition: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    xmlName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const sourceRange1: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp23: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"seal\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType2: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"BlockBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceBlobProperties: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceBlobProperties\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-blob-properties\",\n    xmlName: \"x-ms-copy-source-blob-properties\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const comp24: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"block\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blockId: OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    serializedName: \"blockid\",\n    required: true,\n    xmlName: \"blockid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blocks: OperationParameter = {\n  parameterPath: \"blocks\",\n  mapper: BlockLookupListMapper,\n};\n\nexport const comp25: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blocklist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const listType: OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    defaultValue: \"committed\",\n    serializedName: \"blocklisttype\",\n    required: true,\n    xmlName: \"blocklisttype\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"committed\", \"uncommitted\", \"all\"],\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Service } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceGetStatisticsOptionalParams,\n  ServiceGetStatisticsResponse,\n  ServiceListContainersSegmentOptionalParams,\n  ServiceListContainersSegmentResponse,\n  KeyInfo,\n  ServiceGetUserDelegationKeyOptionalParams,\n  ServiceGetUserDelegationKeyResponse,\n  ServiceGetAccountInfoOptionalParams,\n  ServiceGetAccountInfoResponse,\n  ServiceSubmitBatchOptionalParams,\n  ServiceSubmitBatchResponse,\n  ServiceFilterBlobsOptionalParams,\n  ServiceFilterBlobsResponse,\n} from \"../models\";\n\n/** Class containing Service operations. */\nexport class ServiceImpl implements Service {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param blobServiceProperties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    blobServiceProperties: BlobServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams,\n  ): Promise<ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { blobServiceProperties, options },\n      setPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams,\n  ): Promise<ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the storage\n   * account.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ServiceGetStatisticsOptionalParams,\n  ): Promise<ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getStatisticsOperationSpec,\n    );\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified account\n   * @param options The options parameters.\n   */\n  listContainersSegment(\n    options?: ServiceListContainersSegmentOptionalParams,\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listContainersSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo Key information\n   * @param options The options parameters.\n   */\n  getUserDelegationKey(\n    keyInfo: KeyInfo,\n    options?: ServiceGetUserDelegationKeyOptionalParams,\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return this.client.sendOperationRequest(\n      { keyInfo, options },\n      getUserDelegationKeyOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ServiceGetAccountInfoOptionalParams,\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ServiceSubmitBatchOptionalParams,\n  ): Promise<ServiceSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a\n   * given search expression.  Filter blobs searches across all containers within a storage account but\n   * can be scoped within the expression to a single container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ServiceFilterBlobsOptionalParams,\n  ): Promise<ServiceFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blobServiceProperties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getStatisticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceStatistics,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetStatisticsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listContainersSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListContainersSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.include,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getUserDelegationKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.keyInfo,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp3,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ServiceSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp4],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ServiceFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Container } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  ContainerCreateOptionalParams,\n  ContainerCreateResponse,\n  ContainerGetPropertiesOptionalParams,\n  ContainerGetPropertiesResponse,\n  ContainerDeleteOptionalParams,\n  ContainerDeleteResponse,\n  ContainerSetMetadataOptionalParams,\n  ContainerSetMetadataResponse,\n  ContainerGetAccessPolicyOptionalParams,\n  ContainerGetAccessPolicyResponse,\n  ContainerSetAccessPolicyOptionalParams,\n  ContainerSetAccessPolicyResponse,\n  ContainerRestoreOptionalParams,\n  ContainerRestoreResponse,\n  ContainerRenameOptionalParams,\n  ContainerRenameResponse,\n  ContainerSubmitBatchOptionalParams,\n  ContainerSubmitBatchResponse,\n  ContainerFilterBlobsOptionalParams,\n  ContainerFilterBlobsResponse,\n  ContainerAcquireLeaseOptionalParams,\n  ContainerAcquireLeaseResponse,\n  ContainerReleaseLeaseOptionalParams,\n  ContainerReleaseLeaseResponse,\n  ContainerRenewLeaseOptionalParams,\n  ContainerRenewLeaseResponse,\n  ContainerBreakLeaseOptionalParams,\n  ContainerBreakLeaseResponse,\n  ContainerChangeLeaseOptionalParams,\n  ContainerChangeLeaseResponse,\n  ContainerListBlobFlatSegmentOptionalParams,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobHierarchySegmentOptionalParams,\n  ContainerListBlobHierarchySegmentResponse,\n  ContainerGetAccountInfoOptionalParams,\n  ContainerGetAccountInfoResponse,\n} from \"../models\";\n\n/** Class containing Container operations. */\nexport class ContainerImpl implements Container {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Container class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param options The options parameters.\n   */\n  create(\n    options?: ContainerCreateOptionalParams,\n  ): Promise<ContainerCreateResponse> {\n    return this.client.sendOperationRequest({ options }, createOperationSpec);\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ContainerGetPropertiesOptionalParams,\n  ): Promise<ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained within\n   * it are later deleted during garbage collection\n   * @param options The options parameters.\n   */\n  delete(\n    options?: ContainerDeleteOptionalParams,\n  ): Promise<ContainerDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ContainerSetMetadataOptionalParams,\n  ): Promise<ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container data\n   * may be accessed publicly.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ContainerGetAccessPolicyOptionalParams,\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ContainerSetAccessPolicyOptionalParams,\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * Restores a previously-deleted container.\n   * @param options The options parameters.\n   */\n  restore(\n    options?: ContainerRestoreOptionalParams,\n  ): Promise<ContainerRestoreResponse> {\n    return this.client.sendOperationRequest({ options }, restoreOperationSpec);\n  }\n\n  /**\n   * Renames an existing container.\n   * @param sourceContainerName Required.  Specifies the name of the container to rename.\n   * @param options The options parameters.\n   */\n  rename(\n    sourceContainerName: string,\n    options?: ContainerRenameOptionalParams,\n  ): Promise<ContainerRenameResponse> {\n    return this.client.sendOperationRequest(\n      { sourceContainerName, options },\n      renameOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ContainerSubmitBatchOptionalParams,\n  ): Promise<ContainerSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in a container whose tags match a given\n   * search expression.  Filter blobs searches within the given container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ContainerFilterBlobsOptionalParams,\n  ): Promise<ContainerFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ContainerAcquireLeaseOptionalParams,\n  ): Promise<ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ContainerReleaseLeaseOptionalParams,\n  ): Promise<ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ContainerRenewLeaseOptionalParams,\n  ): Promise<ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ContainerBreakLeaseOptionalParams,\n  ): Promise<ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: ContainerChangeLeaseOptionalParams,\n  ): Promise<ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param options The options parameters.\n   */\n  listBlobFlatSegment(\n    options?: ContainerListBlobFlatSegmentOptionalParams,\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBlobFlatSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   *                  element in the response body that acts as a placeholder for all blobs whose names begin with the\n   *                  same substring up to the appearance of the delimiter character. The delimiter may be a single\n   *                  character or a string.\n   * @param options The options parameters.\n   */\n  listBlobHierarchySegment(\n    delimiter: string,\n    options?: ContainerListBlobHierarchySegmentOptionalParams,\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      { delimiter, options },\n      listBlobHierarchySegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ContainerGetAccountInfoOptionalParams,\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.defaultEncryptionScope,\n    Parameters.preventEncryptionScopeOverride,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" },\n          },\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\",\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccessPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetAccessPolicyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.containerAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.access,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst restoreOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerRestoreHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRestoreExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp8,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.deletedContainerName,\n    Parameters.deletedContainerVersion,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenameHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenameExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp9,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.sourceContainerName,\n    Parameters.sourceLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ContainerSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ContainerFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobFlatSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobHierarchySegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n    Parameters.delimiter,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Blob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobDownloadOptionalParams,\n  BlobDownloadResponse,\n  BlobGetPropertiesOptionalParams,\n  BlobGetPropertiesResponse,\n  BlobDeleteOptionalParams,\n  BlobDeleteResponse,\n  BlobUndeleteOptionalParams,\n  BlobUndeleteResponse,\n  BlobExpiryOptions,\n  BlobSetExpiryOptionalParams,\n  BlobSetExpiryResponse,\n  BlobSetHttpHeadersOptionalParams,\n  BlobSetHttpHeadersResponse,\n  BlobSetImmutabilityPolicyOptionalParams,\n  BlobSetImmutabilityPolicyResponse,\n  BlobDeleteImmutabilityPolicyOptionalParams,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetLegalHoldOptionalParams,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataOptionalParams,\n  BlobSetMetadataResponse,\n  BlobAcquireLeaseOptionalParams,\n  BlobAcquireLeaseResponse,\n  BlobReleaseLeaseOptionalParams,\n  BlobReleaseLeaseResponse,\n  BlobRenewLeaseOptionalParams,\n  BlobRenewLeaseResponse,\n  BlobChangeLeaseOptionalParams,\n  BlobChangeLeaseResponse,\n  BlobBreakLeaseOptionalParams,\n  BlobBreakLeaseResponse,\n  BlobCreateSnapshotOptionalParams,\n  BlobCreateSnapshotResponse,\n  BlobStartCopyFromURLOptionalParams,\n  BlobStartCopyFromURLResponse,\n  BlobCopyFromURLOptionalParams,\n  BlobCopyFromURLResponse,\n  BlobAbortCopyFromURLOptionalParams,\n  BlobAbortCopyFromURLResponse,\n  AccessTier,\n  BlobSetTierOptionalParams,\n  BlobSetTierResponse,\n  BlobGetAccountInfoOptionalParams,\n  BlobGetAccountInfoResponse,\n  BlobQueryOptionalParams,\n  BlobQueryResponse,\n  BlobGetTagsOptionalParams,\n  BlobGetTagsResponse,\n  BlobSetTagsOptionalParams,\n  BlobSetTagsResponse,\n} from \"../models\";\n\n/** Class containing Blob operations. */\nexport class BlobImpl implements Blob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Blob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param options The options parameters.\n   */\n  download(\n    options?: BlobDownloadOptionalParams,\n  ): Promise<BlobDownloadResponse> {\n    return this.client.sendOperationRequest({ options }, downloadOperationSpec);\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system\n   * properties for the blob. It does not return the content of the blob.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: BlobGetPropertiesOptionalParams,\n  ): Promise<BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days specified\n   * by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is\n   * permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the\n   * \"include=deleted\" query parameter to discover which blobs and snapshots have been soft deleted. You\n   * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a\n   * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404\n   * (ResourceNotFound).\n   * @param options The options parameters.\n   */\n  delete(options?: BlobDeleteOptionalParams): Promise<BlobDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param options The options parameters.\n   */\n  undelete(\n    options?: BlobUndeleteOptionalParams,\n  ): Promise<BlobUndeleteResponse> {\n    return this.client.sendOperationRequest({ options }, undeleteOperationSpec);\n  }\n\n  /**\n   * Sets the time a blob will expire and be deleted.\n   * @param expiryOptions Required. Indicates mode of the expiry time\n   * @param options The options parameters.\n   */\n  setExpiry(\n    expiryOptions: BlobExpiryOptions,\n    options?: BlobSetExpiryOptionalParams,\n  ): Promise<BlobSetExpiryResponse> {\n    return this.client.sendOperationRequest(\n      { expiryOptions, options },\n      setExpiryOperationSpec,\n    );\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    options?: BlobSetHttpHeadersOptionalParams,\n  ): Promise<BlobSetHttpHeadersResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setHttpHeadersOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Immutability Policy operation sets the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  setImmutabilityPolicy(\n    options?: BlobSetImmutabilityPolicyOptionalParams,\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Delete Immutability Policy operation deletes the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  deleteImmutabilityPolicy(\n    options?: BlobDeleteImmutabilityPolicyOptionalParams,\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      deleteImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Legal Hold operation sets a legal hold on the blob.\n   * @param legalHold Specified if a legal hold should be set on the blob.\n   * @param options The options parameters.\n   */\n  setLegalHold(\n    legalHold: boolean,\n    options?: BlobSetLegalHoldOptionalParams,\n  ): Promise<BlobSetLegalHoldResponse> {\n    return this.client.sendOperationRequest(\n      { legalHold, options },\n      setLegalHoldOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: BlobSetMetadataOptionalParams,\n  ): Promise<BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: BlobAcquireLeaseOptionalParams,\n  ): Promise<BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: BlobReleaseLeaseOptionalParams,\n  ): Promise<BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: BlobRenewLeaseOptionalParams,\n  ): Promise<BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: BlobChangeLeaseOptionalParams,\n  ): Promise<BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: BlobBreakLeaseOptionalParams,\n  ): Promise<BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: BlobCreateSnapshotOptionalParams,\n  ): Promise<BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      createSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptionalParams,\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      startCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return\n   * a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyFromURL(\n    copySource: string,\n    options?: BlobCopyFromURLOptionalParams,\n  ): Promise<BlobCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination\n   * blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopyFromURL(\n    copyId: string,\n    options?: BlobAbortCopyFromURLOptionalParams,\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copyId, options },\n      abortCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant storage only). A\n   * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block\n   * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's\n   * ETag.\n   * @param tier Indicates the tier to be set on the blob.\n   * @param options The options parameters.\n   */\n  setTier(\n    tier: AccessTier,\n    options?: BlobSetTierOptionalParams,\n  ): Promise<BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      { tier, options },\n      setTierOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: BlobGetAccountInfoOptionalParams,\n  ): Promise<BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Query operation enables users to select/project on blob data by providing simple query\n   * expressions.\n   * @param options The options parameters.\n   */\n  query(options?: BlobQueryOptionalParams): Promise<BlobQueryResponse> {\n    return this.client.sendOperationRequest({ options }, queryOperationSpec);\n  }\n\n  /**\n   * The Get Tags operation enables users to get the tags associated with a blob.\n   * @param options The options parameters.\n   */\n  getTags(options?: BlobGetTagsOptionalParams): Promise<BlobGetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, getTagsOperationSpec);\n  }\n\n  /**\n   * The Set Tags operation enables users to set tags on a blob.\n   * @param options The options parameters.\n   */\n  setTags(options?: BlobSetTagsOptionalParams): Promise<BlobSetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, setTagsOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst downloadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDownloadExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.rangeGetContentMD5,\n    Parameters.rangeGetContentCRC64,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.blobDeleteType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.deleteSnapshots,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst undeleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobUndeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp8],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setExpiryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetExpiryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetExpiryExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.expiryOptions,\n    Parameters.expiresOn,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setHttpHeadersOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHttpHeadersHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetHttpHeadersExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifUnmodifiedSince,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setLegalHoldOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetLegalHoldHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetLegalHoldExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp13],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.legalHold,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp6],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst createSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCreateSnapshotExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp14],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst startCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobStartCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.tier,\n    Parameters.rehydratePriority,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sealBlob,\n    Parameters.legalHold1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst abortCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAbortCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15,\n    Parameters.copyId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTierOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTierExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp16,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.rehydratePriority,\n    Parameters.tier1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst queryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobQueryExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.queryRequest,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp17,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobTags,\n      headersMapper: Mappers.BlobGetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetTagsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobSetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTagsExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.tags,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PageBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  PageBlobCreateOptionalParams,\n  PageBlobCreateResponse,\n  PageBlobUploadPagesOptionalParams,\n  PageBlobUploadPagesResponse,\n  PageBlobClearPagesOptionalParams,\n  PageBlobClearPagesResponse,\n  PageBlobUploadPagesFromURLOptionalParams,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobGetPageRangesOptionalParams,\n  PageBlobGetPageRangesResponse,\n  PageBlobGetPageRangesDiffOptionalParams,\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobResizeOptionalParams,\n  PageBlobResizeResponse,\n  SequenceNumberActionType,\n  PageBlobUpdateSequenceNumberOptionalParams,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobCopyIncrementalOptionalParams,\n  PageBlobCopyIncrementalResponse,\n} from \"../models\";\n\n/** Class containing PageBlob operations. */\nexport class PageBlobImpl implements PageBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class PageBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    blobContentLength: number,\n    options?: PageBlobCreateOptionalParams,\n  ): Promise<PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, blobContentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  uploadPages(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: PageBlobUploadPagesOptionalParams,\n  ): Promise<PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  clearPages(\n    contentLength: number,\n    options?: PageBlobClearPagesOptionalParams,\n  ): Promise<PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      clearPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a\n   * URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   *                    match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be 512\n   *              aligned and range-end is required.\n   * @param options The options parameters.\n   */\n  uploadPagesFromURL(\n    sourceUrl: string,\n    sourceRange: string,\n    contentLength: number,\n    range: string,\n    options?: PageBlobUploadPagesFromURLOptionalParams,\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, sourceRange, contentLength, range, options },\n      uploadPagesFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a\n   * page blob\n   * @param options The options parameters.\n   */\n  getPageRanges(\n    options?: PageBlobGetPageRangesOptionalParams,\n  ): Promise<PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were\n   * changed between target blob and previous snapshot.\n   * @param options The options parameters.\n   */\n  getPageRangesDiff(\n    options?: PageBlobGetPageRangesDiffOptionalParams,\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesDiffOperationSpec,\n    );\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  resize(\n    blobContentLength: number,\n    options?: PageBlobResizeOptionalParams,\n  ): Promise<PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      { blobContentLength, options },\n      resizeOperationSpec,\n    );\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.\n   *                             This property applies to page blobs only. This property indicates how the service should modify the\n   *                             blob's sequence number\n   * @param options The options parameters.\n   */\n  updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    options?: PageBlobUpdateSequenceNumberOptionalParams,\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      { sequenceNumberAction, options },\n      updateSequenceNumberOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.\n   * The snapshot is copied such that only the differential changes between the previously copied\n   * snapshot are transferred to the destination. The copied snapshots are complete copies of the\n   * original snapshot and can be read or copied from as usual. This API is supported since REST version\n   * 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyIncremental(\n    copySource: string,\n    options?: PageBlobCopyIncrementalOptionalParams,\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyIncrementalOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst clearPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.pageWrite1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.sourceUrl,\n    Parameters.sourceRange,\n    Parameters.sourceContentCrc64,\n    Parameters.range1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesDiffOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n    Parameters.prevsnapshot,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.prevSnapshotUrl,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst resizeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst updateSequenceNumberOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobSequenceNumber,\n    Parameters.sequenceNumberAction,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyIncrementalOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp21],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.copySource,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AppendBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  AppendBlobCreateOptionalParams,\n  AppendBlobCreateResponse,\n  AppendBlobAppendBlockOptionalParams,\n  AppendBlobAppendBlockResponse,\n  AppendBlobAppendBlockFromUrlOptionalParams,\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobSealOptionalParams,\n  AppendBlobSealResponse,\n} from \"../models\";\n\n/** Class containing AppendBlob operations. */\nexport class AppendBlobImpl implements AppendBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class AppendBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    options?: AppendBlobCreateOptionalParams,\n  ): Promise<AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob. The\n   * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  appendBlock(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: AppendBlobAppendBlockOptionalParams,\n  ): Promise<AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      appendBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob where\n   * the contents are read from a source url. The Append Block operation is permitted only if the blob\n   * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version\n   * 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  appendBlockFromUrl(\n    sourceUrl: string,\n    contentLength: number,\n    options?: AppendBlobAppendBlockFromUrlOptionalParams,\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, contentLength, options },\n      appendBlockFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version\n   * 2019-12-12 version or later.\n   * @param options The options parameters.\n   */\n  seal(\n    options?: AppendBlobSealOptionalParams,\n  ): Promise<AppendBlobSealResponse> {\n    return this.client.sendOperationRequest({ options }, sealOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst appendBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst appendBlockFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.transactionalContentMD5,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst sealOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppendBlobSealHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobSealExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp23],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BlockBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlockBlobUploadOptionalParams,\n  BlockBlobUploadResponse,\n  BlockBlobPutBlobFromUrlOptionalParams,\n  BlockBlobPutBlobFromUrlResponse,\n  BlockBlobStageBlockOptionalParams,\n  BlockBlobStageBlockResponse,\n  BlockBlobStageBlockFromURLOptionalParams,\n  BlockBlobStageBlockFromURLResponse,\n  BlockLookupList,\n  BlockBlobCommitBlockListOptionalParams,\n  BlockBlobCommitBlockListResponse,\n  BlockListType,\n  BlockBlobGetBlockListOptionalParams,\n  BlockBlobGetBlockListResponse,\n} from \"../models\";\n\n/** Class containing BlockBlob operations. */\nexport class BlockBlobImpl implements BlockBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class BlockBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing\n   * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put\n   * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a\n   * partial update of the content of a block blob, use the Put Block List operation.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  upload(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobUploadOptionalParams,\n  ): Promise<BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadOperationSpec,\n    );\n  }\n\n  /**\n   * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read\n   * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are\n   * not supported with Put Blob from URL; the content of an existing blob is overwritten with the\n   * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,\n   * use the Put Block from URL API in conjunction with Put Block List.\n   * @param contentLength The length of the request.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  putBlobFromUrl(\n    contentLength: number,\n    copySource: string,\n    options?: BlockBlobPutBlobFromUrlOptionalParams,\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, copySource, options },\n      putBlobFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  stageBlock(\n    blockId: string,\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobStageBlockOptionalParams,\n  ): Promise<BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, body, options },\n      stageBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the contents\n   * are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The options parameters.\n   */\n  stageBlockFromURL(\n    blockId: string,\n    contentLength: number,\n    sourceUrl: string,\n    options?: BlockBlobStageBlockFromURLOptionalParams,\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, sourceUrl, options },\n      stageBlockFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the\n   * blob. In order to be written as part of a blob, a block must have been successfully written to the\n   * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading\n   * only those blocks that have changed, then committing the new and existing blocks together. You can\n   * do this by specifying whether to commit a block from the committed block list or from the\n   * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list\n   * it may belong to.\n   * @param blocks Blob Blocks.\n   * @param options The options parameters.\n   */\n  commitBlockList(\n    blocks: BlockLookupList,\n    options?: BlockBlobCommitBlockListOptionalParams,\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { blocks, options },\n      commitBlockListOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block\n   * blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted\n   *                 blocks, or both lists together.\n   * @param options The options parameters.\n   */\n  getBlockList(\n    listType: BlockListType,\n    options?: BlockBlobGetBlockListOptionalParams,\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { listType, options },\n      getBlockListOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst uploadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobUploadExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.blobType2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst putBlobFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n    Parameters.transactionalContentMD5,\n    Parameters.blobType2,\n    Parameters.copySourceBlobProperties,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst stageBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst stageBlockFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst commitBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobCommitBlockListExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blocks,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp25],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobGetBlockListExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp25,\n    Parameters.listType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport * from \"./service\";\nexport * from \"./container\";\nexport * from \"./blob\";\nexport * from \"./pageBlob\";\nexport * from \"./appendBlob\";\nexport * from \"./blockBlob\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  ServiceImpl,\n  ContainerImpl,\n  BlobImpl,\n  PageBlobImpl,\n  AppendBlobImpl,\n  BlockBlobImpl,\n} from \"./operations\";\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob,\n} from \"./operationsInterfaces\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends coreHttpCompat.ExtendedServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StorageClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-azure-storage-blob/12.24.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{url}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2024-08-04\";\n    this.service = new ServiceImpl(this);\n    this.container = new ContainerImpl(this);\n    this.blob = new BlobImpl(this);\n    this.pageBlob = new PageBlobImpl(this);\n    this.appendBlob = new AppendBlobImpl(this);\n    this.blockBlob = new BlockBlobImpl(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport * from \"./service\";\nexport * from \"./container\";\nexport * from \"./blob\";\nexport * from \"./pageBlob\";\nexport * from \"./appendBlob\";\nexport * from \"./blockBlob\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport * from \"./models\";\nexport { StorageClient } from \"./storageClient\";\nexport * from \"./operationsInterfaces\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationArguments, OperationSpec } from \"@azure/core-client\";\nimport { StorageClient } from \"./generated/src\";\n\n/**\n * @internal\n */\nexport class StorageContextClient extends StorageClient {\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const operationSpecToSend = { ...operationSpec };\n\n    if (\n      operationSpecToSend.path === \"/{containerName}\" ||\n      operationSpecToSend.path === \"/{containerName}/{blob}\"\n    ) {\n      operationSpecToSend.path = \"\";\n    }\n    return super.sendOperationRequest(operationArguments, operationSpecToSend);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageClient as StorageClientContext } from \"./generated/src/\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport { getCoreClientOptions, getCredentialFromPipeline, PipelineLike } from \"./Pipeline\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: PipelineLike;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url - url to resource\n   * @param pipeline - request policy pipeline.\n   */\n  protected constructor(url: string, pipeline: PipelineLike) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageContextClient(this.url, getCoreClientOptions(pipeline));\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = getCredentialFromPipeline(pipeline);\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"./constants\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  packageName: \"@azure/storage-blob\",\n  packageVersion: SDK_VERSION,\n  namespace: \"Microsoft.Storage\",\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        case \"x\":\n          blobSASPermissions.deleteVersion = true;\n          break;\n        case \"t\":\n          blobSASPermissions.tag = true;\n          break;\n        case \"m\":\n          blobSASPermissions.move = true;\n          break;\n        case \"e\":\n          blobSASPermissions.execute = true;\n          break;\n        case \"i\":\n          blobSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          blobSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: BlobSASPermissionsLike): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n    if (permissionLike.read) {\n      blobSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      blobSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      blobSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      blobSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      blobSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      blobSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      blobSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      blobSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      blobSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      blobSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      blobSASPermissions.permanentDelete = true;\n    }\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Blob SAS permission.\n * Used in {@link BlobSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface BlobSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        case \"t\":\n          containerSASPermissions.tag = true;\n          break;\n        case \"x\":\n          containerSASPermissions.deleteVersion = true;\n          break;\n        case \"m\":\n          containerSASPermissions.move = true;\n          break;\n        case \"e\":\n          containerSASPermissions.execute = true;\n          break;\n        case \"i\":\n          containerSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          containerSASPermissions.permanentDelete = true;\n          break;\n        case \"f\":\n          containerSASPermissions.filterByTags = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: ContainerSASPermissionsLike): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n    if (permissionLike.read) {\n      containerSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      containerSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      containerSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      containerSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      containerSASPermissions.delete = true;\n    }\n    if (permissionLike.list) {\n      containerSASPermissions.list = true;\n    }\n    if (permissionLike.deleteVersion) {\n      containerSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      containerSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      containerSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      containerSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      containerSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      containerSASPermissions.permanentDelete = true;\n    }\n    if (permissionLike.filterByTags) {\n      containerSASPermissions.filterByTags = true;\n    }\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  public filterByTags: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    if (this.filterByTags) {\n      permissions.push(\"f\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Container SAS permission.\n * Used in {@link ContainerSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface ContainerSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specifies List access granted.\n   */\n  list?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  filterByTags?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport class UserDelegationKeyCredential {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange -\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined,\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined,\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined,\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined,\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined,\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"../credentials/UserDelegationKeyCredential\";\nimport { ipRangeToString, SasIPRange } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: BlobSASPermissions | ContainerSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime or versionId is provided.\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. VersionId of the blob version the SAS user may access. Only supported from API version 2019-10-10.\n   */\n  versionId?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, specifies the Authorized AAD Object ID in GUID format. The AAD Object ID of a user\n   * authorized by the owner of the user delegation key to perform the action granted by the SAS. The Azure Storage service will\n   * ensure that the owner of the user delegation key has the required permissions before granting access but no additional permission\n   * check for the user specified in this value will be performed. This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, this is a GUID value that will be logged in the storage diagnostic logs and can be used to\n   * correlate SAS generation with storage resource access. This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n *\n * Example usage:\n *\n * ```js\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using an identifier:\n *\n * ```js\n * // Generate service level SAS for a container with identifier\n * // startsOn & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerClient.setAccessPolicy(undefined, [\n *   {\n *     accessPolicy: {\n *       expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Date type\n *       permissions: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       startsOn: new Date() // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using a blob name:\n *\n * ```js\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * Example usage:\n *\n * ```js\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await blobServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Optional. Date type\n *     expiresOn, // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must greater than or equal to 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKey - Return value of `blobServiceClient.getUserDelegationKey()`\n * @param accountName -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string,\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string,\n): SASQueryParameters {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey,\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2020-12-06 adds support for encryptionscope in SAS.\n  if (version >= \"2020-12-06\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20201206(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20201206(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!,\n      );\n    }\n  }\n\n  // Version 2019-12-12 adds support for the blob tags permission.\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.\n      if (version >= \"2020-02-10\") {\n        return generateBlobSASQueryParametersUDK20200210(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      } else {\n        return generateBlobSASQueryParametersUDK20181109(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      }\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\",\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    undefined,\n    undefined,\n    undefined,\n    blobSASSignatureValues.encryptionScope,\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey,\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20200210(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    blobSASSignatureValues.correlationId,\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.encryptionScope,\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n\nfunction SASSignatureValuesSanityCheckAndAutofill(\n  blobSASSignatureValues: BlobSASSignatureValues,\n): BlobSASSignatureValues {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  if (blobSASSignatureValues.snapshotTime && version < \"2018-11-09\") {\n    throw RangeError(\"'version' must be >= '2018-11-09' when providing 'snapshotTime'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when providing 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.versionId && version < \"2019-10-10\") {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'versionId'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {\n    throw RangeError(\"Must provide 'blobName' when providing 'versionId'.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'x' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'y' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when providing 't' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)\n  ) {\n    throw RangeError(\"'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.\");\n  }\n\n  if (\n    version < \"2021-04-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions as ContainerSASPermissions).filterByTags\n  ) {\n    throw RangeError(\"'version' must be >= '2021-04-10' when providing the 'f' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)\n  ) {\n    throw RangeError(\n      \"'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.\",\n    );\n  }\n\n  if (blobSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  blobSASSignatureValues.version = version;\n  return blobSASSignatureValues;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport { ContainerBreakLeaseOptionalParams } from \"./generatedModels\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { Blob as StorageBlob, Container } from \"./generated/src/operationsInterfaces\";\nimport { ModifiedAccessConditions } from \"./models\";\nimport { CommonOptions } from \"./StorageClient\";\nimport { ETagNone } from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { BlobClient } from \"./Clients\";\nimport { ContainerClient } from \"./ContainerClient\";\nimport { assertResponse, WithResponse } from \"./utils/utils.common\";\nimport {\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerReleaseLeaseHeaders,\n} from \"./generated/src\";\n\n/**\n * The details for a specific lease.\n */\nexport interface Lease {\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * Error code if any associated with the response that returned\n   * the Lease information.\n   */\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that create, modify, or delete a lease.\n *\n * See {@link BlobLeaseClient}.\n */\nexport type LeaseOperationResponse = WithResponse<Lease, Lease>;\n\n/**\n * Configures lease operations.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n */\nexport class BlobLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | StorageBlob;\n  private _isContainer: boolean;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of BlobLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = (client as any).storageClientContext;\n    this._url = client.url;\n\n    if ((client as BlobClient).name === undefined) {\n      this._isContainer = true;\n      this._containerOrBlobOperation = clientContext.container;\n    } else {\n      this._isContainer = false;\n      this._containerOrBlobOperation = clientContext.blob;\n    }\n\n    if (!leaseId) {\n      leaseId = randomUUID();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param duration - Must be between 15 to 60 seconds, or infinite (-1)\n   * @param options - option to configure lease management operations.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-acquireLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerAcquireLeaseHeaders, ContainerAcquireLeaseHeaders>(\n          await this._containerOrBlobOperation.acquireLease({\n            abortSignal: options.abortSignal,\n            duration,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            proposedLeaseId: this._leaseId,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - option to configure lease management operations.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-changeLease\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<Lease, Lease>(\n          await this._containerOrBlobOperation.changeLease(this._leaseId, proposedLeaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        this._leaseId = proposedLeaseId;\n        return response;\n      },\n    );\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - option to configure lease management operations.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-releaseLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerReleaseLeaseHeaders, ContainerReleaseLeaseHeaders>(\n          await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - Optional option to configure lease management operations.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\"BlobLeaseClient-renewLease\", options, async (updatedOptions) => {\n      return this._containerOrBlobOperation.renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param breakPeriod - Break period\n   * @param options - Optional options to configure lease management operations.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\"BlobLeaseClient-breakLease\", options, async (updatedOptions) => {\n      const operationOptions: ContainerBreakLeaseOptionalParams = {\n        abortSignal: options.abortSignal,\n        breakPeriod,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      };\n      return assertResponse<ContainerBreakLeaseHeaders, ContainerBreakLeaseHeaders>(\n        await this._containerOrBlobOperation.breakLease(operationOptions),\n      );\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// This file is used as a shim of \"BlobDownloadResponse\" for some browser bundlers\n// when trying to bundle \"BlobDownloadResponse\"\n// \"BlobDownloadResponse\" class is only available in Node.js runtime\nexport const BlobDownloadResponse = 1;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BlobDownloadResponseModel,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  BlobQueryResponseModel,\n  BlobQueryHeaders,\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport { BlobQuickQueryStreamOptions } from \"./utils/BlobQuickQueryStream\";\nimport { ResponseWithHeaders } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN BROWSER RUNTIME.\n *\n * BlobQueryResponse implements BlobDownloadResponseModel interface, and in browser runtime it will\n * parse avor data returned by blob query.\n */\nexport class BlobQueryResponse implements BlobDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return undefined;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    throw Error(`Quick query in browser is not supported yet.`);\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): ResponseWithHeaders<BlobQueryHeaders>[\"_response\"] {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobQueryResponseModel;\n\n  /**\n   * Creates an instance of BlobQueryResponse.\n   *\n   * @param originalResponse -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobQueryResponseModel,\n    _options: BlobQuickQueryStreamOptions = {},\n  ) {\n    this.originalResponse = originalResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress, PollOperationState } from \"@azure/core-lro\";\nimport { BlobImmutabilityPolicyMode } from \"./generatedModels\";\nimport {\n  LeaseAccessConditions,\n  SequenceNumberAccessConditions,\n  AppendPositionAccessConditions,\n  AccessTier,\n  CpkInfo,\n  BlobDownloadResponseModel,\n} from \"./generatedModels\";\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n\n/**\n * Blob tags.\n */\nexport type Tags = Record<string, string>;\n\n/**\n * A map of name-value pairs to associate with the resource.\n */\nexport interface Metadata {\n  /**\n   * A name-value pair.\n   */\n  [propertyName: string]: string;\n}\n\n/**\n * standard HTTP conditional headers and tags condition.\n */\nexport interface ModifiedAccessConditions\n  extends MatchConditions,\n    ModificationConditions,\n    TagConditions {}\n\n/**\n * standard HTTP conditional headers, tags condition and lease condition\n */\nexport interface BlobRequestConditions extends ModifiedAccessConditions, LeaseAccessConditions {}\n\n/**\n * Conditions to add to the creation of this page blob.\n */\nexport interface PageBlobRequestConditions\n  extends BlobRequestConditions,\n    SequenceNumberAccessConditions {}\n\n/**\n * Conditions to add to the creation of this append blob.\n */\nexport interface AppendBlobRequestConditions\n  extends BlobRequestConditions,\n    AppendPositionAccessConditions {}\n\n/**\n * Specifies HTTP options for conditional requests based on modification time.\n */\nexport interface ModificationConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on ETag matching.\n */\nexport interface MatchConditions {\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on blob tags.\n */\nexport interface TagConditions {\n  /**\n   * Optional SQL statement to apply to the tags of the blob.\n   */\n  tagConditions?: string;\n}\n\n/**\n * Conditions to meet for the container.\n */\nexport interface ContainerRequestConditions extends LeaseAccessConditions, ModificationConditions {}\n\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport enum BlockBlobTier {\n  /**\n   * Optimized for storing data that is accessed frequently.\n   */\n  Hot = \"Hot\",\n  /**\n   * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n   */\n  Cool = \"Cool\",\n  /**\n   * Optimized for storing data that is rarely accessed.\n   */\n  Cold = \"Cold\",\n  /**\n   * Optimized for storing data that is rarely accessed and stored for at least 180 days\n   * with flexible latency requirements (on the order of hours).\n   */\n  Archive = \"Archive\",\n}\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport enum PremiumPageBlobTier {\n  /**\n   * P4 Tier.\n   */\n  P4 = \"P4\",\n  /**\n   * P6 Tier.\n   */\n  P6 = \"P6\",\n  /**\n   * P10 Tier.\n   */\n  P10 = \"P10\",\n  /**\n   * P15 Tier.\n   */\n  P15 = \"P15\",\n  /**\n   * P20 Tier.\n   */\n  P20 = \"P20\",\n  /**\n   * P30 Tier.\n   */\n  P30 = \"P30\",\n  /**\n   * P40 Tier.\n   */\n  P40 = \"P40\",\n  /**\n   * P50 Tier.\n   */\n  P50 = \"P50\",\n  /**\n   * P60 Tier.\n   */\n  P60 = \"P60\",\n  /**\n   * P70 Tier.\n   */\n  P70 = \"P70\",\n  /**\n   * P80 Tier.\n   */\n  P80 = \"P80\",\n}\n\nexport function toAccessTier(\n  tier: BlockBlobTier | PremiumPageBlobTier | string | undefined,\n): AccessTier | undefined {\n  if (tier === undefined) {\n    return undefined;\n  }\n\n  return tier as AccessTier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\n\nexport function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps: boolean): void {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n\n/**\n * Specifies the Replication Status of a blob. This is used when a storage account has\n * Object Replication Policy(s) applied. See {@link ObjectReplicationPolicy} and {@link ObjectReplicationRule}.\n */\nexport type ObjectReplicationStatus = \"complete\" | \"failed\";\n\n/**\n * Contains the Object Replication Rule ID and {@link ObjectReplicationStatus} of a blob.\n * There can be more than one {@link ObjectReplicationRule} under a {@link ObjectReplicationPolicy}.\n */\nexport interface ObjectReplicationRule {\n  /**\n   * The Object Replication Rule ID.\n   */\n  ruleId: string;\n\n  /**\n   * The Replication Status\n   */\n  replicationStatus: ObjectReplicationStatus;\n}\n\n/**\n * Contains Object Replication Policy ID and the respective list of {@link ObjectReplicationRule}.\n * This is used when retrieving the Object Replication Properties on the source blob. The policy id for the\n * destination blob is set in ObjectReplicationDestinationPolicyId of the respective method responses\n * (e.g. {@link BlobProperties.ObjectReplicationDestinationPolicyId}.\n */\nexport interface ObjectReplicationPolicy {\n  /**\n   * The Object Replication Policy ID.\n   */\n  policyId: string;\n\n  /**\n   * The Rule ID(s) and respective Replication Status(s) that are under the Policy ID.\n   */\n  rules: ObjectReplicationRule[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadResponseParsed extends BlobDownloadResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * The type of a {@link BlobQueryArrowField}.\n */\nexport type BlobQueryArrowFieldType =\n  | \"int64\"\n  | \"bool\"\n  | \"timestamp[ms]\"\n  | \"string\"\n  | \"double\"\n  | \"decimal\";\n\n/**\n * Describe a field in {@link BlobQueryArrowConfiguration}.\n */\nexport interface BlobQueryArrowField {\n  /**\n   * The type of the field.\n   */\n  type: BlobQueryArrowFieldType;\n\n  /**\n   * The name of the field.\n   */\n  name?: string;\n\n  /**\n   * The precision of the field. Required if type is \"decimal\".\n   */\n  precision?: number;\n\n  /**\n   * The scale of the field.  Required if type is is \"decimal\".\n   */\n  scale?: number;\n}\n\n/**\n * Describe immutable policy for blob.\n */\nexport interface BlobImmutabilityPolicy {\n  /**\n   * Specifies the date time when the blobs immutability policy is set to expire.\n   */\n  expiriesOn?: Date;\n  /**\n   * Specifies the immutability policy mode to set on the blob.\n   */\n  policyMode?: BlobImmutabilityPolicyMode;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n\n/**\n * Defines the known cloud audiences for Storage.\n */\nexport enum StorageBlobAudience {\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Storage.\n   */\n  StorageOAuthScopes = \"https://storage.azure.com/.default\",\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Disk.\n   */\n  DiskComputeOAuthScopes = \"https://disk.compute.azure.com/.default\",\n}\n\n/**\n *\n * To get OAuth audience for a storage account for blob service.\n */\nexport function getBlobServiceAccountAudience(storageAccountName: string): string {\n  return `https://${storageAccountName}.blob.core.windows.net/.default`;\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\nexport interface PollerLikeWithCancellation<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponseModel,\n} from \"./generatedModels\";\nimport { Range } from \"./Range\";\nimport { ResponseWithBody } from \"./utils/utils.common\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse\n  extends PageList,\n    PageBlobGetPageRangesHeaders,\n    ResponseWithBody<PageBlobGetPageRangesHeaders, PageList> {}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders,\n    ResponseWithBody<PageBlobGetPageRangesDiffHeaders, PageList> {}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel,\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange,\n      },\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"core-lro\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The default time interval to wait before sending the next polling request.\n */\nexport const POLL_INTERVAL_IN_MS = 2000;\n/**\n * The closed set of terminal states.\n */\nexport const terminalStates = [\"succeeded\", \"canceled\", \"failed\"];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  LroError,\n  InnerError,\n  Operation,\n  OperationStatus,\n  RestorableOperationState,\n  StateProxy,\n} from \"./models.js\";\nimport { logger } from \"../logger.js\";\nimport { terminalStates } from \"./constants.js\";\n\n/**\n * Deserializes the state\n */\nexport function deserializeState<TState>(\n  serializedState: string,\n): RestorableOperationState<TState> {\n  try {\n    return JSON.parse(serializedState).state;\n  } catch (e) {\n    throw new Error(`Unable to deserialize input state: ${serializedState}`);\n  }\n}\n\nfunction setStateError<TState, TResult>(inputs: {\n  state: TState;\n  stateProxy: StateProxy<TState, TResult>;\n  isOperationError: (error: Error) => boolean;\n}): (error: Error) => never {\n  const { state, stateProxy, isOperationError } = inputs;\n  return (error: Error) => {\n    if (isOperationError(error)) {\n      stateProxy.setError(state, error);\n      stateProxy.setFailed(state);\n    }\n    throw error;\n  };\n}\n\nfunction appendReadableErrorMessage(currentMessage: string, innerMessage: string): string {\n  let message = currentMessage;\n  if (message.slice(-1) !== \".\") {\n    message = message + \".\";\n  }\n  return message + \" \" + innerMessage;\n}\n\nfunction simplifyError(err: LroError): {\n  code: string;\n  message: string;\n} {\n  let message = err.message;\n  let code = err.code;\n  let curErr = err as InnerError;\n  while (curErr.innererror) {\n    curErr = curErr.innererror;\n    code = curErr.code;\n    message = appendReadableErrorMessage(message, curErr.message);\n  }\n  return {\n    code,\n    message,\n  };\n}\n\nfunction processOperationStatus<TState, TResult, TResponse>(result: {\n  status: OperationStatus;\n  response: TResponse;\n  state: RestorableOperationState<TState>;\n  stateProxy: StateProxy<TState, TResult>;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  getError?: (response: TResponse) => LroError | undefined;\n  isDone?: (lastResponse: TResponse, state: TState) => boolean;\n  setErrorAsResult: boolean;\n}): void {\n  const { state, stateProxy, status, isDone, processResult, getError, response, setErrorAsResult } =\n    result;\n  switch (status) {\n    case \"succeeded\": {\n      stateProxy.setSucceeded(state);\n      break;\n    }\n    case \"failed\": {\n      const err = getError?.(response);\n      let postfix = \"\";\n      if (err) {\n        const { code, message } = simplifyError(err);\n        postfix = `. ${code}. ${message}`;\n      }\n      const errStr = `The long-running operation has failed${postfix}`;\n      stateProxy.setError(state, new Error(errStr));\n      stateProxy.setFailed(state);\n      logger.warning(errStr);\n      break;\n    }\n    case \"canceled\": {\n      stateProxy.setCanceled(state);\n      break;\n    }\n  }\n  if (\n    isDone?.(response, state) ||\n    (isDone === undefined &&\n      [\"succeeded\", \"canceled\"].concat(setErrorAsResult ? [] : [\"failed\"]).includes(status))\n  ) {\n    stateProxy.setResult(\n      state,\n      buildResult({\n        response,\n        state,\n        processResult,\n      }),\n    );\n  }\n}\n\nfunction buildResult<TResponse, TResult, TState>(inputs: {\n  response: TResponse;\n  state: TState;\n  processResult?: (result: TResponse, state: TState) => TResult;\n}): TResult {\n  const { processResult, response, state } = inputs;\n  return processResult ? processResult(response, state) : (response as unknown as TResult);\n}\n\n/**\n * Initiates the long-running operation.\n */\nexport async function initOperation<TResponse, TResult, TState>(inputs: {\n  init: Operation<TResponse, unknown>[\"init\"];\n  stateProxy: StateProxy<TState, TResult>;\n  getOperationStatus: (inputs: {\n    response: TResponse;\n    state: RestorableOperationState<TState>;\n    operationLocation?: string;\n  }) => OperationStatus;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  withOperationLocation?: (operationLocation: string, isUpdated: boolean) => void;\n  setErrorAsResult: boolean;\n}): Promise<RestorableOperationState<TState>> {\n  const {\n    init,\n    stateProxy,\n    processResult,\n    getOperationStatus,\n    withOperationLocation,\n    setErrorAsResult,\n  } = inputs;\n  const { operationLocation, resourceLocation, metadata, response } = await init();\n  if (operationLocation) withOperationLocation?.(operationLocation, false);\n  const config = {\n    metadata,\n    operationLocation,\n    resourceLocation,\n  };\n  logger.verbose(`LRO: Operation description:`, config);\n  const state = stateProxy.initState(config);\n  const status = getOperationStatus({ response, state, operationLocation });\n  processOperationStatus({ state, status, stateProxy, response, setErrorAsResult, processResult });\n  return state;\n}\n\nasync function pollOperationHelper<TResponse, TState, TResult, TOptions>(inputs: {\n  poll: Operation<TResponse, TOptions>[\"poll\"];\n  stateProxy: StateProxy<TState, TResult>;\n  state: RestorableOperationState<TState>;\n  operationLocation: string;\n  getOperationStatus: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => OperationStatus;\n  getResourceLocation: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  isOperationError: (error: Error) => boolean;\n  options?: TOptions;\n}): Promise<{\n  status: OperationStatus;\n  response: TResponse;\n}> {\n  const {\n    poll,\n    state,\n    stateProxy,\n    operationLocation,\n    getOperationStatus,\n    getResourceLocation,\n    isOperationError,\n    options,\n  } = inputs;\n  const response = await poll(operationLocation, options).catch(\n    setStateError({\n      state,\n      stateProxy,\n      isOperationError,\n    }),\n  );\n  const status = getOperationStatus(response, state);\n  logger.verbose(\n    `LRO: Status:\\n\\tPolling from: ${\n      state.config.operationLocation\n    }\\n\\tOperation status: ${status}\\n\\tPolling status: ${\n      terminalStates.includes(status) ? \"Stopped\" : \"Running\"\n    }`,\n  );\n  if (status === \"succeeded\") {\n    const resourceLocation = getResourceLocation(response, state);\n    if (resourceLocation !== undefined) {\n      return {\n        response: await poll(resourceLocation).catch(\n          setStateError({ state, stateProxy, isOperationError }),\n        ),\n        status,\n      };\n    }\n  }\n  return { response, status };\n}\n\n/** Polls the long-running operation. */\nexport async function pollOperation<TResponse, TState, TResult, TOptions>(inputs: {\n  poll: Operation<TResponse, TOptions>[\"poll\"];\n  stateProxy: StateProxy<TState, TResult>;\n  state: RestorableOperationState<TState>;\n  getOperationStatus: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => OperationStatus;\n  getResourceLocation: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  isOperationError: (error: Error) => boolean;\n  getPollingInterval?: (response: TResponse) => number | undefined;\n  setDelay: (intervalInMs: number) => void;\n  getOperationLocation?: (\n    response: TResponse,\n    state: RestorableOperationState<TState>,\n  ) => string | undefined;\n  withOperationLocation?: (operationLocation: string, isUpdated: boolean) => void;\n  processResult?: (result: TResponse, state: TState) => TResult;\n  getError?: (response: TResponse) => LroError | undefined;\n  updateState?: (state: TState, lastResponse: TResponse) => void;\n  isDone?: (lastResponse: TResponse, state: TState) => boolean;\n  setErrorAsResult: boolean;\n  options?: TOptions;\n}): Promise<void> {\n  const {\n    poll,\n    state,\n    stateProxy,\n    options,\n    getOperationStatus,\n    getResourceLocation,\n    getOperationLocation,\n    isOperationError,\n    withOperationLocation,\n    getPollingInterval,\n    processResult,\n    getError,\n    updateState,\n    setDelay,\n    isDone,\n    setErrorAsResult,\n  } = inputs;\n  const { operationLocation } = state.config;\n  if (operationLocation !== undefined) {\n    const { response, status } = await pollOperationHelper({\n      poll,\n      getOperationStatus,\n      state,\n      stateProxy,\n      operationLocation,\n      getResourceLocation,\n      isOperationError,\n      options,\n    });\n    processOperationStatus({\n      status,\n      response,\n      state,\n      stateProxy,\n      isDone,\n      processResult,\n      getError,\n      setErrorAsResult,\n    });\n\n    if (!terminalStates.includes(status)) {\n      const intervalInMs = getPollingInterval?.(response);\n      if (intervalInMs) setDelay(intervalInMs);\n      const location = getOperationLocation?.(response, state);\n      if (location !== undefined) {\n        const isUpdated = operationLocation !== location;\n        state.config.operationLocation = location;\n        withOperationLocation?.(location, isUpdated);\n      } else withOperationLocation?.(operationLocation, false);\n    }\n    updateState?.(state, response);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpOperationMode,\n  LongRunningOperation,\n  LroResourceLocationConfig,\n  LroResponse,\n  RawResponse,\n  ResponseBody,\n} from \"./models.js\";\nimport {\n  LroError,\n  OperationConfig,\n  OperationStatus,\n  RestorableOperationState,\n  StateProxy,\n} from \"../poller/models.js\";\nimport { initOperation, pollOperation } from \"../poller/operation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { logger } from \"../logger.js\";\n\nfunction getOperationLocationPollingUrl(inputs: {\n  operationLocation?: string;\n  azureAsyncOperation?: string;\n}): string | undefined {\n  const { azureAsyncOperation, operationLocation } = inputs;\n  return operationLocation ?? azureAsyncOperation;\n}\n\nfunction getLocationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"location\"];\n}\n\nfunction getOperationLocationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"operation-location\"];\n}\n\nfunction getAzureAsyncOperationHeader(rawResponse: RawResponse): string | undefined {\n  return rawResponse.headers[\"azure-asyncoperation\"];\n}\n\nfunction findResourceLocation(inputs: {\n  requestMethod?: string;\n  location?: string;\n  requestPath?: string;\n  resourceLocationConfig?: LroResourceLocationConfig;\n}): string | undefined {\n  const { location, requestMethod, requestPath, resourceLocationConfig } = inputs;\n  switch (requestMethod) {\n    case \"PUT\": {\n      return requestPath;\n    }\n    case \"DELETE\": {\n      return undefined;\n    }\n    case \"PATCH\": {\n      return getDefault() ?? requestPath;\n    }\n    default: {\n      return getDefault();\n    }\n  }\n\n  function getDefault() {\n    switch (resourceLocationConfig) {\n      case \"azure-async-operation\": {\n        return undefined;\n      }\n      case \"original-uri\": {\n        return requestPath;\n      }\n      case \"location\":\n      default: {\n        return location;\n      }\n    }\n  }\n}\n\nexport function inferLroMode(inputs: {\n  rawResponse: RawResponse;\n  requestPath?: string;\n  requestMethod?: string;\n  resourceLocationConfig?: LroResourceLocationConfig;\n}): (OperationConfig & { mode: HttpOperationMode }) | undefined {\n  const { rawResponse, requestMethod, requestPath, resourceLocationConfig } = inputs;\n  const operationLocation = getOperationLocationHeader(rawResponse);\n  const azureAsyncOperation = getAzureAsyncOperationHeader(rawResponse);\n  const pollingUrl = getOperationLocationPollingUrl({ operationLocation, azureAsyncOperation });\n  const location = getLocationHeader(rawResponse);\n  const normalizedRequestMethod = requestMethod?.toLocaleUpperCase();\n  if (pollingUrl !== undefined) {\n    return {\n      mode: \"OperationLocation\",\n      operationLocation: pollingUrl,\n      resourceLocation: findResourceLocation({\n        requestMethod: normalizedRequestMethod,\n        location,\n        requestPath,\n        resourceLocationConfig,\n      }),\n    };\n  } else if (location !== undefined) {\n    return {\n      mode: \"ResourceLocation\",\n      operationLocation: location,\n    };\n  } else if (normalizedRequestMethod === \"PUT\" && requestPath) {\n    return {\n      mode: \"Body\",\n      operationLocation: requestPath,\n    };\n  } else {\n    return undefined;\n  }\n}\n\nfunction transformStatus(inputs: { status: unknown; statusCode: number }): OperationStatus {\n  const { status, statusCode } = inputs;\n  if (typeof status !== \"string\" && status !== undefined) {\n    throw new Error(\n      `Polling was unsuccessful. Expected status to have a string value or no value but it has instead: ${status}. This doesn't necessarily indicate the operation has failed. Check your Azure subscription or resource status for more information.`,\n    );\n  }\n  switch (status?.toLocaleLowerCase()) {\n    case undefined:\n      return toOperationStatus(statusCode);\n    case \"succeeded\":\n      return \"succeeded\";\n    case \"failed\":\n      return \"failed\";\n    case \"running\":\n    case \"accepted\":\n    case \"started\":\n    case \"canceling\":\n    case \"cancelling\":\n      return \"running\";\n    case \"canceled\":\n    case \"cancelled\":\n      return \"canceled\";\n    default: {\n      logger.verbose(`LRO: unrecognized operation status: ${status}`);\n      return status as OperationStatus;\n    }\n  }\n}\n\nfunction getStatus(rawResponse: RawResponse): OperationStatus {\n  const { status } = (rawResponse.body as ResponseBody) ?? {};\n  return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\n\nfunction getProvisioningState(rawResponse: RawResponse): OperationStatus {\n  const { properties, provisioningState } = (rawResponse.body as ResponseBody) ?? {};\n  const status = properties?.provisioningState ?? provisioningState;\n  return transformStatus({ status, statusCode: rawResponse.statusCode });\n}\n\nfunction toOperationStatus(statusCode: number): OperationStatus {\n  if (statusCode === 202) {\n    return \"running\";\n  } else if (statusCode < 300) {\n    return \"succeeded\";\n  } else {\n    return \"failed\";\n  }\n}\n\nexport function parseRetryAfter<T>({ rawResponse }: LroResponse<T>): number | undefined {\n  const retryAfter: string | undefined = rawResponse.headers[\"retry-after\"];\n  if (retryAfter !== undefined) {\n    // Retry-After header value is either in HTTP date format, or in seconds\n    const retryAfterInSeconds = parseInt(retryAfter);\n    return isNaN(retryAfterInSeconds)\n      ? calculatePollingIntervalFromDate(new Date(retryAfter))\n      : retryAfterInSeconds * 1000;\n  }\n  return undefined;\n}\n\nexport function getErrorFromResponse<T>(response: LroResponse<T>): LroError | undefined {\n  const error = accessBodyProperty(response, \"error\");\n  if (!error) {\n    logger.warning(\n      `The long-running operation failed but there is no error property in the response's body`,\n    );\n    return;\n  }\n  if (!error.code || !error.message) {\n    logger.warning(\n      `The long-running operation failed but the error property in the response's body doesn't contain code or message`,\n    );\n    return;\n  }\n  return error as LroError;\n}\n\nfunction calculatePollingIntervalFromDate(retryAfterDate: Date): number | undefined {\n  const timeNow = Math.floor(new Date().getTime());\n  const retryAfterTime = retryAfterDate.getTime();\n  if (timeNow < retryAfterTime) {\n    return retryAfterTime - timeNow;\n  }\n  return undefined;\n}\n\nexport function getStatusFromInitialResponse<TState>(inputs: {\n  response: LroResponse<unknown>;\n  state: RestorableOperationState<TState>;\n  operationLocation?: string;\n}): OperationStatus {\n  const { response, state, operationLocation } = inputs;\n  function helper(): OperationStatus {\n    const mode = state.config.metadata?.[\"mode\"];\n    switch (mode) {\n      case undefined:\n        return toOperationStatus(response.rawResponse.statusCode);\n      case \"Body\":\n        return getOperationStatus(response, state);\n      default:\n        return \"running\";\n    }\n  }\n  const status = helper();\n  return status === \"running\" && operationLocation === undefined ? \"succeeded\" : status;\n}\n\n/**\n * Initiates the long-running operation.\n */\nexport async function initHttpOperation<TResult, TState>(inputs: {\n  stateProxy: StateProxy<TState, TResult>;\n  resourceLocationConfig?: LroResourceLocationConfig;\n  processResult?: (result: unknown, state: TState) => TResult;\n  setErrorAsResult: boolean;\n  lro: LongRunningOperation;\n}): Promise<RestorableOperationState<TState>> {\n  const { stateProxy, resourceLocationConfig, processResult, lro, setErrorAsResult } = inputs;\n  return initOperation({\n    init: async () => {\n      const response = await lro.sendInitialRequest();\n      const config = inferLroMode({\n        rawResponse: response.rawResponse,\n        requestPath: lro.requestPath,\n        requestMethod: lro.requestMethod,\n        resourceLocationConfig,\n      });\n      return {\n        response,\n        operationLocation: config?.operationLocation,\n        resourceLocation: config?.resourceLocation,\n        ...(config?.mode ? { metadata: { mode: config.mode } } : {}),\n      };\n    },\n    stateProxy,\n    processResult: processResult\n      ? ({ flatResponse }, state) => processResult(flatResponse, state)\n      : ({ flatResponse }) => flatResponse as TResult,\n    getOperationStatus: getStatusFromInitialResponse,\n    setErrorAsResult,\n  });\n}\n\nexport function getOperationLocation<TState>(\n  { rawResponse }: LroResponse,\n  state: RestorableOperationState<TState>,\n): string | undefined {\n  const mode = state.config.metadata?.[\"mode\"];\n  switch (mode) {\n    case \"OperationLocation\": {\n      return getOperationLocationPollingUrl({\n        operationLocation: getOperationLocationHeader(rawResponse),\n        azureAsyncOperation: getAzureAsyncOperationHeader(rawResponse),\n      });\n    }\n    case \"ResourceLocation\": {\n      return getLocationHeader(rawResponse);\n    }\n    case \"Body\":\n    default: {\n      return undefined;\n    }\n  }\n}\n\nexport function getOperationStatus<TState>(\n  { rawResponse }: LroResponse,\n  state: RestorableOperationState<TState>,\n): OperationStatus {\n  const mode = state.config.metadata?.[\"mode\"];\n  switch (mode) {\n    case \"OperationLocation\": {\n      return getStatus(rawResponse);\n    }\n    case \"ResourceLocation\": {\n      return toOperationStatus(rawResponse.statusCode);\n    }\n    case \"Body\": {\n      return getProvisioningState(rawResponse);\n    }\n    default:\n      throw new Error(`Internal error: Unexpected operation mode: ${mode}`);\n  }\n}\n\nfunction accessBodyProperty<P extends string>(\n  { flatResponse, rawResponse }: LroResponse,\n  prop: P,\n): ResponseBody[P] {\n  return (flatResponse as ResponseBody)?.[prop] ?? (rawResponse.body as ResponseBody)?.[prop];\n}\n\nexport function getResourceLocation<TState>(\n  res: LroResponse,\n  state: RestorableOperationState<TState>,\n): string | undefined {\n  const loc = accessBodyProperty(res, \"resourceLocation\");\n  if (loc && typeof loc === \"string\") {\n    state.config.resourceLocation = loc;\n  }\n  return state.config.resourceLocation;\n}\n\nexport function isOperationError(e: Error): boolean {\n  return e.name === \"RestError\";\n}\n\n/** Polls the long-running operation. */\nexport async function pollHttpOperation<TState, TResult>(inputs: {\n  lro: LongRunningOperation;\n  stateProxy: StateProxy<TState, TResult>;\n  processResult?: (result: unknown, state: TState) => TResult;\n  updateState?: (state: TState, lastResponse: LroResponse) => void;\n  isDone?: (lastResponse: LroResponse, state: TState) => boolean;\n  setDelay: (intervalInMs: number) => void;\n  options?: { abortSignal?: AbortSignalLike };\n  state: RestorableOperationState<TState>;\n  setErrorAsResult: boolean;\n}): Promise<void> {\n  const {\n    lro,\n    stateProxy,\n    options,\n    processResult,\n    updateState,\n    setDelay,\n    state,\n    setErrorAsResult,\n  } = inputs;\n  return pollOperation({\n    state,\n    stateProxy,\n    setDelay,\n    processResult: processResult\n      ? ({ flatResponse }, inputState) => processResult(flatResponse, inputState)\n      : ({ flatResponse }) => flatResponse as TResult,\n    getError: getErrorFromResponse,\n    updateState,\n    getPollingInterval: parseRetryAfter,\n    getOperationLocation,\n    getOperationStatus,\n    isOperationError,\n    getResourceLocation,\n    options,\n    /**\n     * The expansion here is intentional because `lro` could be an object that\n     * references an inner this, so we need to preserve a reference to it.\n     */\n    poll: async (location: string, inputOptions?: { abortSignal?: AbortSignalLike }) =>\n      lro.sendPollRequest(location, inputOptions),\n    setErrorAsResult,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  BuildCreatePollerOptions,\n  CreatePollerOptions,\n  Operation,\n  OperationState,\n  RestorableOperationState,\n  SimplePollerLike,\n  StateProxy,\n} from \"./models.js\";\nimport { deserializeState, initOperation, pollOperation } from \"./operation.js\";\nimport { POLL_INTERVAL_IN_MS } from \"./constants.js\";\nimport { delay } from \"@azure/core-util\";\n\nconst createStateProxy: <TResult, TState extends OperationState<TResult>>() => StateProxy<\n  TState,\n  TResult\n> = () => ({\n  /**\n   * The state at this point is created to be of type OperationState<TResult>.\n   * It will be updated later to be of type TState when the\n   * customer-provided callback, `updateState`, is called during polling.\n   */\n  initState: (config) => ({ status: \"running\", config }) as any,\n  setCanceled: (state) => (state.status = \"canceled\"),\n  setError: (state, error) => (state.error = error),\n  setResult: (state, result) => (state.result = result),\n  setRunning: (state) => (state.status = \"running\"),\n  setSucceeded: (state) => (state.status = \"succeeded\"),\n  setFailed: (state) => (state.status = \"failed\"),\n\n  getError: (state) => state.error,\n  getResult: (state) => state.result,\n  isCanceled: (state) => state.status === \"canceled\",\n  isFailed: (state) => state.status === \"failed\",\n  isRunning: (state) => state.status === \"running\",\n  isSucceeded: (state) => state.status === \"succeeded\",\n});\n\n/**\n * Returns a poller factory.\n */\nexport function buildCreatePoller<TResponse, TResult, TState extends OperationState<TResult>>(\n  inputs: BuildCreatePollerOptions<TResponse, TState>,\n): (\n  lro: Operation<TResponse, { abortSignal?: AbortSignalLike }>,\n  options?: CreatePollerOptions<TResponse, TResult, TState>,\n) => Promise<SimplePollerLike<TState, TResult>> {\n  const {\n    getOperationLocation,\n    getStatusFromInitialResponse,\n    getStatusFromPollResponse,\n    isOperationError,\n    getResourceLocation,\n    getPollingInterval,\n    getError,\n    resolveOnUnsuccessful,\n  } = inputs;\n  return async (\n    { init, poll }: Operation<TResponse, { abortSignal?: AbortSignalLike }>,\n    options?: CreatePollerOptions<TResponse, TResult, TState>,\n  ) => {\n    const {\n      processResult,\n      updateState,\n      withOperationLocation: withOperationLocationCallback,\n      intervalInMs = POLL_INTERVAL_IN_MS,\n      restoreFrom,\n    } = options || {};\n    const stateProxy = createStateProxy<TResult, TState>();\n    const withOperationLocation = withOperationLocationCallback\n      ? (() => {\n          let called = false;\n          return (operationLocation: string, isUpdated: boolean) => {\n            if (isUpdated) withOperationLocationCallback(operationLocation);\n            else if (!called) withOperationLocationCallback(operationLocation);\n            called = true;\n          };\n        })()\n      : undefined;\n    const state: RestorableOperationState<TState> = restoreFrom\n      ? deserializeState(restoreFrom)\n      : await initOperation({\n          init,\n          stateProxy,\n          processResult,\n          getOperationStatus: getStatusFromInitialResponse,\n          withOperationLocation,\n          setErrorAsResult: !resolveOnUnsuccessful,\n        });\n    let resultPromise: Promise<TResult> | undefined;\n    const abortController = new AbortController();\n    // Progress handlers\n    type Handler = (state: TState) => void;\n    const handlers = new Map<symbol, Handler>();\n    const handleProgressEvents = async (): Promise<void> => handlers.forEach((h) => h(state));\n    const cancelErrMsg = \"Operation was canceled\";\n    let currentPollIntervalInMs = intervalInMs;\n\n    const poller: SimplePollerLike<TState, TResult> = {\n      getOperationState: () => state,\n      getResult: () => state.result,\n      isDone: () => [\"succeeded\", \"failed\", \"canceled\"].includes(state.status),\n      isStopped: () => resultPromise === undefined,\n      stopPolling: () => {\n        abortController.abort();\n      },\n      toString: () =>\n        JSON.stringify({\n          state,\n        }),\n      onProgress: (callback: (state: TState) => void) => {\n        const s = Symbol();\n        handlers.set(s, callback);\n        return () => handlers.delete(s);\n      },\n      pollUntilDone: (pollOptions?: { abortSignal?: AbortSignalLike }) =>\n        (resultPromise ??= (async () => {\n          const { abortSignal: inputAbortSignal } = pollOptions || {};\n          // In the future we can use AbortSignal.any() instead\n          function abortListener(): void {\n            abortController.abort();\n          }\n          const abortSignal = abortController.signal;\n          if (inputAbortSignal?.aborted) {\n            abortController.abort();\n          } else if (!abortSignal.aborted) {\n            inputAbortSignal?.addEventListener(\"abort\", abortListener, { once: true });\n          }\n\n          try {\n            if (!poller.isDone()) {\n              await poller.poll({ abortSignal });\n              while (!poller.isDone()) {\n                await delay(currentPollIntervalInMs, { abortSignal });\n                await poller.poll({ abortSignal });\n              }\n            }\n          } finally {\n            inputAbortSignal?.removeEventListener(\"abort\", abortListener);\n          }\n          if (resolveOnUnsuccessful) {\n            return poller.getResult() as TResult;\n          } else {\n            switch (state.status) {\n              case \"succeeded\":\n                return poller.getResult() as TResult;\n              case \"canceled\":\n                throw new Error(cancelErrMsg);\n              case \"failed\":\n                throw state.error;\n              case \"notStarted\":\n              case \"running\":\n                throw new Error(`Polling completed without succeeding or failing`);\n            }\n          }\n        })().finally(() => {\n          resultPromise = undefined;\n        })),\n      async poll(pollOptions?: { abortSignal?: AbortSignalLike }): Promise<void> {\n        if (resolveOnUnsuccessful) {\n          if (poller.isDone()) return;\n        } else {\n          switch (state.status) {\n            case \"succeeded\":\n              return;\n            case \"canceled\":\n              throw new Error(cancelErrMsg);\n            case \"failed\":\n              throw state.error;\n          }\n        }\n        await pollOperation({\n          poll,\n          state,\n          stateProxy,\n          getOperationLocation,\n          isOperationError,\n          withOperationLocation,\n          getPollingInterval,\n          getOperationStatus: getStatusFromPollResponse,\n          getResourceLocation,\n          processResult,\n          getError,\n          updateState,\n          options: pollOptions,\n          setDelay: (pollIntervalInMs) => {\n            currentPollIntervalInMs = pollIntervalInMs;\n          },\n          setErrorAsResult: !resolveOnUnsuccessful,\n        });\n        await handleProgressEvents();\n        if (!resolveOnUnsuccessful) {\n          switch (state.status) {\n            case \"canceled\":\n              throw new Error(cancelErrMsg);\n            case \"failed\":\n              throw state.error;\n          }\n        }\n      },\n    };\n    return poller;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LongRunningOperation, LroResponse } from \"./models.js\";\nimport { OperationState, SimplePollerLike } from \"../poller/models.js\";\nimport {\n  getErrorFromResponse,\n  getOperationLocation,\n  getOperationStatus,\n  getResourceLocation,\n  getStatusFromInitialResponse,\n  inferLroMode,\n  isOperationError,\n  parseRetryAfter,\n} from \"./operation.js\";\nimport { CreateHttpPollerOptions } from \"./models.js\";\nimport { buildCreatePoller } from \"../poller/poller.js\";\n\n/**\n * Creates a poller that can be used to poll a long-running operation.\n * @param lro - Description of the long-running operation\n * @param options - options to configure the poller\n * @returns an initialized poller\n */\nexport async function createHttpPoller<TResult, TState extends OperationState<TResult>>(\n  lro: LongRunningOperation,\n  options?: CreateHttpPollerOptions<TResult, TState>,\n): Promise<SimplePollerLike<TState, TResult>> {\n  const {\n    resourceLocationConfig,\n    intervalInMs,\n    processResult,\n    restoreFrom,\n    updateState,\n    withOperationLocation,\n    resolveOnUnsuccessful = false,\n  } = options || {};\n  return buildCreatePoller<LroResponse, TResult, TState>({\n    getStatusFromInitialResponse,\n    getStatusFromPollResponse: getOperationStatus,\n    isOperationError,\n    getOperationLocation,\n    getResourceLocation,\n    getPollingInterval: parseRetryAfter,\n    getError: getErrorFromResponse,\n    resolveOnUnsuccessful,\n  })(\n    {\n      init: async () => {\n        const response = await lro.sendInitialRequest();\n        const config = inferLroMode({\n          rawResponse: response.rawResponse,\n          requestPath: lro.requestPath,\n          requestMethod: lro.requestMethod,\n          resourceLocationConfig,\n        });\n        return {\n          response,\n          operationLocation: config?.operationLocation,\n          resourceLocation: config?.resourceLocation,\n          ...(config?.mode ? { metadata: { mode: config.mode } } : {}),\n        };\n      },\n      poll: lro.sendPollRequest,\n    },\n    {\n      intervalInMs,\n      withOperationLocation,\n      restoreFrom,\n      updateState,\n      processResult: processResult\n        ? ({ flatResponse }, state) => processResult(flatResponse, state)\n        : ({ flatResponse }) => flatResponse as TResult,\n    },\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LongRunningOperation, LroResourceLocationConfig, RawResponse } from \"../../http/models.js\";\nimport { PollOperation, PollOperationState } from \"../pollOperation.js\";\nimport { RestorableOperationState, StateProxy } from \"../../poller/models.js\";\nimport { initHttpOperation, pollHttpOperation } from \"../../http/operation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { PollerConfig } from \"./models.js\";\nimport { logger } from \"../../logger.js\";\n\nconst createStateProxy: <TResult, TState extends PollOperationState<TResult>>() => StateProxy<\n  TState,\n  TResult\n> = () => ({\n  initState: (config) => ({ config, isStarted: true }) as any,\n  setCanceled: (state) => (state.isCancelled = true),\n  setError: (state, error) => (state.error = error),\n  setResult: (state, result) => (state.result = result),\n  setRunning: (state) => (state.isStarted = true),\n  setSucceeded: (state) => (state.isCompleted = true),\n  setFailed: () => {\n    /** empty body */\n  },\n\n  getError: (state) => state.error,\n  getResult: (state) => state.result,\n  isCanceled: (state) => !!state.isCancelled,\n  isFailed: (state) => !!state.error,\n  isRunning: (state) => !!state.isStarted,\n  isSucceeded: (state) => Boolean(state.isCompleted && !state.isCancelled && !state.error),\n});\n\nexport class GenericPollOperation<TResult, TState extends PollOperationState<TResult>>\n  implements PollOperation<TState, TResult>\n{\n  private pollerConfig?: PollerConfig;\n\n  constructor(\n    public state: RestorableOperationState<TState>,\n    private lro: LongRunningOperation,\n    private setErrorAsResult: boolean,\n    private lroResourceLocationConfig?: LroResourceLocationConfig,\n    private processResult?: (result: unknown, state: TState) => TResult,\n    private updateState?: (state: TState, lastResponse: RawResponse) => void,\n    private isDone?: (lastResponse: TResult, state: TState) => boolean,\n  ) {}\n\n  public setPollerConfig(pollerConfig: PollerConfig): void {\n    this.pollerConfig = pollerConfig;\n  }\n\n  async update(options?: {\n    abortSignal?: AbortSignalLike;\n    fireProgress?: (state: TState) => void;\n  }): Promise<PollOperation<TState, TResult>> {\n    const stateProxy = createStateProxy<TResult, TState>();\n    if (!this.state.isStarted) {\n      this.state = {\n        ...this.state,\n        ...(await initHttpOperation({\n          lro: this.lro,\n          stateProxy,\n          resourceLocationConfig: this.lroResourceLocationConfig,\n          processResult: this.processResult,\n          setErrorAsResult: this.setErrorAsResult,\n        })),\n      };\n    }\n    const updateState = this.updateState;\n    const isDone = this.isDone;\n\n    if (!this.state.isCompleted && this.state.error === undefined) {\n      await pollHttpOperation({\n        lro: this.lro,\n        state: this.state,\n        stateProxy,\n        processResult: this.processResult,\n        updateState: updateState\n          ? (state, { rawResponse }) => updateState(state, rawResponse)\n          : undefined,\n        isDone: isDone\n          ? ({ flatResponse }, state) => isDone(flatResponse as TResult, state)\n          : undefined,\n        options,\n        setDelay: (intervalInMs) => {\n          this.pollerConfig!.intervalInMs = intervalInMs;\n        },\n        setErrorAsResult: this.setErrorAsResult,\n      });\n    }\n    options?.fireProgress?.(this.state);\n    return this;\n  }\n\n  async cancel(): Promise<PollOperation<TState, TResult>> {\n    logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n    return this;\n  }\n\n  /**\n   * Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state,\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress } from \"../poller/models.js\";\nimport { PollerLike } from \"./models.js\";\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  /** controls whether to throw an error if the operation failed or was canceled. */\n  protected resolveOnUnsuccessful: boolean = false;\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void,\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      },\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-util has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-util\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(pollOptions: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll(pollOptions);\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.isDone()) {\n      this.operation = await this.operation.update({\n        abortSignal: options.abortSignal,\n        fireProgress: this.fireProgress.bind(this),\n      });\n    }\n    this.processUpdatedState();\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  private processUpdatedState(): void {\n    if (this.operation.state.error) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        this.reject!(this.operation.state.error);\n        throw this.operation.state.error;\n      }\n    }\n    if (this.operation.state.isCancelled) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        const error = new PollerCancelledError(\"Operation was canceled\");\n        this.reject!(error);\n        throw error;\n      }\n    }\n    if (this.isDone() && this.resolve) {\n      // If the poller has finished polling, this means we now have a result.\n      // However, it can be the case that TResult is instantiated to void, so\n      // we are not expecting a result anyway. To assert that we might not\n      // have a result eventually after finishing polling, we cast the result\n      // to TResult.\n      this.resolve(this.getResult() as TResult);\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(\n    pollOptions: { abortSignal?: AbortSignalLike } = {},\n  ): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling(pollOptions).catch(this.reject);\n    }\n    // This is needed because the state could have been updated by\n    // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n    this.processUpdatedState();\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LroEngineOptions, PollerConfig } from \"./models.js\";\nimport { GenericPollOperation } from \"./operation.js\";\nimport { LongRunningOperation } from \"../../http/models.js\";\nimport { POLL_INTERVAL_IN_MS } from \"../../poller/constants.js\";\nimport { PollOperationState } from \"../pollOperation.js\";\nimport { Poller } from \"../poller.js\";\nimport { RestorableOperationState } from \"../../poller/models.js\";\nimport { deserializeState } from \"../../poller/operation.js\";\n\n/**\n * The LRO Engine, a class that performs polling.\n */\nexport class LroEngine<TResult, TState extends PollOperationState<TResult>> extends Poller<\n  TState,\n  TResult\n> {\n  private config: PollerConfig;\n\n  constructor(lro: LongRunningOperation<TResult>, options?: LroEngineOptions<TResult, TState>) {\n    const {\n      intervalInMs = POLL_INTERVAL_IN_MS,\n      resumeFrom,\n      resolveOnUnsuccessful = false,\n      isDone,\n      lroResourceLocationConfig,\n      processResult,\n      updateState,\n    } = options || {};\n    const state: RestorableOperationState<TState> = resumeFrom\n      ? deserializeState(resumeFrom)\n      : ({} as RestorableOperationState<TState>);\n    const operation = new GenericPollOperation(\n      state,\n      lro,\n      !resolveOnUnsuccessful,\n      lroResourceLocationConfig,\n      processResult,\n      updateState,\n      isDone,\n    );\n    super(operation);\n    this.resolveOnUnsuccessful = resolveOnUnsuccessful;\n\n    this.config = { intervalInMs: intervalInMs };\n    operation.setPollerConfig(this.config);\n  }\n\n  /**\n   * The method used by the poller to wait before attempting to update its operation.\n   */\n  delay(): Promise<void> {\n    return new Promise((resolve) => setTimeout(() => resolve(), this.config.intervalInMs));\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport { LroEngine } from \"./lroEngine.js\";\nexport { LroEngineOptions } from \"./models.js\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { delay } from \"@azure/core-util\";\nimport { PollOperation, PollOperationState, Poller } from \"@azure/core-lro\";\nimport { BlobClient, BlobStartCopyFromURLOptions, BlobBeginCopyFromURLResponse } from \"../Clients\";\n\n/**\n * Defines the operations from a {@link BlobClient} that are needed for the poller\n * returned by {@link BlobClient.beginCopyFromURL} to work.\n */\nexport type CopyPollerBlobClient = Pick<BlobClient, \"abortCopyFromURL\" | \"getProperties\"> & {\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptions,\n  ): Promise<BlobBeginCopyFromURLResponse>;\n};\n\n/**\n * The state used by the poller returned from {@link BlobClient.beginCopyFromURL}.\n *\n * This state is passed into the user-specified `onProgress` callback\n * whenever copy progress is detected.\n */\nexport interface BlobBeginCopyFromUrlPollState\n  extends PollOperationState<BlobBeginCopyFromURLResponse> {\n  /**\n   * The instance of {@link BlobClient} that was used when calling {@link BlobClient.beginCopyFromURL}.\n   */\n  readonly blobClient: CopyPollerBlobClient;\n  /**\n   * The copyId that identifies the in-progress blob copy.\n   */\n  copyId?: string;\n  /**\n   * the progress of the blob copy as reported by the service.\n   */\n  copyProgress?: string;\n  /**\n   * The source URL provided in {@link BlobClient.beginCopyFromURL}.\n   */\n  copySource: string;\n  /**\n   * The options that were passed to the initial {@link BlobClient.beginCopyFromURL} call.\n   * This is exposed for the poller and should not be modified directly.\n   */\n  readonly startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * The PollOperation responsible for:\n *  - performing the initial startCopyFromURL\n *  - checking the copy status via getProperties\n *  - cancellation via abortCopyFromURL\n * @hidden\n */\nexport interface BlobBeginCopyFromURLPollOperation\n  extends PollOperation<BlobBeginCopyFromUrlPollState, BlobBeginCopyFromURLResponse> {}\n\n/**\n * The set of options used to configure the poller.\n * This is an internal interface populated by {@link BlobClient.beginCopyFromURL}.\n *\n * @hidden\n */\nexport interface BlobBeginCopyFromUrlPollerOptions {\n  blobClient: CopyPollerBlobClient;\n  copySource: string;\n  intervalInMs?: number;\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  resumeFrom?: string;\n  startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @hidden\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller<\n  BlobBeginCopyFromUrlPollState,\n  BlobBeginCopyFromURLResponse\n> {\n  public intervalInMs: number;\n\n  constructor(options: BlobBeginCopyFromUrlPollerOptions) {\n    const {\n      blobClient,\n      copySource,\n      intervalInMs = 15000,\n      onProgress,\n      resumeFrom,\n      startCopyFromURLOptions,\n    } = options;\n\n    let state: BlobBeginCopyFromUrlPollState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = makeBlobBeginCopyFromURLPollOperation({\n      ...state,\n      blobClient,\n      copySource,\n      startCopyFromURLOptions,\n    });\n\n    super(operation);\n\n    if (typeof onProgress === \"function\") {\n      this.onProgress(onProgress);\n    }\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  public delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst cancel: BlobBeginCopyFromURLPollOperation[\"cancel\"] = async function cancel(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n) {\n  const state = this.state;\n  const { copyId } = state;\n  if (state.isCompleted) {\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  if (!copyId) {\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n  await state.blobClient.abortCopyFromURL(copyId, {\n    abortSignal: options.abortSignal,\n  });\n  state.isCancelled = true;\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst update: BlobBeginCopyFromURLPollOperation[\"update\"] = async function update(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n): Promise<BlobBeginCopyFromURLPollOperation> {\n  const state = this.state;\n  const { blobClient, copySource, startCopyFromURLOptions } = state;\n\n  if (!state.isStarted) {\n    state.isStarted = true;\n    const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n\n    // copyId is needed to abort\n    state.copyId = result.copyId;\n    if (result.copyStatus === \"success\") {\n      state.result = result;\n      state.isCompleted = true;\n    }\n  } else if (!state.isCompleted) {\n    try {\n      const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n      const { copyStatus, copyProgress } = result;\n      const prevCopyProgress = state.copyProgress;\n      if (copyProgress) {\n        state.copyProgress = copyProgress;\n      }\n      if (\n        copyStatus === \"pending\" &&\n        copyProgress !== prevCopyProgress &&\n        typeof options.fireProgress === \"function\"\n      ) {\n        // trigger in setTimeout, or swallow error?\n        options.fireProgress(state);\n      } else if (copyStatus === \"success\") {\n        state.result = result;\n        state.isCompleted = true;\n      } else if (copyStatus === \"failed\") {\n        state.error = new Error(\n          `Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`,\n        );\n        state.isCompleted = true;\n      }\n    } catch (err: any) {\n      state.error = err;\n      state.isCompleted = true;\n    }\n  }\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst toString: BlobBeginCopyFromURLPollOperation[\"toString\"] = function toString(\n  this: BlobBeginCopyFromURLPollOperation,\n) {\n  return JSON.stringify({ state: this.state }, (key, value) => {\n    // remove blobClient from serialized state since a client can't be hydrated from this info.\n    if (key === \"blobClient\") {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n/**\n * Creates a poll operation given the provided state.\n * @hidden\n */\nfunction makeBlobBeginCopyFromURLPollOperation(\n  state: BlobBeginCopyFromUrlPollState,\n): BlobBeginCopyFromURLPollOperation {\n  return {\n    state: { ...state },\n    cancel,\n    toString,\n    update,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`,\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error,\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error: any) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// This file is used as a shim of \"BufferScheduler\" for some browser bundlers\n// when trying to bundle \"BufferScheduler\"\n// \"BufferScheduler\" class is only available in Node.js runtime\nexport class BufferScheduler {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport * from \"./BufferScheduler.browser\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  const fileReader = new FileReader();\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob: Blob): Promise<string> {\n  const fileReader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsText(blob);\n  });\n}\n\nexport function streamToBuffer(): void {\n  /* empty */\n}\n\nexport function streamToBuffer2(): void {\n  /* empty */\n}\n\nexport function readStreamToLocalFile(): void {\n  /* empty */\n}\n\nexport const fsStat = function stat(): void {\n  /* empty */\n};\n\nexport const fsCreateReadStream = function createReadStream(): void {\n  /* empty */\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  getDefaultProxySettings,\n  RequestBodyType as HttpRequestBody,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport { isTokenCredential, TokenCredential } from \"@azure/core-auth\";\nimport { isNode } from \"@azure/core-util\";\nimport { PollOperationState } from \"@azure/core-lro\";\nimport { randomUUID } from \"@azure/core-util\";\nimport { Readable } from \"stream\";\n\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { BlobQueryResponse } from \"./BlobQueryResponse\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport {\n  AppendBlob,\n  Blob as StorageBlob,\n  BlockBlob,\n  PageBlob,\n} from \"./generated/src/operationsInterfaces\";\nimport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  AppendBlobSealHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesResponse as BlobGetPropertiesResponseInternal,\n  BlobGetTagsResponse as BlobGetTagsResponseInternal,\n  BlobSetHttpHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n} from \"./generated/src\";\nimport {\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobAppendBlockResponse,\n  AppendBlobCreateResponse,\n  BlobAbortCopyFromURLResponse,\n  BlobCopyFromURLResponse,\n  BlobCreateSnapshotResponse,\n  BlobDeleteResponse,\n  BlobDownloadOptionalParams,\n  BlobDownloadResponseModel,\n  BlobGetAccountInfoResponse,\n  BlobGetPropertiesResponseModel,\n  BlobGetTagsHeaders,\n  BlobSetHTTPHeadersResponse,\n  BlobSetTagsResponse,\n  BlobSetTierResponse,\n  BlobStartCopyFromURLResponse,\n  BlobTags,\n  BlobUndeleteResponse,\n  BlockBlobCommitBlockListResponse,\n  BlockBlobGetBlockListResponse,\n  BlockBlobStageBlockFromURLResponse,\n  BlockBlobStageBlockResponse,\n  BlockBlobUploadHeaders,\n  BlockBlobUploadResponse,\n  BlockListType,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  LeaseAccessConditions,\n  PageBlobClearPagesResponse,\n  PageBlobCopyIncrementalResponse,\n  PageBlobCreateResponse,\n  PageBlobResizeResponse,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobUploadPagesResponse,\n  RehydratePriority,\n  SequenceNumberActionType,\n  BlockBlobPutBlobFromUrlResponse,\n  BlobHTTPHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageRangeInfo,\n  PageBlobGetPageRangesDiffResponseModel,\n  BlobCopySourceTags,\n  BlobDownloadResponseInternal,\n  BlobDownloadHeaders,\n  BlobGetPropertiesHeaders,\n  BlobQueryResponseInternal,\n  BlobQueryHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobGetBlockListResponseInternal,\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageListInternal,\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetImmutabilityPolicyResponse,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataResponse,\n} from \"./generatedModels\";\nimport {\n  AppendBlobRequestConditions,\n  BlobDownloadResponseParsed,\n  BlobRequestConditions,\n  BlockBlobTier,\n  ensureCpkIfSpecified,\n  Metadata,\n  ObjectReplicationPolicy,\n  PageBlobRequestConditions,\n  PremiumPageBlobTier,\n  Tags,\n  toAccessTier,\n  TagConditions,\n  MatchConditions,\n  ModificationConditions,\n  ModifiedAccessConditions,\n  BlobQueryArrowField,\n  BlobImmutabilityPolicy,\n  HttpAuthorization,\n  PollerLikeWithCancellation,\n} from \"./models\";\nimport {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n  rangeResponseFromModel,\n} from \"./PageBlobRangeResponse\";\nimport { newPipeline, PipelineLike, isPipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport {\n  BlobBeginCopyFromUrlPoller,\n  BlobBeginCopyFromUrlPollState,\n  CopyPollerBlobClient,\n} from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { Range, rangeToString } from \"./Range\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"../../storage-common/src\";\nimport {\n  BlobDoesNotUseCustomerSpecifiedEncryption,\n  BlobUsesCustomerSpecifiedEncryptionMsg,\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n  DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  ETagAny,\n  URLConstants,\n} from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  extractConnectionStringParts,\n  ExtractPageRangeInfoItems,\n  generateBlockID,\n  getURLParameter,\n  httpAuthorizationToString,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  setURLParameter,\n  toBlobTags,\n  toBlobTagsString,\n  toQuerySerialization,\n  toTags,\n  WithResponse,\n} from \"./utils/utils.common\";\nimport {\n  fsCreateReadStream,\n  fsStat,\n  readStreamToLocalFile,\n  streamToBuffer,\n} from \"./utils/utils.node\";\nimport { SASProtocol } from \"./sas/SASQueryParameters\";\nimport { SasIPRange } from \"./sas/SasIPRange\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobSASPermissions } from \"./sas/BlobSASPermissions\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLOptions extends BlobStartCopyFromURLOptions {\n  /**\n   * The amount of time in milliseconds the poller should wait between\n   * calls to the service to determine the status of the Blob copy.\n   * Defaults to 15 seconds.\n   */\n  intervalInMs?: number;\n  /**\n   * Callback to receive the state of the copy progress.\n   */\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  /**\n   * Serialized poller state that can be used to resume polling from.\n   * This may be useful when starting a copy on one process or thread\n   * and you wish to continue polling on another process or thread.\n   *\n   * To get serialized poller state, call `poller.toString()` on an existing\n   * poller.\n   */\n  resumeFrom?: string;\n}\n\n/**\n * Contains response data for the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLResponse extends BlobStartCopyFromURLResponse {}\n\n/**\n * Options to configure the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An opaque DateTime string value that, when present, specifies the blob snapshot to retrieve.\n   */\n  snapshot?: string;\n  /**\n   * When this is set to true and download range of blob, the service returns the MD5 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * When this is set to true and download range of blob, the service returns the CRC64 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentCrc64?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional `FileClient.download()` request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.exists} operation.\n */\nexport interface BlobExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting blob properties.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.delete} operation.\n */\nexport interface BlobDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.undelete} operation.\n */\nexport interface BlobUndeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setHTTPHeaders} operation.\n */\nexport interface BlobSetHTTPHeadersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setMetadata} operation.\n */\nexport interface BlobSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob metadata.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.setTags} operation.\n */\nexport interface BlobSetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getTags} operation.\n */\nexport interface BlobGetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getTags} operation.\n */\nexport type BlobGetTagsResponse = WithResponse<\n  { tags: Tags } & BlobGetTagsHeaders,\n  BlobGetTagsHeaders,\n  BlobTags\n>;\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n */\nexport interface BlobAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n */\nexport interface BlobReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n */\nexport interface BlobRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n */\nexport interface BlobChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n */\nexport interface BlobBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.createSnapshot} operation.\n */\nexport interface BlobCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobStartCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Overrides the sealed state of the destination blob. Default true.\n   */\n  sealBlob?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobClient.abortCopyFromURL} operation.\n */\nexport interface BlobAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.syncCopyFromURL} operation.\n */\nexport interface BlobSyncCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Default 'REPLACE'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Options to configure the {@link BlobClient.setAccessTier} operation.\n */\nexport interface BlobSetTierOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Option interface for the {@link BlobClient.downloadToBuffer} operation.\n */\nexport interface BlobDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be greater than or equal to 0.\n   * If set to 0 or undefined, blockSize will automatically calculated according to the blob size.\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel download.\n   */\n  concurrency?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Contains response data for the {@link BlobClient.deleteIfExists} operation.\n */\nexport interface BlobDeleteIfExistsResponse extends BlobDeleteResponse {\n  /**\n   * Indicate whether the blob is successfully deleted. Is false if the blob does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesResponse extends BlobGetPropertiesResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * Common options of {@link BlobGenerateSasUrlOptions} and {@link ContainerGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link BlobClient.generateSasUrl} operation.\n */\nexport interface BlobGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: BlobSASPermissions;\n}\n\n/**\n * Options for deleting immutability policy {@link BlobClient.deleteImmutabilityPolicy} operation.\n */\nexport interface BlobDeleteImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options for setting immutability policy {@link BlobClient.setImmutabilityPolicy} operation.\n */\nexport interface BlobSetImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  modifiedAccessCondition?: ModificationConditions;\n}\n\n/**\n * Options for setting legal hold {@link BlobClient.setLegalHold} operation.\n */\nexport interface BlobSetLegalHoldOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobClient.getAccountInfo} operation.\n */\nexport interface BlobGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   */\n  private blobContext: StorageBlob;\n\n  private _name: string;\n  private _containerName: string;\n\n  private _versionId?: string;\n  private _snapshot?: string;\n\n  /**\n   * The name of the blob.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The name of the storage container the blob is associated with.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n\n  /**\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    options = options || {};\n    let pipeline: PipelineLike;\n    let url: string;\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n\n    super(url, pipeline);\n    ({ blobName: this._name, containerName: this._containerName } =\n      this.getBlobAndContainerNamesFromUrl());\n    this.blobContext = this.storageClientContext.blob;\n\n    this._snapshot = getURLParameter(this.url, URLConstants.Parameters.SNAPSHOT) as string;\n    this._versionId = getURLParameter(this.url, URLConstants.Parameters.VERSIONID) as string;\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a new BlobClient object pointing to a version of this blob.\n   * Provide \"\" will remove the versionId and return a Client to the base blob.\n   *\n   * @param versionId - The versionId.\n   * @returns A new BlobClient object pointing to the version of this blob.\n   */\n  public withVersion(versionId: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.VERSIONID,\n        versionId.length === 0 ? undefined : versionId,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Optional options to Blob Download operation.\n   *\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);\n   * console.log(\"Downloaded blob content:\", downloaded.toString());\n   *\n   * async function streamToBuffer(readableStream) {\n   * return new Promise((resolve, reject) => {\n   * const chunks = [];\n   * readableStream.on(\"data\", (data) => {\n   * chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   * });\n   * readableStream.on(\"end\", () => {\n   * resolve(Buffer.concat(chunks));\n   * });\n   * readableStream.on(\"error\", reject);\n   * });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n   * console.log(\n   *   \"Downloaded blob content\",\n   *   downloaded\n   * );\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    options.conditions = options.conditions || {};\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    return tracingClient.withSpan(\"BlobClient-download\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobDownloadResponseInternal, BlobDownloadHeaders>(\n        await this.blobContext.download({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n          },\n          range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n          rangeGetContentMD5: options.rangeGetContentMD5,\n          rangeGetContentCRC64: options.rangeGetContentCrc64,\n          snapshot: options.snapshot,\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      const wrappedRes: BlobDownloadResponseParsed = {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n      // Return browser response immediately\n      if (!isNode) {\n        return wrappedRes;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      if (!res.etag) {\n        throw new RangeError(`File download response doesn't contain valid etag header`);\n      }\n\n      return new BlobDownloadResponse(\n        wrappedRes,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: BlobDownloadOptionalParams = {\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ifMatch: options.conditions!.ifMatch || res.etag,\n              ifModifiedSince: options.conditions!.ifModifiedSince,\n              ifNoneMatch: options.conditions!.ifNoneMatch,\n              ifUnmodifiedSince: options.conditions!.ifUnmodifiedSince,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start,\n            }),\n            rangeGetContentMD5: options.rangeGetContentMD5,\n            rangeGetContentCRC64: options.rangeGetContentCrc64,\n            snapshot: options.snapshot,\n            cpkInfo: options.customerProvidedKey,\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.blobContext.download({\n              abortSignal: options.abortSignal,\n              ...updatedDownloadOptions,\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress,\n        },\n      );\n    });\n  }\n\n  /**\n   * Returns true if the Azure blob resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing blob might be deleted by other clients or\n   * applications. Vice versa new blobs might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: BlobExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"BlobClient-exists\", options, async (updatedOptions) => {\n      try {\n        ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          customerProvidedKey: options.customerProvidedKey,\n          conditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          // Expected exception when checking blob existence\n          return false;\n        } else if (\n          e.statusCode === 409 &&\n          (e.details.errorCode === BlobUsesCustomerSpecifiedEncryptionMsg ||\n            e.details.errorCode === BlobDoesNotUseCustomerSpecifiedEncryption)\n        ) {\n          // Expected exception when checking blob existence\n          return true;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Optional options to Get Properties operation.\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {},\n  ): Promise<BlobGetPropertiesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-getProperties\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobGetPropertiesResponseInternal, BlobGetPropertiesHeaders>(\n        await this.blobContext.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      return {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<BlobDeleteResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"BlobClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<BlobDeleteHeaders, BlobDeleteHeaders>(\n        await this.blobContext.delete({\n          abortSignal: options.abortSignal,\n          deleteSnapshots: options.deleteSnapshots,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async deleteIfExists(\n    options: BlobDeleteOptions = {},\n  ): Promise<BlobDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\"BlobClient-deleteIfExists\", options, async (updatedOptions) => {\n      try {\n        const res = assertResponse(await this.delete(updatedOptions));\n        return {\n          succeeded: true,\n          ...res,\n          _response: res._response, // _response is made non-enumerable\n        };\n      } catch (e: any) {\n        if (e.details?.errorCode === \"BlobNotFound\") {\n          return {\n            succeeded: false,\n            ...e.response?.parsedHeaders,\n            _response: e.response,\n          };\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param options - Optional options to Blob Undelete operation.\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<BlobUndeleteResponse> {\n    return tracingClient.withSpan(\"BlobClient-undelete\", options, async (updatedOptions) => {\n      return assertResponse<BlobUndeleteHeaders, BlobUndeleteHeaders>(\n        await this.blobContext.undelete({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specified blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param blobHTTPHeaders - If no value provided, or no value provided for\n   *                                                   the specified blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   *                                                   A common header to set is `blobContentType`\n   *                                                   enabling the browser to provide functionality\n   *                                                   based on file type.\n   * @param options - Optional options to Blob Set HTTP Headers operation.\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {},\n  ): Promise<BlobSetHTTPHeadersResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setHTTPHeaders\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetHttpHeadersHeaders, BlobSetHttpHeadersHeaders>(\n        await this.blobContext.setHttpHeaders({\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          // cpkInfo: options.customerProvidedKey, // CPK is not included in Swagger, should change this back when this issue is fixed in Swagger.\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param options - Optional options to Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {},\n  ): Promise<BlobSetMetadataResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setMetadata\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetMetadataHeaders, BlobSetMetadataHeaders>(\n        await this.blobContext.setMetadata({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets tags on the underlying blob.\n   * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.\n   * Valid tag key and value characters include lower and upper case letters, digits (0-9),\n   * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').\n   *\n   * @param tags -\n   * @param options -\n   */\n  public async setTags(tags: Tags, options: BlobSetTagsOptions = {}): Promise<BlobSetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-setTags\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTagsHeaders, BlobSetTagsHeaders>(\n        await this.blobContext.setTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n          tags: toBlobTags(tags),\n        }),\n      );\n    });\n  }\n\n  /**\n   * Gets the tags associated with the underlying blob.\n   *\n   * @param options -\n   */\n  public async getTags(options: BlobGetTagsOptions = {}): Promise<BlobGetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-getTags\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobGetTagsResponseInternal, BlobGetTagsHeaders, BlobTags>(\n        await this.blobContext.getTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      const wrappedResponse: BlobGetTagsResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        tags: toTags({ blobTagSet: response.blobTagSet }) || {},\n      };\n      return wrappedResponse;\n    });\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the blob.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the blob.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param options - Optional options to the Blob Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {},\n  ): Promise<BlobCreateSnapshotResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-createSnapshot\", options, async (updatedOptions) => {\n      return assertResponse<BlobCreateSnapshotHeaders, BlobCreateSnapshotHeaders>(\n        await this.blobContext.createSnapshot({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * This method returns a long running operation poller that allows you to wait\n   * indefinitely until the copy is completed.\n   * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n   * Note that the onProgress callback will not be invoked if the operation completes in the first\n   * request, and attempting to cancel a completed copy will result in an error being thrown.\n   *\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * Example using automatic polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using manual polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * while (!poller.isDone()) {\n   *    await poller.poll();\n   * }\n   * const result = copyPoller.getResult();\n   * ```\n   *\n   * Example using progress updates:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   onProgress(state) {\n   *     console.log(`Progress: ${state.copyProgress}`);\n   *   }\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using a changing polling interval (default 15 seconds):\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using copy cancellation:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * // cancel operation after starting it.\n   * try {\n   *   await copyPoller.cancelOperation();\n   *   // calls to get the result now throw PollerCancelledError\n   *   await copyPoller.getResult();\n   * } catch (err) {\n   *   if (err.name === 'PollerCancelledError') {\n   *     console.log('The copy was cancelled.');\n   *   }\n   * }\n   * ```\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  public async beginCopyFromURL(\n    copySource: string,\n    options: BlobBeginCopyFromURLOptions = {},\n  ): Promise<\n    PollerLikeWithCancellation<\n      PollOperationState<BlobBeginCopyFromURLResponse>,\n      BlobBeginCopyFromURLResponse\n    >\n  > {\n    const client: CopyPollerBlobClient = {\n      abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n      getProperties: (...args) => this.getProperties(...args),\n      startCopyFromURL: (...args) => this.startCopyFromURL(...args),\n    };\n    const poller = new BlobBeginCopyFromUrlPoller({\n      blobClient: client,\n      copySource,\n      intervalInMs: options.intervalInMs,\n      onProgress: options.onProgress,\n      resumeFrom: options.resumeFrom,\n      startCopyFromURLOptions: options,\n    });\n\n    // Trigger the startCopyFromURL call by calling poll.\n    // Any errors from this method should be surfaced to the user.\n    await poller.poll();\n\n    return poller;\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param copyId - Id of the Copy From URL operation.\n   * @param options - Optional options to the Blob Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {},\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-abortCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobAbortCopyFromURLHeaders, BlobAbortCopyFromURLHeaders>(\n          await this.blobContext.abortCopyFromURL(copyId, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param options -\n   */\n  public async syncCopyFromURL(\n    copySource: string,\n    options: BlobSyncCopyFromURLOptions = {},\n  ): Promise<BlobCopyFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    return tracingClient.withSpan(\"BlobClient-syncCopyFromURL\", options, async (updatedOptions) => {\n      return assertResponse<BlobCopyFromURLHeaders, BlobCopyFromURLHeaders>(\n        await this.blobContext.copyFromURL(copySource, {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          sourceModifiedAccessConditions: {\n            sourceIfMatch: options.sourceConditions?.ifMatch,\n            sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n            sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n            sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n          },\n          sourceContentMD5: options.sourceContentMD5,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          encryptionScope: options.encryptionScope,\n          copySourceTags: options.copySourceTags,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param options - Optional options to the Blob Set Tier operation.\n   */\n  public async setAccessTier(\n    tier: BlockBlobTier | PremiumPageBlobTier | string,\n    options: BlobSetTierOptions = {},\n  ): Promise<BlobSetTierResponse> {\n    return tracingClient.withSpan(\"BlobClient-setAccessTier\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTierHeaders, BlobSetTierHeaders>(\n        await this.blobContext.setTier(toAccessTier(tier)!, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          rehydratePriority: options.rehydratePriority,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    param1?: Buffer | number,\n    param2?: number,\n    param3?: BlobDownloadToBufferOptions | number,\n    param4: BlobDownloadToBufferOptions = {},\n  ): Promise<Buffer | undefined> {\n    let buffer: Buffer | undefined;\n    let offset = 0;\n    let count = 0;\n    let options = param4;\n    if (param1 instanceof Buffer) {\n      buffer = param1;\n      offset = param2 || 0;\n      count = typeof param3 === \"number\" ? param3 : 0;\n    } else {\n      offset = typeof param1 === \"number\" ? param1 : 0;\n      count = typeof param2 === \"number\" ? param2 : 0;\n      options = (param3 as BlobDownloadToBufferOptions) || {};\n    }\n\n    let blockSize = options.blockSize ?? 0;\n\n    if (blockSize < 0) {\n      throw new RangeError(\"blockSize option must be >= 0\");\n    }\n    if (blockSize === 0) {\n      blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n    }\n\n    if (offset < 0) {\n      throw new RangeError(\"offset option must be >= 0\");\n    }\n\n    if (count && count <= 0) {\n      throw new RangeError(\"count option must be greater than 0\");\n    }\n\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlobClient-downloadToBuffer\",\n      options,\n      async (updatedOptions) => {\n        // Customer doesn't specify length, get it\n        if (!count) {\n          const response = await this.getProperties({\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          count = response.contentLength! - offset;\n          if (count < 0) {\n            throw new RangeError(\n              `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`,\n            );\n          }\n        }\n\n        // Allocate the buffer of size = count if the buffer is not provided\n        if (!buffer) {\n          try {\n            buffer = Buffer.alloc(count);\n          } catch (error: any) {\n            throw new Error(\n              `Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`,\n            );\n          }\n        }\n\n        if (buffer.length < count) {\n          throw new RangeError(\n            `The buffer's size should be equal to or larger than the request count of bytes: ${count}`,\n          );\n        }\n\n        let transferProgress: number = 0;\n        const batch = new Batch(options.concurrency);\n        for (let off = offset; off < offset + count; off = off + blockSize) {\n          batch.addOperation(async () => {\n            // Exclusive chunk end position\n            let chunkEnd = offset + count!;\n            if (off + blockSize < chunkEnd) {\n              chunkEnd = off + blockSize;\n            }\n            const response = await this.download(off, chunkEnd - off, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              maxRetryRequests: options.maxRetryRequestsPerBlock,\n              customerProvidedKey: options.customerProvidedKey,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            const stream = response.readableStreamBody!;\n            await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n            // Update progress after block is downloaded, in case of block trying\n            // Could provide finer grained progress updating inside HTTP requests,\n            // only if convenience layer download try is enabled\n            transferProgress += chunkEnd - off;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          });\n        }\n        await batch.do();\n        return buffer;\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    return tracingClient.withSpan(\"BlobClient-downloadToFile\", options, async (updatedOptions) => {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).blobDownloadStream = undefined;\n      return response;\n    });\n  }\n\n  private getBlobAndContainerNamesFromUrl(): { blobName: string; containerName: string } {\n    let containerName;\n    let blobName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n      // http://localhost:10001/devstoreaccount1/containername/blob\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.host.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n        // .getPath() -> /devstoreaccount1/containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n        containerName = pathComponents![2];\n        blobName = pathComponents![4];\n      } else {\n        // \"https://customdomain.com/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      }\n\n      // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n      containerName = decodeURIComponent(containerName);\n      blobName = decodeURIComponent(blobName);\n\n      // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n      //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n      blobName = blobName.replace(/\\\\/g, \"/\");\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return { blobName, containerName };\n    } catch (error: any) {\n      throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  private async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {},\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-startCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        return assertResponse<BlobStartCopyFromURLHeaders, BlobStartCopyFromURLHeaders>(\n          await this.blobContext.startCopyFromURL(copySource, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata: options.metadata,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions.tagConditions,\n            },\n            immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n            immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n            legalHold: options.legalHold,\n            rehydratePriority: options.rehydratePriority,\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            sealBlob: options.sealBlob,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: BlobGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Delete the immutablility policy on the blob.\n   *\n   * @param options - Optional options to delete immutability policy on the blob.\n   */\n  public async deleteImmutabilityPolicy(\n    options: BlobDeleteImmutabilityPolicyOptions = {},\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-deleteImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          BlobDeleteImmutabilityPolicyHeaders,\n          BlobDeleteImmutabilityPolicyHeaders\n        >(\n          await this.blobContext.deleteImmutabilityPolicy({\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set immutability policy on the blob.\n   *\n   * @param options - Optional options to set immutability policy on the blob.\n   */\n  public async setImmutabilityPolicy(\n    immutabilityPolicy: BlobImmutabilityPolicy,\n    options: BlobSetImmutabilityPolicyOptions = {},\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-setImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobSetImmutabilityPolicyHeaders, BlobSetImmutabilityPolicyHeaders>(\n          await this.blobContext.setImmutabilityPolicy({\n            immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn,\n            immutabilityPolicyMode: immutabilityPolicy.policyMode,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set legal hold on the blob.\n   *\n   * @param options - Optional options to set legal hold on the blob.\n   */\n  public async setLegalHold(\n    legalHoldEnabled: boolean,\n    options: BlobSetLegalHoldOptions = {},\n  ): Promise<BlobSetLegalHoldResponse> {\n    return tracingClient.withSpan(\"BlobClient-setLegalHold\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetLegalHoldHeaders, BlobSetLegalHoldHeaders>(\n        await this.blobContext.setLegalHold(legalHoldEnabled, {\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: BlobGetAccountInfoOptions = {},\n  ): Promise<BlobGetAccountInfoResponse> {\n    return tracingClient.withSpan(\"BlobClient-getAccountInfo\", options, async (updatedOptions) => {\n      return assertResponse<BlobGetAccountInfoHeaders, BlobGetAccountInfoHeaders>(\n        await this.blobContext.getAccountInfo({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n}\n\n/**\n * Options to configure {@link AppendBlobClient.create} operation.\n */\nexport interface AppendBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when creating append blobs. A common header\n   * to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * HTTP headers to set when creating append blobs. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.seal} operation.\n */\nexport interface AppendBlobSealOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: AppendBlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlock} operation.\n */\nexport interface AppendBlobAppendBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content. This hash is used to verify the integrity of the append block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlockFromURL} operation.\n */\nexport interface AppendBlobAppendBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link appendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsResponse extends AppendBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.appendBlobContext = this.storageClientContext.appendBlob;\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options - Options to the Append Block Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await appendBlobClient.create();\n   * ```\n   */\n  public async create(options: AppendBlobCreateOptions = {}): Promise<AppendBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"AppendBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobCreateHeaders, AppendBlobCreateHeaders>(\n        await this.appendBlobContext.create(0, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * If the blob with the same name already exists, the content of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: AppendBlobCreateIfNotExistsOptions = {},\n  ): Promise<AppendBlobCreateIfNotExistsResponse> {\n    const conditions = { ifNoneMatch: ETagAny };\n    return tracingClient.withSpan(\n      \"AppendBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = assertResponse(\n            await this.create({\n              ...updatedOptions,\n              conditions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Seals the append blob, making it read only.\n   *\n   * @param options -\n   */\n  public async seal(options: AppendBlobSealOptions = {}): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"AppendBlobClient-seal\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobSealHeaders, AppendBlobSealHeaders>(\n        await this.appendBlobContext.seal({\n          abortSignal: options.abortSignal,\n          appendPositionAccessConditions: options.conditions,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param body - Data to be appended.\n   * @param contentLength - Length of the body in bytes.\n   * @param options - Options to the Append Block operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello World!\";\n   *\n   * // Create a new append blob and append data to the blob.\n   * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await newAppendBlobClient.create();\n   * await newAppendBlobClient.appendBlock(content, content.length);\n   *\n   * // Append data to an existing append blob.\n   * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await existingAppendBlobClient.appendBlock(content, content.length);\n   * ```\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {},\n  ): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlock\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<AppendBlobAppendBlockHeaders, AppendBlobAppendBlockHeaders>(\n          await this.appendBlobContext.appendBlock(contentLength, body, {\n            abortSignal: options.abortSignal,\n            appendPositionAccessConditions: options.conditions,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            requestOptions: {\n              onUploadProgress: options.onProgress,\n            },\n            transactionalContentMD5: options.transactionalContentMD5,\n            transactionalContentCrc64: options.transactionalContentCrc64,\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param sourceURL -\n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param sourceOffset - Offset in source to be appended\n   * @param count - Number of bytes to be appended as a block\n   * @param options -\n   */\n  public async appendBlockFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: AppendBlobAppendBlockFromURLOptions = {},\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          AppendBlobAppendBlockFromUrlHeaders,\n          AppendBlobAppendBlockFromUrlHeaders\n        >(\n          await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n            abortSignal: options.abortSignal,\n            sourceRange: rangeToString({ offset: sourceOffset, count }),\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            leaseAccessConditions: options.conditions,\n            appendPositionAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n            },\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure {@link BlockBlobClient.upload} operation.\n */\nexport interface BlockBlobUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.syncUploadFromURL} operation.\n */\nexport interface BlockBlobSyncUploadFromURLOptions extends CommonOptions {\n  /**\n   * Server timeout in seconds.\n   * For more information, @see https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\n   */\n  timeoutInSeconds?: number;\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: Metadata;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Optional, default is true.  Indicates if properties from the source blob should be copied.\n   */\n  copySourceBlobProperties?: boolean;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * A common header to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Conditions to meet for the destination Azure Blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Conditions to meet for the source Azure Blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Blob query error type.\n */\nexport interface BlobQueryError {\n  /**\n   * Whether error is fatal. Fatal error will stop query.\n   */\n  isFatal: boolean;\n  /**\n   * Error name.\n   */\n  name: string;\n  /**\n   * Position in bytes of the query.\n   */\n  position: number;\n  /**\n   * Error description.\n   */\n  description: string;\n}\n\n/**\n * Options to query blob with JSON format.\n */\nexport interface BlobQueryJsonTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a JSON format blob.\n   */\n  kind: \"json\";\n}\n\n/**\n * Options to query blob with CSV format.\n */\nexport interface BlobQueryCsvTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a CSV format blob.\n   */\n  kind: \"csv\";\n  /**\n   * Column separator. Default is \",\".\n   */\n  columnSeparator?: string;\n  /**\n   * Field quote.\n   */\n  fieldQuote?: string;\n  /**\n   * Escape character.\n   */\n  escapeCharacter?: string;\n  /**\n   * Has headers. Default is false.\n   */\n  hasHeaders?: boolean;\n}\n\n/**\n * Options to query blob with Apache Arrow format. Only valid for {@link BlockBlobQueryOptions.outputTextConfiguration}.\n */\nexport interface BlobQueryArrowConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"arrow\";\n\n  /**\n   * List of {@link BlobQueryArrowField} describing the schema of the data.\n   */\n  schema: BlobQueryArrowField[];\n}\n\n/**\n * Options to query blob with Parquet format. Only valid for {@link BlockBlobQueryOptions.inputTextConfiguration}.\n */\nexport interface BlobQueryParquetConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"parquet\";\n}\n\n/**\n * Options to configure {@link BlockBlobClient.query} operation.\n */\nexport interface BlockBlobQueryOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Configurations for the query input.\n   */\n  inputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryParquetConfiguration;\n  /**\n   * Configurations for the query output.\n   */\n  outputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration;\n  /**\n   * Callback to receive events on the progress of query operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlock} operation.\n */\nexport interface BlockBlobStageBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n\n  /**\n   * A CRC64 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlockFromURL} operation.\n */\nexport interface BlockBlobStageBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.commitBlockList} operation.\n */\nexport interface BlockBlobCommitBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when committing the block list.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.getBlockList} operation.\n */\nexport interface BlockBlobGetBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n}\n\n/**\n * Option interface for the {@link BlockBlobClient.uploadStream} operation.\n */\nexport interface BlockBlobUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * A common header to set is `blobContentType`, enabling the\n   * browser to provide functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n/**\n * Option interface for {@link BlockBlobClient.uploadFile} and {@link BlockBlobClient.uploadSeekableStream}.\n */\nexport interface BlockBlobParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Destination block blob size in bytes.\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers. A common header to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be greater than or equal to 0.\n   */\n  concurrency?: number;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Response type for {@link BlockBlobClient.uploadFile}, {@link BlockBlobClient.uploadStream}, and\n * {@link BlockBlobClient.uploadBrowserDate}.\n */\nexport type BlobUploadCommonResponse = WithResponse<BlockBlobUploadHeaders>;\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * Note. Ideally BlobClient should set BlobClient.blobContext to protected. However, API\n   * extractor has issue blocking that. Here we redecelare _blobContext in BlockBlobClient.\n   */\n  private _blobContext: StorageBlob;\n\n  /**\n   * blockBlobContext provided by protocol layer.\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.blockBlobContext = this.storageClientContext.blockBlob;\n    this._blobContext = this.storageClientContext.blob;\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Quick query for a JSON or CSV formatted blob.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Query and convert a blob to a string\n   * const queryBlockBlobResponse = await blockBlobClient.query(\"select * from BlobStorage\");\n   * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();\n   * console.log(\"Query blob content:\", downloaded);\n   *\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * @param query -\n   * @param options -\n   */\n  public async query(\n    query: string,\n    options: BlockBlobQueryOptions = {},\n  ): Promise<BlobDownloadResponseModel> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    if (!isNode) {\n      throw new Error(\"This operation currently is only supported in Node.js.\");\n    }\n\n    return tracingClient.withSpan(\"BlockBlobClient-query\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobQueryResponseInternal, BlobQueryHeaders>(\n        await this._blobContext.query({\n          abortSignal: options.abortSignal,\n          queryRequest: {\n            queryType: \"SQL\",\n            expression: query,\n            inputSerialization: toQuerySerialization(options.inputTextConfiguration),\n            outputSerialization: toQuerySerialization(options.outputTextConfiguration),\n          },\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      return new BlobQueryResponse(response, {\n        abortSignal: options.abortSignal,\n        onProgress: options.onProgress,\n        onError: options.onError,\n      });\n    });\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link stageBlock} and {@link commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link uploadFile},\n   * {@link uploadStream} or {@link uploadBrowserData} for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to the Block Blob Upload operation.\n   * @returns Response data for the Block Blob Upload operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<BlockBlobUploadResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-upload\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobUploadHeaders, BlockBlobUploadHeaders>(\n        await this.blockBlobContext.upload(contentLength, body, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a new Block Blob where the contents of the blob are read from a given URL.\n   * This API is supported beginning with the 2020-04-08 version. Partial updates\n   * are not supported with Put Blob from URL; the content of an existing blob is overwritten with\n   * the content of the new blob.  To perform partial updates to a block blob’s contents using a\n   * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.\n   *\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Optional parameters.\n   */\n\n  public async syncUploadFromURL(\n    sourceURL: string,\n    options: BlockBlobSyncUploadFromURLOptions = {},\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-syncUploadFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobPutBlobFromUrlHeaders, BlockBlobPutBlobFromUrlHeaders>(\n          await this.blockBlobContext.putBlobFromUrl(0, sourceURL, {\n            ...options,\n            blobHttpHeaders: options.blobHTTPHeaders,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions?.tagConditions,\n            },\n            cpkInfo: options.customerProvidedKey,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            copySourceTags: options.copySourceTags,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param body - Data to upload to the staging area.\n   * @param contentLength - Number of bytes to upload.\n   * @param options - Options to the Block Blob Stage Block operation.\n   * @returns Response data for the Block Blob Stage Block operation.\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {},\n  ): Promise<BlockBlobStageBlockResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-stageBlock\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobStageBlockHeaders, BlockBlobStageBlockHeaders>(\n        await this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to the Block Blob Stage Block From URL operation.\n   * @returns Response data for the Block Blob Stage Block From URL operation.\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {},\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-stageBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobStageBlockFromURLHeaders, BlockBlobStageBlockFromURLHeaders>(\n          await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n   * update a blob by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param blocks -  Array of 64-byte value that is base64-encoded\n   * @param options - Options to the Block Blob Commit Block List operation.\n   * @returns Response data for the Block Blob Commit Block List operation.\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {},\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-commitBlockList\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobCommitBlockListHeaders, BlockBlobCommitBlockListHeaders>(\n          await this.blockBlobContext.commitBlockList(\n            { latest: blocks },\n            {\n              abortSignal: options.abortSignal,\n              blobHttpHeaders: options.blobHTTPHeaders,\n              leaseAccessConditions: options.conditions,\n              metadata: options.metadata,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n              immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n              legalHold: options.legalHold,\n              tier: toAccessTier(options.tier),\n              blobTagsString: toBlobTagsString(options.tags),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param listType - Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param options - Options to the Block Blob Get Block List operation.\n   * @returns Response data for the Block Blob Get Block List operation.\n   */\n  public async getBlockList(\n    listType: BlockListType,\n    options: BlockBlobGetBlockListOptions = {},\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-getBlockList\",\n      options,\n      async (updatedOptions) => {\n        const res = assertResponse<\n          BlockBlobGetBlockListResponseInternal,\n          BlockBlobGetBlockListHeaders\n        >(\n          await this.blockBlobContext.getBlockList(listType, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        if (!res.committedBlocks) {\n          res.committedBlocks = [];\n        }\n\n        if (!res.uncommittedBlocks) {\n          res.uncommittedBlocks = [];\n        }\n\n        return res;\n      },\n    );\n  }\n\n  // High level functions\n\n  /**\n   * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.\n   *\n   * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadData\", options, async (updatedOptions) => {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions,\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      }\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n   * {@link commitBlockList} to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @deprecated Use {@link uploadData} instead.\n   *\n   * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView\n   * @param options - Options to upload browser data.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadBrowserData\",\n      options,\n      async (updatedOptions) => {\n        const browserBlob = new Blob([browserData]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      },\n    );\n  }\n\n  /**\n   *\n   * Uploads data to block blob. Requires a bodyFactory as the data source,\n   * which need to return a {@link HttpRequestBody} object with the offset and size provided.\n   *\n   * When data length is no more than the specified {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * @param bodyFactory -\n   * @param size - size of the data to upload.\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, size: number) => HttpRequestBody,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    let blockSize = options.blockSize ?? 0;\n    if (blockSize < 0 || blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`,\n      );\n    }\n\n    const maxSingleShotSize = options.maxSingleShotSize ?? BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n\n    if (maxSingleShotSize < 0 || maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`,\n      );\n    }\n\n    if (blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > maxSingleShotSize) {\n        blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadSeekableInternal\",\n      options,\n      async (updatedOptions) => {\n        if (size <= maxSingleShotSize) {\n          return assertResponse(await this.upload(bodyFactory(0, size), size, updatedOptions));\n        }\n\n        const numBlocks: number = Math.floor((size - 1) / blockSize) + 1;\n        if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n          throw new RangeError(\n            `The buffer's size is too big or the BlockSize is too small;` +\n              `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`,\n          );\n        }\n\n        const blockList: string[] = [];\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n\n        const batch = new Batch(options.concurrency);\n        for (let i = 0; i < numBlocks; i++) {\n          batch.addOperation(async (): Promise<any> => {\n            const blockID = generateBlockID(blockIDPrefix, i);\n            const start = blockSize * i;\n            const end = i === numBlocks - 1 ? size : start + blockSize;\n            const contentLength = end - start;\n            blockList.push(blockID);\n            await this.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            // TODO: Hook with convenience layer progress event in finer level\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress!({\n                loadedBytes: transferProgress,\n              });\n            }\n          });\n        }\n        await batch.do();\n\n        return this.commitBlockList(blockList, updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param filePath - Full path of local file\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadFile(\n    filePath: string,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadFile\", options, async (updatedOptions) => {\n      const size = (await fsStat(filePath)).size;\n      return this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset,\n            });\n        },\n        size,\n        {\n          ...options,\n          tracingOptions: updatedOptions.tracingOptions,\n        },\n      );\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream\n   * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n   * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,\n   *                                 positive correlation with max uploading concurrency. Default value is 5\n   * @param options - Options to Upload Stream to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number = DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n    maxConcurrency: number = 5,\n    options: BlockBlobUploadStreamOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadStream\",\n      options,\n      async (updatedOptions) => {\n        let blockNum = 0;\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n        const blockList: string[] = [];\n\n        const scheduler = new BufferScheduler(\n          stream,\n          bufferSize,\n          maxConcurrency,\n          async (body, length) => {\n            const blockID = generateBlockID(blockIDPrefix, blockNum);\n            blockList.push(blockID);\n            blockNum++;\n\n            await this.stageBlock(blockID, body, length, {\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += length;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          },\n          // concurrency should set a smaller value than maxConcurrency, which is helpful to\n          // reduce the possibility when a outgoing handler waits for stream data, in\n          // this situation, outgoing handlers are blocked.\n          // Outgoing queue shouldn't be empty.\n          Math.ceil((maxConcurrency / 4) * 3),\n        );\n        await scheduler.do();\n\n        return assertResponse(\n          await this.commitBlockList(blockList, {\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure the {@link PageBlobClient.create} operation.\n */\nexport interface PageBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when creating a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.uploadPages} operation.\n */\nexport interface PageBlobUploadPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.clearPages} operation.\n */\nexport interface PageBlobClearPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when clearing pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure page blob - get page ranges segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesSegment}\n * - {@link PageBlobClient.listPageRangeItemSegments}\n * - {@link PageBlobClient.listPageRangeItems}\n */\ninterface PageBlobListPageRangesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRanges} operation.\n */\nexport interface PageBlobListPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * (unused)\n   */\n  range?: string;\n}\n\n/**\n * Options to configure page blob - get page ranges diff segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesDiffSegment}\n * - {@link PageBlobClient.listPageRangeDiffItemSegments}\n * - {@link PageBlobClient.listPageRangeDiffItems}\n */\ninterface PageBlobListPageRangesDiffSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRangesDiff} operation.\n */\nexport interface PageBlobListPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.resize} operation.\n */\nexport interface PageBlobResizeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when resizing a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.updateSequenceNumber} operation.\n */\nexport interface PageBlobUpdateSequenceNumberOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.startCopyIncremental} operation.\n */\nexport interface PageBlobStartCopyIncrementalOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when starting a copy incremental operation.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.uploadPagesFromURL} operation.\n */\nexport interface PageBlobUploadPagesFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsResponse extends PageBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param url - A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.pageBlobContext = this.storageClientContext.pageBlob;\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options - Options to the Page Blob Create operation.\n   * @returns Response data for the Page Blob Create operation.\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {},\n  ): Promise<PageBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobCreateHeaders, PageBlobCreateHeaders>(\n        await this.pageBlobContext.create(0, size, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          blobSequenceNumber: options.blobSequenceNumber,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob. If the blob with the same name already exists, the content\n   * of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options -\n   */\n  public async createIfNotExists(\n    size: number,\n    options: PageBlobCreateIfNotExistsOptions = {},\n  ): Promise<PageBlobCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const conditions = { ifNoneMatch: ETagAny };\n          const res = assertResponse(\n            await this.create(size, {\n              ...options,\n              conditions,\n              tracingOptions: updatedOptions.tracingOptions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param body - Data to upload\n   * @param offset - Offset of destination page blob\n   * @param count - Content length of the body, also number of bytes to be uploaded\n   * @param options - Options to the Page Blob Upload Pages operation.\n   * @returns Response data for the Page Blob Upload Pages operation.\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {},\n  ): Promise<PageBlobUploadPagesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-uploadPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobUploadPagesHeaders, PageBlobUploadPagesHeaders>(\n        await this.pageBlobContext.uploadPages(count, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param destOffset - Offset of destination page blob\n   * @param count - Number of bytes to be uploaded from source page blob\n   * @param options -\n   */\n  public async uploadPagesFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: PageBlobUploadPagesFromURLOptions = {},\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"PageBlobClient-uploadPagesFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobUploadPagesFromURLHeaders, PageBlobUploadPagesFromURLHeaders>(\n          await this.pageBlobContext.uploadPagesFromURL(\n            sourceURL,\n            rangeToString({ offset: sourceOffset, count }),\n            0,\n            rangeToString({ offset: destOffset, count }),\n            {\n              abortSignal: options.abortSignal,\n              sourceContentMD5: options.sourceContentMD5,\n              sourceContentCrc64: options.sourceContentCrc64,\n              leaseAccessConditions: options.conditions,\n              sequenceNumberAccessConditions: options.conditions,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              sourceModifiedAccessConditions: {\n                sourceIfMatch: options.sourceConditions?.ifMatch,\n                sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n                sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n                sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param offset - Starting byte position of the pages to clear.\n   * @param count - Number of bytes to clear.\n   * @param options - Options to the Page Blob Clear Pages operation.\n   * @returns Response data for the Page Blob Clear Pages operation.\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {},\n  ): Promise<PageBlobClearPagesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-clearPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobClearPagesHeaders, PageBlobClearPagesHeaders>(\n        await this.pageBlobContext.clearPages(0, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns Response data for the Page Blob Get Ranges operation.\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {},\n  ): Promise<PageBlobGetPageRangesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRanges\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesSegment returns a single segment of page ranges starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to PageBlob Get Page Ranges Segment operation.\n   */\n  private async listPageRangesSegment(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            marker: marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesResponseModel}\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItemSegments(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageBlobGetPageRangesResponseModel> {\n    let getPageRangeItemSegmentsResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesSegment(\n          offset,\n          count,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItems(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeItemSegments(\n      offset,\n      count,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges for a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges for a page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRanges()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRanges();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRanges().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRanges().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRanges().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesResponseModel> {\n    options.conditions = options.conditions || {};\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeItems(offset, count, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeItemSegments(offset, count, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiff\",\n      options,\n      async (updatedOptions) => {\n        const result = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshot,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(result);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesDiffSegment returns a single segment of page ranges starting from the\n   * specified Marker for difference between previous snapshot and the target page blob.\n   * Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesDiffSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of the get to be returned with the next get operation.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async listPageRangesDiffSegment(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options: PageBlobListPageRangesDiffSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiffSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options?.abortSignal,\n            leaseAccessConditions: options?.conditions,\n            modifiedAccessConditions: {\n              ...options?.conditions,\n              ifTags: options?.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshotOrUrl,\n            range: rangeToString({\n              offset: offset,\n              count: count,\n            }),\n            marker: marker,\n            maxPageSize: options?.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesDiffResponseModel}\n   *\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItemSegments(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageBlobGetPageRangesDiffResponseModel> {\n    let getPageRangeItemSegmentsResponse: PageBlobGetPageRangesResponseModel;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesDiffSegment(\n          offset,\n          count,\n          prevSnapshotOrUrl,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItems(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeDiffItemSegments(\n      offset,\n      count,\n      prevSnapshotOrUrl,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRangesDiff()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRangesDiff();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRangesDiff().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobListPageRangesDiffOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesDiffResponseModel> {\n    options.conditions = options.conditions || {};\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeDiffItems(offset, count, prevSnapshot, {\n      ...options,\n    });\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeDiffItemSegments(\n          offset,\n          count,\n          prevSnapshot,\n          settings.continuationToken,\n          {\n            maxPageSize: settings.maxPageSize,\n            ...options,\n          },\n        );\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiffForManagedDisks(\n    offset: number,\n    count: number,\n    prevSnapshotUrl: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-GetPageRangesDiffForManagedDisks\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevSnapshotUrl,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param size - Target size\n   * @param options - Options to the Page Blob Resize operation.\n   * @returns Response data for the Page Blob Resize operation.\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {},\n  ): Promise<PageBlobResizeResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-resize\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobResizeHeaders, PageBlobResizeHeaders>(\n        await this.pageBlobContext.resize(size, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.\n   * @param sequenceNumber - Required if sequenceNumberAction is max or update\n   * @param options - Options to the Page Blob Update Sequence Number operation.\n   * @returns Response data for the Page Blob Update Sequence Number operation.\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {},\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-updateSequenceNumber\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobUpdateSequenceNumberHeaders,\n          PageBlobUpdateSequenceNumberHeaders\n        >(\n          await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n            abortSignal: options.abortSignal,\n            blobSequenceNumber: sequenceNumber,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param copySource - Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Options to the Page Blob Copy Incremental operation.\n   * @returns Response data for the Page Blob Copy Incremental operation.\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {},\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-startCopyIncremental\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobCopyIncrementalHeaders, PageBlobCopyIncrementalHeaders>(\n          await this.pageBlobContext.copyIncremental(copySource, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { blobToString } from \"./utils/utils.browser\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel,\n): Promise<string> {\n  const blob = (await batchResponse.blobBody) as Blob;\n  return blobToString(blob);\n}\n\nexport function utf8ByteLength(str: string): number {\n  return new Blob([str]).size;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { toHttpHeadersLike } from \"@azure/core-http-compat\";\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport {\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  HeaderConstants,\n  HTTPURLConnection,\n} from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport { BatchSubRequest } from \"./BlobBatch\";\nimport { BatchSubResponse, ParsedBatchResponse } from \"./BatchResponse\";\nimport { logger } from \"./log\";\n\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n  private readonly batchResponse: ServiceSubmitBatchResponseModel;\n  private readonly responseBatchBoundary: string;\n  private readonly perResponsePrefix: string;\n  private readonly batchResponseEnding: string;\n  private readonly subRequests: Map<number, BatchSubRequest>;\n\n  constructor(\n    batchResponse: ServiceSubmitBatchResponseModel,\n    subRequests: Map<number, BatchSubRequest>,\n  ) {\n    if (!batchResponse || !batchResponse.contentType) {\n      // In special case(reported), server may return invalid content-type which could not be parsed.\n      throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n    }\n\n    if (!subRequests || subRequests.size === 0) {\n      // This should be prevent during coding.\n      throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n    }\n\n    this.batchResponse = batchResponse;\n    this.subRequests = subRequests;\n    this.responseBatchBoundary = this.batchResponse.contentType!.split(\"=\")[1];\n    this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n    this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n  }\n\n  // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n  public async parseBatchResponse(): Promise<ParsedBatchResponse> {\n    // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n    // sub request's response.\n    if (this.batchResponse._response.status !== HTTPURLConnection.HTTP_ACCEPTED) {\n      throw new Error(\n        `Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`,\n      );\n    }\n\n    const responseBodyAsText = await getBodyAsText(this.batchResponse);\n\n    const subResponses = responseBodyAsText\n      .split(this.batchResponseEnding)[0] // string after ending is useless\n      .split(this.perResponsePrefix)\n      .slice(1); // string before first response boundary is useless\n    const subResponseCount = subResponses.length;\n\n    // Defensive coding in case of potential error parsing.\n    // Note: subResponseCount == 1 is special case where sub request is invalid.\n    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n    if (subResponseCount !== this.subRequests.size && subResponseCount !== 1) {\n      throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n    }\n\n    const deserializedSubResponses: Array<BatchSubResponse> = new Array(subResponseCount);\n    let subResponsesSucceededCount: number = 0;\n    let subResponsesFailedCount: number = 0;\n\n    // Parse sub subResponses.\n    for (let index = 0; index < subResponseCount; index++) {\n      const subResponse = subResponses[index];\n      const deserializedSubResponse = {} as BatchSubResponse;\n      deserializedSubResponse.headers = toHttpHeadersLike(createHttpHeaders());\n\n      const responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n      let subRespHeaderStartFound = false;\n      let subRespHeaderEndFound = false;\n      let subRespFailed = false;\n      let contentId = NOT_FOUND;\n\n      for (const responseLine of responseLines) {\n        if (!subRespHeaderStartFound) {\n          // Convention line to indicate content ID\n          if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n          }\n\n          // Http version line with status code indicates the start of sub request's response.\n          // Example: HTTP/1.1 202 Accepted\n          if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n            subRespHeaderStartFound = true;\n\n            const tokens = responseLine.split(SPACE_DELIMITER);\n            deserializedSubResponse.status = parseInt(tokens[1]);\n            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n          }\n\n          continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n        }\n\n        if (responseLine.trim() === \"\") {\n          // Sub response's header start line already found, and the first empty line indicates header end line found.\n          if (!subRespHeaderEndFound) {\n            subRespHeaderEndFound = true;\n          }\n\n          continue; // Skip empty line\n        }\n\n        // Note: when code reach here, it indicates subRespHeaderStartFound == true\n        if (!subRespHeaderEndFound) {\n          if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n            // Defensive coding to prevent from missing valuable lines.\n            throw new Error(\n              `Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`,\n            );\n          }\n\n          // Parse headers of sub response.\n          const tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n          deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n          if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n            deserializedSubResponse.errorCode = tokens[1];\n            subRespFailed = true;\n          }\n        } else {\n          // Assemble body of sub response.\n          if (!deserializedSubResponse.bodyAsText) {\n            deserializedSubResponse.bodyAsText = \"\";\n          }\n\n          deserializedSubResponse.bodyAsText += responseLine;\n        }\n      } // Inner for end\n\n      // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.\n      // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it\n      // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that\n      // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.\n      if (\n        contentId !== NOT_FOUND &&\n        Number.isInteger(contentId) &&\n        contentId >= 0 &&\n        contentId < this.subRequests.size &&\n        deserializedSubResponses[contentId] === undefined\n      ) {\n        deserializedSubResponse._request = this.subRequests.get(contentId)!;\n        deserializedSubResponses[contentId] = deserializedSubResponse;\n      } else {\n        logger.error(\n          `subResponses[${index}] is dropped as the Content-ID is not found or invalid, Content-ID: ${contentId}`,\n        );\n      }\n\n      if (subRespFailed) {\n        subResponsesFailedCount++;\n      } else {\n        subResponsesSucceededCount++;\n      }\n    }\n\n    return {\n      subResponses: deserializedSubResponses,\n      subResponsesSucceededCount: subResponsesSucceededCount,\n      subResponsesFailedCount: subResponsesFailedCount,\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nenum MutexLockStatus {\n  LOCKED,\n  UNLOCKED,\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @param key - lock key\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @param key -\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createEmptyPipeline,\n  createHttpHeaders,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobClient, BlobDeleteOptions, BlobSetTierOptions } from \"./Clients\";\nimport { AccessTier } from \"./generatedModels\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport { stringifyXML } from \"@azure/core-xml\";\nimport {\n  HeaderConstants,\n  BATCH_MAX_REQUEST,\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  StorageOAuthScopes,\n} from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { authorizeRequestOnTenantChallenge, serializationPolicy } from \"@azure/core-client\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\n\n/**\n * A request associated with a batch operation.\n */\nexport interface BatchSubRequest {\n  /**\n   * The URL of the resource to request operation.\n   */\n  url: string;\n\n  /**\n   * The credential used for sub request.\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service.\n   * You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n}\n\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n */\nexport class BlobBatch {\n  private batchRequest: InnerBatchRequest;\n  private readonly batch: string = \"batch\";\n  private batchType: \"delete\" | \"setAccessTier\" | undefined;\n\n  constructor() {\n    this.batchRequest = new InnerBatchRequest();\n  }\n\n  /**\n   * Get the value of Content-Type for a batch request.\n   * The value must be multipart/mixed with a batch boundary.\n   * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n   */\n  public getMultiPartContentType(): string {\n    return this.batchRequest.getMultipartContentType();\n  }\n\n  /**\n   * Get assembled HTTP request body for sub requests.\n   */\n  public getHttpRequestBody(): string {\n    return this.batchRequest.getHttpRequestBody();\n  }\n\n  /**\n   * Get sub requests that are added into the batch request.\n   */\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.batchRequest.getSubRequests();\n  }\n\n  private async addSubRequestInternal(\n    subRequest: BatchSubRequest,\n    assembleSubRequestFunc: () => Promise<void>,\n  ): Promise<void> {\n    await Mutex.lock(this.batch);\n\n    try {\n      this.batchRequest.preAddSubRequest(subRequest);\n      await assembleSubRequestFunc();\n      this.batchRequest.postAddSubRequest(subRequest);\n    } finally {\n      await Mutex.unlock(this.batch);\n    }\n  }\n\n  private setBatchType(batchType: \"delete\" | \"setAccessTier\"): void {\n    if (!this.batchType) {\n      this.batchType = batchType;\n    }\n    if (this.batchType !== batchType) {\n      throw new RangeError(\n        `BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`,\n      );\n    }\n  }\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlob(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions,\n  ): Promise<void>;\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param options -\n   */\n  public async deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions): Promise<void>;\n\n  public async deleteBlob(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n        credentialOrOptions instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrOptions))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrOptions;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      options = credentialOrOptions as BlobDeleteOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchDeleteRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"delete\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete(\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    blobClient: BlobClient,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  public async setBlobAccessTier(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n    let tier: AccessTier;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n        credentialOrTier instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrTier))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrTier as\n        | StorageSharedKeyCredential\n        | AnonymousCredential\n        | TokenCredential;\n      tier = tierOrOptions as AccessTier;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      tier = credentialOrTier as AccessTier;\n      options = tierOrOptions as BlobSetTierOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchSetTierRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"setAccessTier\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).setAccessTier(\n              tier,\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n}\n\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n  private operationCount: number;\n  private body: string;\n  private subRequests: Map<number, BatchSubRequest>;\n  private readonly boundary: string;\n  private readonly subRequestPrefix: string;\n  private readonly multipartContentType: string;\n  private readonly batchRequestEnding: string;\n\n  constructor() {\n    this.operationCount = 0;\n    this.body = \"\";\n\n    const tempGuid = randomUUID();\n\n    // batch_{batchid}\n    this.boundary = `batch_${tempGuid}`;\n    // --batch_{batchid}\n    // Content-Type: application/http\n    // Content-Transfer-Encoding: binary\n    this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n    // multipart/mixed; boundary=batch_{batchid}\n    this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n    // --batch_{batchid}--\n    this.batchRequestEnding = `--${this.boundary}--`;\n\n    this.subRequests = new Map();\n  }\n\n  /**\n   * Create pipeline to assemble sub requests. The idea here is to use existing\n   * credential and serialization/deserialization components, with additional policies to\n   * filter unnecessary headers, assemble sub requests into request's body\n   * and intercept request from going to wire.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public createPipeline(\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  ): Pipeline {\n    const corePipeline = createEmptyPipeline();\n    corePipeline.addPolicy(\n      serializationPolicy({\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            xmlCharKey: \"#\",\n          },\n        },\n      }),\n      { phase: \"Serialize\" },\n    );\n    // Use batch header filter policy to exclude unnecessary headers\n    corePipeline.addPolicy(batchHeaderFilterPolicy());\n    // Use batch assemble policy to assemble request and intercept request from going to wire\n    corePipeline.addPolicy(batchRequestAssemblePolicy(this), { afterPhase: \"Sign\" });\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    const pipeline = new Pipeline([]);\n    // attach the v2 pipeline to this one\n    (pipeline as any)._credential = credential;\n    (pipeline as any)._corePipeline = corePipeline;\n\n    return pipeline;\n  }\n\n  public appendSubRequestToBody(request: PipelineRequest) {\n    // Start to assemble sub request\n    this.body += [\n      this.subRequestPrefix, // sub request constant prefix\n      `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`, // sub request's content ID\n      \"\", // empty line after sub request's content ID\n      `${request.method.toString()} ${getURLPathAndQuery(\n        request.url,\n      )} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}`, // sub request start line with method\n    ].join(HTTP_LINE_ENDING);\n\n    for (const [name, value] of request.headers) {\n      this.body += `${name}: ${value}${HTTP_LINE_ENDING}`;\n    }\n\n    this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n    // No body to assemble for current batch request support\n    // End to assemble sub request\n  }\n\n  public preAddSubRequest(subRequest: BatchSubRequest) {\n    if (this.operationCount >= BATCH_MAX_REQUEST) {\n      throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n    }\n\n    // Fast fail if url for sub request is invalid\n    const path = getURLPath(subRequest.url);\n    if (!path || path === \"\") {\n      throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n    }\n  }\n\n  public postAddSubRequest(subRequest: BatchSubRequest) {\n    this.subRequests.set(this.operationCount, subRequest);\n    this.operationCount++;\n  }\n\n  // Return the http request body with assembling the ending line to the sub request body.\n  public getHttpRequestBody(): string {\n    return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n  }\n\n  public getMultipartContentType(): string {\n    return this.multipartContentType;\n  }\n\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.subRequests;\n  }\n}\n\nfunction batchRequestAssemblePolicy(batchRequest: InnerBatchRequest): PipelinePolicy {\n  return {\n    name: \"batchRequestAssemblePolicy\",\n    async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n      batchRequest.appendSubRequestToBody(request);\n\n      return {\n        request,\n        status: 200,\n        headers: createHttpHeaders(),\n      };\n    },\n  };\n}\n\nfunction batchHeaderFilterPolicy(): PipelinePolicy {\n  return {\n    name: \"batchHeaderFilterPolicy\",\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let xMsHeaderName = \"\";\n\n      for (const [name] of request.headers) {\n        if (iEqual(name, HeaderConstants.X_MS_VERSION)) {\n          xMsHeaderName = name;\n        }\n      }\n\n      if (xMsHeaderName !== \"\") {\n        request.headers.delete(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n      }\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AccessTier,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchOptionalParamsModel,\n  ServiceSubmitBatchResponseModel,\n} from \"./generatedModels\";\nimport { ParsedBatchResponse } from \"./BatchResponse\";\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { Service, Container } from \"./generated/src/operationsInterfaces\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobDeleteOptions, BlobClient, BlobSetTierOptions } from \"./Clients\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport {\n  PipelineLike,\n  StoragePipelineOptions,\n  newPipeline,\n  isPipelineLike,\n  getCoreClientOptions,\n} from \"./Pipeline\";\nimport { assertResponse, getURLPath, WithResponse } from \"./utils/utils.common\";\n\n/**\n * Options to configure the Service - Submit Batch Optional Params.\n */\nexport interface BlobBatchSubmitBatchOptionalParams extends ServiceSubmitBatchOptionalParamsModel {}\n\n/**\n * Contains response data for blob batch operations.\n */\nexport declare type BlobBatchSubmitBatchResponse = WithResponse<\n  ParsedBatchResponse & ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchHeaders\n>;\n\n/**\n * Contains response data for the {@link deleteBlobs} operation.\n */\nexport declare type BlobBatchDeleteBlobsResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * Contains response data for the {@link setBlobsAccessTier} operation.\n */\nexport declare type BlobBatchSetBlobsAccessTierResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n  private serviceOrContainerContext: Service | Container;\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (!credentialOrPipeline) {\n      // no credential provided\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    }\n\n    const storageClientContext = new StorageContextClient(url, getCoreClientOptions(pipeline));\n\n    const path = getURLPath(url);\n    if (path && path !== \"/\") {\n      // Container scoped.\n      this.serviceOrContainerContext = storageClientContext.container;\n    } else {\n      this.serviceOrContainerContext = storageClientContext.service;\n    }\n  }\n\n  /**\n   * Creates a {@link BlobBatch}.\n   * A BlobBatch represents an aggregated set of operations on blobs.\n   */\n  public createBatch(): BlobBatch {\n    return new BlobBatch();\n  }\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operations will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resources to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlobs(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation(subrequest) will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs to delete.\n   * @param options -\n   */\n  public async deleteBlobs(\n    blobClients: BlobClient[],\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  public async deleteBlobs(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as TokenCredential, options);\n      } else {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as BlobDeleteOptions);\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resource to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs which should have a new tier set.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    blobClients: BlobClient[],\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  public async setBlobsAccessTier(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as TokenCredential,\n          tierOrOptions as AccessTier,\n          options,\n        );\n      } else {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as AccessTier,\n          tierOrOptions as BlobSetTierOptions,\n        );\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Submit batch request which consists of multiple subrequests.\n   *\n   * Get `blobBatchClient` and other details before running the snippets.\n   * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n   *\n   * Example usage:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.deleteBlob(urlInString0, credential0);\n   * await batchRequest.deleteBlob(urlInString1, credential1, {\n   *  deleteSnapshots: \"include\"\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * Example using a lease:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n   * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n   *  conditions: { leaseId: leaseId }\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @param batchRequest - A set of Delete or SetTier operations.\n   * @param options -\n   */\n  public async submitBatch(\n    batchRequest: BlobBatch,\n    options: BlobBatchSubmitBatchOptionalParams = {},\n  ): Promise<BlobBatchSubmitBatchResponse> {\n    if (!batchRequest || batchRequest.getSubRequests().size === 0) {\n      throw new RangeError(\"Batch request should contain one or more sub requests.\");\n    }\n\n    return tracingClient.withSpan(\n      \"BlobBatchClient-submitBatch\",\n      options,\n      async (updatedOptions) => {\n        const batchRequestBody = batchRequest.getHttpRequestBody();\n\n        // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.\n        const rawBatchResponse: ServiceSubmitBatchResponseModel = assertResponse(\n          await this.serviceOrContainerContext.submitBatch(\n            utf8ByteLength(batchRequestBody),\n            batchRequest.getMultiPartContentType(),\n            batchRequestBody,\n            {\n              ...updatedOptions,\n            },\n          ),\n        );\n\n        // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n        const batchResponseParser = new BatchResponseParser(\n          rawBatchResponse,\n          batchRequest.getSubRequests(),\n        );\n        const responseSummary = await batchResponseParser.parseBatchResponse();\n\n        const res: BlobBatchSubmitBatchResponse = {\n          _response: rawBatchResponse._response,\n          contentType: rawBatchResponse.contentType,\n          errorCode: rawBatchResponse.errorCode,\n          requestId: rawBatchResponse.requestId,\n          clientRequestId: rawBatchResponse.clientRequestId,\n          version: rawBatchResponse.version,\n          subResponses: responseSummary.subResponses,\n          subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n          subResponsesFailedCount: responseSummary.subResponsesFailedCount,\n        };\n\n        return res;\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  getDefaultProxySettings,\n  RequestBodyType as HttpRequestBody,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { Container } from \"./generated/src/operationsInterfaces\";\nimport {\n  BlobDeleteResponse,\n  BlobPrefix,\n  BlobProperties,\n  BlockBlobUploadResponse,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ContainerEncryptionScope,\n  ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsResponse,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyResponseModel,\n  ContainerGetAccountInfoResponse,\n  ContainerGetPropertiesResponse,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerSetAccessPolicyResponse,\n  ContainerSetMetadataResponse,\n  FilterBlobItem,\n  FilterBlobSegment,\n  FilterBlobSegmentModel,\n  LeaseAccessConditions,\n  ListBlobsFlatSegmentResponseModel,\n  ListBlobsHierarchySegmentResponseModel,\n  PublicAccessType,\n  SignedIdentifierModel,\n} from \"./generatedModels\";\nimport {\n  Metadata,\n  ObjectReplicationPolicy,\n  Tags,\n  ContainerRequestConditions,\n  ModifiedAccessConditions,\n} from \"./models\";\nimport { newPipeline, PipelineLike, isPipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { tracingClient } from \"./utils/tracing\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  BlobNameToString,\n  ConvertInternalResponseOfListBlobFlat,\n  ConvertInternalResponseOfListBlobHierarchy,\n  EscapePath,\n  extractConnectionStringParts,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  toTags,\n  truncatedISO8061Date,\n  WithResponse,\n} from \"./utils/utils.common\";\nimport { ContainerSASPermissions } from \"./sas/ContainerSASPermissions\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport {\n  AppendBlobClient,\n  BlobClient,\n  BlobDeleteOptions,\n  BlockBlobClient,\n  BlockBlobUploadOptions,\n  CommonGenerateSasUrlOptions,\n  PageBlobClient,\n} from \"./Clients\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport {\n  ContainerCreateHeaders,\n  ListBlobsIncludeItem,\n  ContainerGetPropertiesHeaders,\n  ContainerDeleteHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ListBlobsFlatSegmentResponse as ListBlobsFlatSegmentResponseInternal,\n  ListBlobsHierarchySegmentResponse as ListBlobsHierarchySegmentResponseInternal,\n  ContainerListBlobHierarchySegmentResponse as ContainerListBlobHierarchySegmentResponseModel,\n  ContainerGetAccountInfoHeaders,\n} from \"./generated/src\";\n\n/**\n * Options to configure {@link ContainerClient.create} operation.\n */\nexport interface ContainerCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   */\n  access?: PublicAccessType;\n  /**\n   * Container encryption scope info.\n   */\n  containerEncryptionScope?: ContainerEncryptionScope;\n}\n\n/**\n * Options to configure {@link ContainerClient.getProperties} operation.\n */\nexport interface ContainerGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.delete} operation.\n */\nexport interface ContainerDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting the container.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.exists} operation.\n */\nexport interface ContainerExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure {@link ContainerClient.setMetadata} operation.\n */\nexport interface ContainerSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.getAccessPolicy} operation.\n */\nexport interface ContainerGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * Optional. The date-time the policy is active\n     */\n    startsOn?: Date;\n    /**\n     * Optional. The date-time the policy expires\n     */\n    expiresOn?: Date;\n    /**\n     * The permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permissions?: string;\n  };\n}\n\n/**\n * Contains response data for the {@link ContainerClient.getAccessPolicy} operation.\n */\nexport declare type ContainerGetAccessPolicyResponse = WithResponse<\n  {\n    signedIdentifiers: SignedIdentifier[];\n  } & ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyHeaders,\n  SignedIdentifierModel\n>;\n\n/**\n * Options to configure {@link ContainerClient.setAccessPolicy} operation.\n */\nexport interface ContainerSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting the access policy.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n */\nexport interface ContainerAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n */\nexport interface ContainerReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n */\nexport interface ContainerRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n */\nexport interface ContainerBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n */\nexport interface ContainerChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.deleteBlob} operation.\n */\nexport interface ContainerDeleteBlobOptions extends BlobDeleteOptions {\n  /**\n   * An opaque DateTime value that, when present, specifies the version\n   * of the blob to delete. It's for service version 2019-10-10 and newer.\n   */\n  versionId?: string;\n}\n\n/**\n * Options to configure Container - List Segment operations.\n *\n * See:\n * - {@link ContainerClient.listSegments}\n * - {@link ContainerClient.listBlobFlatSegment}\n * - {@link ContainerClient.listBlobHierarchySegment}\n * - {@link ContainerClient.listHierarchySegments}\n * - {@link ContainerClient.listItemsByHierarchy}\n */\ninterface ContainerListBlobsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = WithResponse<\n  ListBlobsHierarchySegmentResponse & ContainerListBlobHierarchySegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ListBlobsHierarchySegmentResponseModel\n>;\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n  tags?: Tags;\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = WithResponse<\n  ListBlobsFlatSegmentResponse & ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ListBlobsFlatSegmentResponseModel\n>;\n\n/**\n * Options to configure Container - List Blobs operations.\n *\n * See:\n * - {@link ContainerClient.listBlobsFlat}\n * - {@link ContainerClient.listBlobsByHierarchy}\n */\nexport interface ContainerListBlobsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies whether metadata related to any current or previous Copy Blob operation should be included in the response.\n   */\n  includeCopy?: boolean;\n  /**\n   * Specifies whether soft deleted blobs should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether blob metadata be returned in the response.\n   */\n  includeMetadata?: boolean;\n  /**\n   * Specifies whether snapshots should be included in the enumeration. Snapshots are listed from oldest to newest in the response.\n   */\n  includeSnapshots?: boolean;\n  /**\n   * Specifies whether versions should be included in the enumeration. Versions are listed from oldest to newest in the response.\n   */\n  includeVersions?: boolean;\n  /**\n   * Specifies whether blobs for which blocks have been uploaded, but which have not been committed using Put Block List, be included in the response.\n   */\n  includeUncommitedBlobs?: boolean;\n  /**\n   * Specifies whether blob tags be returned in the response.\n   */\n  includeTags?: boolean;\n  /**\n   * Specifies whether deleted blob with versions be returned in the response.\n   */\n  includeDeletedWithVersions?: boolean;\n  /**\n   * Specifies whether blob immutability policy be returned in the response.\n   */\n  includeImmutabilityPolicy?: boolean;\n  /**\n   * Specifies whether blob legal hold be returned in the response.\n   */\n  includeLegalHold?: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.createIfNotExists} operation.\n */\nexport interface ContainerCreateIfNotExistsResponse extends ContainerCreateResponse {\n  /**\n   * Indicate whether the container is successfully created. Is false when the container is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.deleteIfExists} operation.\n */\nexport interface ContainerDeleteIfExistsResponse extends ContainerDeleteResponse {\n  /**\n   * Indicate whether the container is successfully deleted. Is false if the container does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ContainerClient.generateSasUrl} operation.\n */\nexport interface ContainerGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ContainerSASPermissions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.findBlobsByTagsSegment} operation.\n */\ninterface ContainerFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ContainerFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ContainerFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * Options to configure the {@link ContainerClient.getAccountInfo} operation.\n */\nexport interface ContainerGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   */\n  private containerContext: Container;\n\n  private _containerName: string;\n\n  /**\n   * The name of the container.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n  /**\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  constructor(connectionString: string, containerName: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(url, pipeline);\n    this._containerName = this.getContainerNameFromUrl();\n    this.containerContext = this.storageClientContext.container;\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options - Options to Container Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * const createContainerResponse = await containerClient.create();\n   * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n   * ```\n   */\n  public async create(options: ContainerCreateOptions = {}): Promise<ContainerCreateResponse> {\n    return tracingClient.withSpan(\"ContainerClient-create\", options, async (updatedOptions) => {\n      return assertResponse<ContainerCreateHeaders, ContainerCreateHeaders>(\n        await this.containerContext.create(updatedOptions),\n      );\n    });\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, it is not changed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ContainerCreateOptions = {},\n  ): Promise<ContainerCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.create(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          } else {\n            throw e;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Returns true if the Azure container resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing container might be deleted by other clients or\n   * applications. Vice versa new containers with the same name might be added by other clients or\n   * applications after this function completes.\n   *\n   * @param options -\n   */\n  public async exists(options: ContainerExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"ContainerClient-exists\", options, async (updatedOptions) => {\n      try {\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          return false;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Creates a {@link BlobClient}\n   *\n   * @param blobName - A blob name\n   * @returns A new BlobClient object for the given blob name.\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates an {@link AppendBlobClient}\n   *\n   * @param blobName - An append blob name\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link BlockBlobClient}\n   *\n   * @param blobName - A block blob name\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link PageBlobClient}\n   *\n   * @param blobName - A page blob name\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Options to Container Get Properties operation.\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {},\n  ): Promise<ContainerGetPropertiesResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetPropertiesHeaders, ContainerGetPropertiesHeaders>(\n          await this.containerContext.getProperties({\n            abortSignal: options.abortSignal,\n            ...options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\"ContainerClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<ContainerDeleteHeaders, ContainerDeleteHeaders>(\n        await this.containerContext.delete({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified container for deletion if it exists. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async deleteIfExists(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-deleteIfExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.delete(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response,\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerNotFound\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                            If no value provided the existing metadata will be removed.\n   * @param options - Options to Container Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {},\n  ): Promise<ContainerSetMetadataResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (options.conditions.ifUnmodifiedSince) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince must have their default values because they are ignored by the blob service\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-setMetadata\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerSetMetadataHeaders, ContainerSetMetadataHeaders>(\n          await this.containerContext.setMetadata({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param options - Options to Container Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {},\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerGetAccessPolicyResponseModel,\n          ContainerGetAccessPolicyHeaders,\n          SignedIdentifierModel\n        >(\n          await this.containerContext.getAccessPolicy({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const res: ContainerGetAccessPolicyResponse = {\n          _response: response._response,\n          blobPublicAccess: response.blobPublicAccess,\n          date: response.date,\n          etag: response.etag,\n          errorCode: response.errorCode,\n          lastModified: response.lastModified,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          signedIdentifiers: [],\n          version: response.version,\n        };\n\n        for (const identifier of response) {\n          let accessPolicy: any = undefined;\n          if (identifier.accessPolicy) {\n            accessPolicy = {\n              permissions: identifier.accessPolicy.permissions,\n            };\n\n            if (identifier.accessPolicy.expiresOn) {\n              accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n            }\n\n            if (identifier.accessPolicy.startsOn) {\n              accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n            }\n          }\n\n          res.signedIdentifiers.push({\n            accessPolicy,\n            id: identifier.id,\n          });\n        }\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param access - The level of public access to data in the container.\n   * @param containerAcl - Array of elements each having a unique Id and details of the access policy.\n   * @param options - Options to Container Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {},\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"ContainerClient-setAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const acl: SignedIdentifierModel[] = [];\n        for (const identifier of containerAcl || []) {\n          acl.push({\n            accessPolicy: {\n              expiresOn: identifier.accessPolicy.expiresOn\n                ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n                : \"\",\n              permissions: identifier.accessPolicy.permissions,\n              startsOn: identifier.accessPolicy.startsOn\n                ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n                : \"\",\n            },\n            id: identifier.id,\n          });\n        }\n\n        return assertResponse<ContainerSetAccessPolicyHeaders, ContainerSetAccessPolicyHeaders>(\n          await this.containerContext.setAccessPolicy({\n            abortSignal: options.abortSignal,\n            access,\n            containerAcl: acl,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the container.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the container.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n   * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n   * performance with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param blobName - Name of the block blob to create or update.\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to configure the Block Blob Upload operation.\n   * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }> {\n    return tracingClient.withSpan(\n      \"ContainerClient-uploadBlockBlob\",\n      options,\n      async (updatedOptions) => {\n        const blockBlobClient = this.getBlockBlobClient(blobName);\n        const response = await blockBlobClient.upload(body, contentLength, updatedOptions);\n        return {\n          blockBlobClient,\n          response,\n        };\n      },\n    );\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param blobName -\n   * @param options - Options to Blob Delete operation.\n   * @returns Block blob deletion response data.\n   */\n  public async deleteBlob(\n    blobName: string,\n    options: ContainerDeleteBlobOptions = {},\n  ): Promise<BlobDeleteResponse> {\n    return tracingClient.withSpan(\"ContainerClient-deleteBlob\", options, async (updatedOptions) => {\n      let blobClient = this.getBlobClient(blobName);\n      if (options.versionId) {\n        blobClient = blobClient.withVersion(options.versionId);\n      }\n      return blobClient.delete(updatedOptions);\n    });\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call listBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Flat Segment operation.\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobFlatSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ListBlobsFlatSegmentResponseInternal,\n          ContainerListBlobFlatSegmentHeaders,\n          ListBlobsFlatSegmentResponseInternal\n        >(\n          await this.containerContext.listBlobFlatSegment({\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobFlatSegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobFlat(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Hierarchy Segment operation.\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobHierarchySegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerListBlobHierarchySegmentResponseModel,\n          ContainerListBlobHierarchySegmentHeaders,\n          ListBlobsHierarchySegmentResponseInternal\n        >(\n          await this.containerContext.listBlobHierarchySegment(delimiter, {\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobHierarchySegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobHierarchy(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n            blobPrefixes: response.segment.blobPrefixes?.map((blobPrefixInternal) => {\n              const blobPrefix: BlobPrefix = {\n                ...blobPrefixInternal,\n                name: BlobNameToString(blobPrefixInternal.name),\n              };\n              return blobPrefix;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n        marker = listBlobsFlatSegmentResponse.continuationToken;\n        yield await listBlobsFlatSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link BlobItem} objects\n   *\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the containerClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n   * let i = 1;\n   * for await (const blob of containerClient.listBlobsFlat()) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = containerClient.listBlobsFlat();\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list blobs.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse> {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n          delimiter,\n          marker,\n          options,\n        );\n        marker = listBlobsHierarchySegmentResponse.continuationToken;\n        yield await listBlobsHierarchySegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem)> {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options,\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield {\n            kind: \"prefix\",\n            ...prefix,\n          };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page\");\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *   const segment = response.segment;\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a max page size:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *\n   * let i = 1;\n   * for await (const response of containerClient\n   *   .listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\" })\n   *   .byPage({ maxPageSize: 2 })) {\n   *   console.log(`Page ${i++}`);\n   *   const segment = response.segment;\n   *\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem),\n    ContainerListBlobHierarchySegmentResponse\n  > {\n    if (delimiter === \"\") {\n      throw new RangeError(\"delimiter should contain one or more characters\");\n    }\n\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in the container whose tags\n   * match a given search expression.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ContainerFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerFilterBlobsResponse,\n          ContainerFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.containerContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified container.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of containerClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = containerClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = containerClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ContainerFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ContainerFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ContainerGetAccountInfoOptions = {},\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetAccountInfoHeaders, ContainerGetAccountInfoHeaders>(\n          await this.containerContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  private getContainerNameFromUrl(): string {\n    let containerName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n      // http://localhost:10001/devstoreaccount1/containername\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername\".\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n        // .getPath() -> /devstoreaccount1/containername\n        containerName = parsedUrl.pathname.split(\"/\")[2];\n      } else {\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      }\n\n      // decode the encoded containerName - to get all the special characters that might be present in it\n      containerName = decodeURIComponent(containerName);\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return containerName;\n    } catch (error: any) {\n      throw new Error(\"Unable to extract containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ContainerGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this container.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"x\":\n          accountSASPermissions.deleteVersion = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        case \"t\":\n          accountSASPermissions.tag = true;\n          break;\n        case \"f\":\n          accountSASPermissions.filter = true;\n          break;\n        case \"i\":\n          accountSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          accountSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: AccountSASPermissionsLike): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n    if (permissionLike.read) {\n      accountSASPermissions.read = true;\n    }\n    if (permissionLike.write) {\n      accountSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      accountSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      accountSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.filter) {\n      accountSASPermissions.filter = true;\n    }\n    if (permissionLike.tag) {\n      accountSASPermissions.tag = true;\n    }\n    if (permissionLike.list) {\n      accountSASPermissions.list = true;\n    }\n    if (permissionLike.add) {\n      accountSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      accountSASPermissions.create = true;\n    }\n    if (permissionLike.update) {\n      accountSASPermissions.update = true;\n    }\n    if (permissionLike.process) {\n      accountSASPermissions.process = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      accountSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      accountSASPermissions.permanentDelete = true;\n    }\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Permission to filter blobs.\n   */\n  public filter: boolean = false;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.filter) {\n      permissions.push(\"f\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSASPermissionsLike {\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  read?: boolean;\n\n  /**\n   * Permission to write resources granted.\n   */\n  write?: boolean;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  list?: boolean;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  add?: boolean;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  create?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  process?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Permission to filter blobs.\n   */\n  filter?: boolean;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param accountSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'x' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'y' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 't' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.filter &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 'f' permission.\");\n  }\n\n  if (accountSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString(),\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes,\n  ).toString();\n\n  let stringToSign: string;\n\n  if (version >= \"2020-12-06\") {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      accountSASSignatureValues.encryptionScope ? accountSASSignatureValues.encryptionScope : \"\",\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  } else {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  }\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions.toString(),\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    accountSASSignatureValues.encryptionScope,\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  ServiceGetUserDelegationKeyHeaders,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ServiceGetPropertiesResponse,\n  BlobServiceProperties,\n  ServiceSetPropertiesResponse,\n  ServiceGetStatisticsResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceListContainersSegmentResponse,\n  ContainerItem,\n  UserDelegationKeyModel,\n  ContainerUndeleteResponse,\n  FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  ContainerRenameResponse,\n  LeaseAccessConditions,\n  FilterBlobSegment,\n  FilterBlobItem,\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetStatisticsResponseInternal,\n  ServiceListContainersSegmentResponseInternal,\n} from \"./generatedModels\";\nimport { Service } from \"./generated/src/operationsInterfaces\";\nimport { newPipeline, StoragePipelineOptions, PipelineLike, isPipelineLike } from \"./Pipeline\";\nimport {\n  ContainerClient,\n  ContainerCreateOptions,\n  ContainerDeleteMethodOptions,\n} from \"./ContainerClient\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  extractConnectionStringParts,\n  toTags,\n  WithResponse,\n} from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { truncatedISO8061Date, assertResponse } from \"./utils/utils.common\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { AccountSASPermissions } from \"./sas/AccountSASPermissions\";\nimport { SASProtocol } from \"./sas/SASQueryParameters\";\nimport { SasIPRange } from \"./sas/SasIPRange\";\nimport { generateAccountSASQueryParameters } from \"./sas/AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./sas/AccountSASServices\";\nimport {\n  ContainerRenameHeaders,\n  ContainerRestoreHeaders,\n  ListContainersIncludeType,\n  ServiceFilterBlobsResponse,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyResponse as ServiceGetUserDelegationKeyResponseModel,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n} from \"./generated/src\";\n\n/**\n * Options to configure the {@link BlobServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getAccountInfo} operation.\n */\nexport interface ServiceGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getStatistics} operation.\n */\nexport interface ServiceGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the Service - Get User Delegation Key.\n */\nexport interface ServiceGetUserDelegationKeyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainerSegment} operation.\n */\ninterface ServiceListContainersSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType | ListContainersIncludeType[];\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainers} operation.\n */\nexport interface ServiceListContainersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies whether the container's metadata\n   *                                   should be returned as part of the response body.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies whether soft deleted containers should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether system containers should be included in the response.\n   */\n  includeSystem?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTagsSegment} operation.\n */\ninterface ServiceFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ServiceFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ServiceFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ServiceFilterBlobsHeaders,\n  ServiceFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * A user delegation key.\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   */\n  signedObjectId: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   */\n  signedTenantId: string;\n  /**\n   * The date-time the key is active.\n   */\n  signedStartsOn: Date;\n  /**\n   * The date-time the key expires.\n   */\n  signedExpiresOn: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   */\n  value: string;\n}\n\n/**\n * Contains response data for the {@link getUserDelegationKey} operation.\n */\nexport declare type ServiceGetUserDelegationKeyResponse = WithResponse<\n  UserDelegationKey & ServiceGetUserDelegationKeyHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  UserDelegationKeyModel\n>;\n\n/**\n * Options to configure {@link BlobServiceClient.undeleteContainer} operation.\n */\nexport interface ServiceUndeleteContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the new name of the restored container.\n   * Will use its original name if this is not specified.\n   * @deprecated Restore container to a different name is not supported by service anymore.\n   */\n  destinationContainerName?: string;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.renameContainer} operation.\n */\nexport interface ServiceRenameContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Condition to meet for the source container.\n   */\n  sourceCondition?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ): BlobServiceClient {\n    options = options || {};\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey,\n        );\n\n        if (!options.proxyOptions) {\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n        }\n\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new BlobServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\",\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   *\n   * Example using DefaultAzureCredential from `@azure/identity`:\n   *\n   * ```js\n   * const account = \"<storage account name>\";\n   *\n   * const defaultAzureCredential = new DefaultAzureCredential();\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   defaultAzureCredential\n   * );\n   * ```\n   *\n   * Example using an account name/key:\n   *\n   * ```js\n   * const account = \"<storage account name>\"\n   * const sharedKeyCredential = new StorageSharedKeyCredential(account, \"<account key>\");\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   sharedKeyCredential\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      (isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n      credentialOrPipeline instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = this.storageClientContext.service;\n  }\n\n  /**\n   * Creates a {@link ContainerClient} object\n   *\n   * @param containerName - A container name\n   * @returns A new ContainerClient object for the given container name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * ```\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Create a Blob container. @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param containerName - Name of the container to create.\n   * @param options - Options to configure Container Create operation.\n   * @returns Container creation response and the corresponding container client.\n   */\n  public async createContainer(\n    containerName: string,\n    options: ContainerCreateOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: ContainerCreateResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-createContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        const containerCreateResponse = await containerClient.create(updatedOptions);\n        return {\n          containerClient,\n          containerCreateResponse,\n        };\n      },\n    );\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param containerName - Name of the container to delete.\n   * @param options - Options to configure Container Delete operation.\n   * @returns Container deletion response.\n   */\n  public async deleteContainer(\n    containerName: string,\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-deleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        return containerClient.delete(updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * Restore a previously deleted Blob container.\n   * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n   *\n   * @param deletedContainerName - Name of the previously deleted container.\n   * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.\n   * @param options - Options to configure Container Restore operation.\n   * @returns Container deletion response.\n   */\n  public async undeleteContainer(\n    deletedContainerName: string,\n    deletedContainerVersion: string,\n    options: ServiceUndeleteContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerUndeleteResponse: ContainerUndeleteResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-undeleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(\n          options.destinationContainerName || deletedContainerName,\n        );\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerUndeleteResponse = assertResponse<\n          ContainerRestoreHeaders,\n          ContainerRestoreHeaders\n        >(\n          await containerContext.restore({\n            deletedContainerName,\n            deletedContainerVersion,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return { containerClient, containerUndeleteResponse };\n      },\n    );\n  }\n\n  /**\n   * Rename an existing Blob Container.\n   *\n   * @param sourceContainerName - The name of the source container.\n   * @param destinationContainerName - The new name of the container.\n   * @param options - Options to configure Container Rename operation.\n   */\n  /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n  // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.\n  private async renameContainer(\n    sourceContainerName: string,\n    destinationContainerName: string,\n    options: ServiceRenameContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerRenameResponse: ContainerRenameResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-renameContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(destinationContainerName);\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerRenameResponse = assertResponse<\n          ContainerRenameHeaders,\n          ContainerRenameHeaders\n        >(\n          await containerContext.rename(sourceContainerName, {\n            ...updatedOptions,\n            sourceLeaseId: options.sourceCondition?.leaseId,\n          }),\n        );\n        return { containerClient, containerRenameResponse };\n      },\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * @param options - Options to the Service Get Properties operation.\n   * @returns Response data for the Service Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {},\n  ): Promise<ServiceGetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetPropertiesResponseInternal, ServiceGetPropertiesHeaders>(\n          await this.serviceContext.getProperties({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties\n   *\n   * @param properties -\n   * @param options - Options to the Service Set Properties operation.\n   * @returns Response data for the Service Set Properties operation.\n   */\n  public async setProperties(\n    properties: BlobServiceProperties,\n    options: ServiceSetPropertiesOptions = {},\n  ): Promise<ServiceSetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-setProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceSetPropertiesHeaders, ServiceSetPropertiesHeaders>(\n          await this.serviceContext.setProperties(properties, {\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats\n   *\n   * @param options - Options to the Service Get Statistics operation.\n   * @returns Response data for the Service Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {},\n  ): Promise<ServiceGetStatisticsResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getStatistics\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetStatisticsResponseInternal, ServiceGetStatisticsHeaders>(\n          await this.serviceContext.getStatistics({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {},\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetAccountInfoHeaders, ServiceGetAccountInfoHeaders>(\n          await this.serviceContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to the Service List Container Segment operation.\n   * @returns Response data for the Service List Container Segment operation.\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-listContainersSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          ServiceListContainersSegmentResponseInternal,\n          ServiceListContainersSegmentHeaders\n        >(\n          await this.serviceContext.listContainersSegment({\n            abortSignal: options.abortSignal,\n            marker,\n            ...options,\n            include: typeof options.include === \"string\" ? [options.include] : options.include,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags\n   * match a given search expression. Filter blobs searches across all containers within a\n   * storage account but can be scoped within the expression to a single container.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ServiceFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceFilterBlobsResponse,\n          ServiceFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.serviceContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ServiceFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ServiceFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ServiceFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to list containers operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n        listContainersSegmentResponse.containerItems =\n          listContainersSegmentResponse.containerItems || [];\n        marker = listContainersSegmentResponse.continuationToken;\n        yield await listContainersSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @param options - Options to list containers operation.\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const container of blobServiceClient.listContainers()) {\n   *   console.log(`Container ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.listContainers();\n   * let containerItem = await iter.next();\n   * while (!containerItem.done) {\n   *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *   containerItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *      console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list containers.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {},\n  ): PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListContainersIncludeType[] = [];\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSystem) {\n      include.push(\"system\");\n    }\n\n    // AsyncIterableIterator to iterate over containers\n    const listSegmentOptions: ServiceListContainersSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include } : {}),\n    };\n\n    const iter = this.listItems(listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {},\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getUserDelegationKey\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceGetUserDelegationKeyResponseModel,\n          ServiceGetUserDelegationKeyHeaders,\n          UserDelegationKeyModel\n        >(\n          await this.serviceContext.getUserDelegationKey(\n            {\n              startsOn: truncatedISO8061Date(startsOn, false),\n              expiresOn: truncatedISO8061Date(expiresOn, false),\n            },\n            {\n              abortSignal: options.abortSignal,\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n\n        const userDelegationKey = {\n          signedObjectId: response.signedObjectId,\n          signedTenantId: response.signedTenantId,\n          signedStartsOn: new Date(response.signedStartsOn),\n          signedExpiresOn: new Date(response.signedExpiresOn),\n          signedService: response.signedService,\n          signedVersion: response.signedVersion,\n          value: response.value,\n        };\n\n        const res: ServiceGetUserDelegationKeyResponse = {\n          _response: response._response,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          version: response.version,\n          date: response.date,\n          errorCode: response.errorCode,\n          ...userDelegationKey,\n        };\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this service.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {},\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential,\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Tags } from \".\";\nimport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDownloadResponse as BlobDownloadResponseInternal,\n  BlobDownloadHeaders,\n  BlobGetPropertiesHeaders,\n  BlobPropertiesInternal as BlobProperties,\n  BlobGetTagsHeaders,\n  BlobTags,\n  BlobQueryResponse as BlobQueryResponseInternal,\n  BlobQueryHeaders,\n  BlobSetHttpHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListResponse as BlockBlobGetBlockListResponseInternal,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerRenameHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerRestoreHeaders as ContainerUndeleteHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffResponse as PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponse as PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesResponse as ServiceGetPropertiesResponseInternal,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsResponse as ServiceGetStatisticsResponseInternal,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentResponse as ServiceListContainersSegmentResponseInternal,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  ServiceSubmitBatchResponse as ServiceSubmitBatchResponseInternal,\n  ServiceSubmitBatchHeaders,\n  SignedIdentifier as SignedIdentifierModel,\n  UserDelegationKey as UserDelegationKeyModel,\n  PageRange,\n  BlobGetAccountInfoHeaders,\n  ContainerGetAccountInfoHeaders,\n} from \"./generated/src/models\";\nimport {\n  WithResponse,\n  ResponseWithBody,\n  ResponseLike,\n  ResponseWithHeaders,\n  HttpResponse,\n} from \"./utils/utils.common\";\n\n/** Contains response data for the appendBlockFromUrl operation. */\nexport type AppendBlobAppendBlockFromUrlResponse = WithResponse<\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockFromUrlHeaders\n>;\n/** Contains response data for the appendBlock operation. */\nexport type AppendBlobAppendBlockResponse = WithResponse<\n  AppendBlobAppendBlockHeaders,\n  AppendBlobAppendBlockHeaders\n>;\n/** Contains response data for the create operation. */\nexport type AppendBlobCreateResponse = WithResponse<\n  AppendBlobCreateHeaders,\n  AppendBlobCreateHeaders\n>;\n/** Contains response data for the abortCopyFromURL operation. */\nexport type BlobAbortCopyFromURLResponse = WithResponse<\n  BlobAbortCopyFromURLHeaders,\n  BlobAbortCopyFromURLHeaders\n>;\n/** Contains response data for the copyFromURL operation. */\nexport type BlobCopyFromURLResponse = WithResponse<BlobCopyFromURLHeaders, BlobCopyFromURLHeaders>;\n/** Contains response data for the createSnapshot operation. */\nexport type BlobCreateSnapshotResponse = WithResponse<\n  BlobCreateSnapshotHeaders,\n  BlobCreateSnapshotHeaders\n>;\n/** Contains response data for the delete operation. */\nexport type BlobDeleteResponse = WithResponse<BlobDeleteHeaders, BlobDeleteHeaders>;\n/** Contains response data for the deleteImmutabilityPolicy operation. */\nexport type BlobDeleteImmutabilityPolicyResponse = WithResponse<\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDeleteImmutabilityPolicyHeaders\n>;\n/** Contains response data for the download operation. */\nexport type BlobDownloadResponseModel = WithResponse<\n  BlobDownloadResponseInternal,\n  BlobDownloadHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type BlobGetPropertiesResponseModel = WithResponse<\n  BlobGetPropertiesHeaders,\n  BlobGetPropertiesHeaders\n>;\n/** Contains response data for the getAccountInfo operation. */\nexport type BlobGetAccountInfoResponse = WithResponse<\n  BlobGetAccountInfoHeaders,\n  BlobGetAccountInfoHeaders\n>;\n/** Contains response data for the query operation. */\nexport type BlobQueryResponseModel = WithResponse<BlobQueryResponseInternal, BlobQueryHeaders>;\n/** Contains response data for the setHttpHeaders operation. */\nexport type BlobSetHTTPHeadersResponse = WithResponse<\n  BlobSetHttpHeadersHeaders,\n  BlobSetHttpHeadersHeaders\n>;\n/** Contains response data for the setImmutabilityPolicy operation. */\nexport type BlobSetImmutabilityPolicyResponse = WithResponse<\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetImmutabilityPolicyHeaders\n>;\n/** Contains response data for the setLegalHold operation. */\nexport type BlobSetLegalHoldResponse = WithResponse<\n  BlobSetLegalHoldHeaders,\n  BlobSetLegalHoldHeaders\n>;\n/** Contains response data for the setMetadata operation. */\nexport type BlobSetMetadataResponse = WithResponse<BlobSetMetadataHeaders, BlobSetMetadataHeaders>;\n/** Contains response data for the setTags operation. */\nexport type BlobSetTagsResponse = WithResponse<BlobSetTagsHeaders, BlobSetTagsHeaders>;\n/** Contains response data for the setTier operation. */\nexport type BlobSetTierResponse = WithResponse<BlobSetTierHeaders, BlobSetTierHeaders>;\n/** Contains response data for the startCopyFromURL operation. */\nexport type BlobStartCopyFromURLResponse = WithResponse<\n  BlobStartCopyFromURLHeaders,\n  BlobStartCopyFromURLHeaders\n>;\n/** Contains response data for the undelete operation. */\nexport type BlobUndeleteResponse = WithResponse<BlobUndeleteHeaders, BlobUndeleteHeaders>;\n/** Contains response data for the commitBlockList operation. */\nexport type BlockBlobCommitBlockListResponse = WithResponse<\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobCommitBlockListHeaders\n>;\n/** Contains response data for the getBlockList operation. */\nexport type BlockBlobGetBlockListResponse = WithResponse<\n  BlockBlobGetBlockListResponseInternal,\n  BlockBlobGetBlockListHeaders\n>;\n/** Contains response data for the putBlobFromUrl operation. */\nexport type BlockBlobPutBlobFromUrlResponse = WithResponse<\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobPutBlobFromUrlHeaders\n>;\n/** Contains response data for the stageBlockFromURL operation. */\nexport type BlockBlobStageBlockFromURLResponse = WithResponse<\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockFromURLHeaders\n>;\n/** Contains response data for the stageBlock operation. */\nexport type BlockBlobStageBlockResponse = WithResponse<\n  BlockBlobStageBlockHeaders,\n  BlockBlobStageBlockHeaders\n>;\n/** Contains response data for the upload operation. */\nexport type BlockBlobUploadResponse = WithResponse<BlockBlobUploadHeaders, BlockBlobUploadHeaders>;\n/** Contains response data for the create operation. */\nexport type ContainerCreateResponse = WithResponse<ContainerCreateHeaders, ContainerCreateHeaders>;\n/** Contains response data for the delete operation. */\nexport type ContainerDeleteResponse = WithResponse<ContainerDeleteHeaders, ContainerDeleteHeaders>;\n/** Contains response data for the getAccountInfo operation. */\nexport type ContainerGetAccountInfoResponse = WithResponse<\n  ContainerGetAccountInfoHeaders,\n  ContainerGetAccountInfoHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type ContainerGetPropertiesResponse = WithResponse<\n  ContainerGetPropertiesHeaders,\n  ContainerGetPropertiesHeaders\n>;\n/** Contains response data for the rename operation. */\nexport type ContainerRenameResponse = WithResponse<ContainerRenameHeaders, ContainerRenameHeaders>;\n/** Contains response data for the setAccessPolicy operation. */\nexport type ContainerSetAccessPolicyResponse = WithResponse<\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetAccessPolicyHeaders\n>;\n/** Contains response data for the setMetadata operation. */\nexport type ContainerSetMetadataResponse = WithResponse<\n  ContainerSetMetadataHeaders,\n  ContainerSetMetadataHeaders\n>;\n/** Contains response data for the restore operation. */\nexport type ContainerUndeleteResponse = WithResponse<\n  ContainerUndeleteHeaders,\n  ContainerUndeleteHeaders\n>;\n/** Contains response data for the clearPages operation. */\nexport type PageBlobClearPagesResponse = WithResponse<\n  PageBlobClearPagesHeaders,\n  PageBlobClearPagesHeaders\n>;\n/** Contains response data for the copyIncremental operation. */\nexport type PageBlobCopyIncrementalResponse = WithResponse<\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCopyIncrementalHeaders\n>;\n/** Contains response data for the create operation. */\nexport type PageBlobCreateResponse = WithResponse<PageBlobCreateHeaders, PageBlobCreateHeaders>;\n/** Contains response data for the getPageRangesDiff operation. */\nexport type PageBlobGetPageRangesDiffResponseModel = WithResponse<\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  PageList\n>;\n/** Contains response data for the getPageRanges operation. */\nexport type PageBlobGetPageRangesResponseModel = WithResponse<\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageList\n>;\n/** Contains response data for the resize operation. */\nexport type PageBlobResizeResponse = WithResponse<PageBlobResizeHeaders, PageBlobResizeHeaders>;\n/** Contains response data for the updateSequenceNumber operation. */\nexport type PageBlobUpdateSequenceNumberResponse = WithResponse<\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUpdateSequenceNumberHeaders\n>;\n/** Contains response data for the uploadPagesFromURL operation. */\nexport type PageBlobUploadPagesFromURLResponse = WithResponse<\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesFromURLHeaders\n>;\n/** Contains response data for the uploadPages operation. */\nexport type PageBlobUploadPagesResponse = WithResponse<\n  PageBlobUploadPagesHeaders,\n  PageBlobUploadPagesHeaders\n>;\n/** Contains response data for the getAccountInfo operation. */\nexport type ServiceGetAccountInfoResponse = WithResponse<\n  ServiceGetAccountInfoHeaders,\n  ServiceGetAccountInfoHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type ServiceGetPropertiesResponse = WithResponse<\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetPropertiesHeaders\n>;\n/** Contains response data for the getStatistics operation. */\nexport type ServiceGetStatisticsResponse = WithResponse<\n  ServiceGetStatisticsResponseInternal,\n  ServiceGetStatisticsHeaders\n>;\n/** Contains response data for the listContainersSegment operation. */\nexport type ServiceListContainersSegmentResponse = WithResponse<\n  ServiceListContainersSegmentResponseInternal,\n  ServiceListContainersSegmentHeaders\n>;\n/** Contains response data for the setProperties operation. */\nexport type ServiceSetPropertiesResponse = WithResponse<\n  ServiceSetPropertiesHeaders,\n  ServiceSetPropertiesHeaders\n>;\n/** Contains response data for the submitBatch operation. */\nexport type ServiceSubmitBatchResponseModel = WithResponse<\n  ServiceSubmitBatchResponseInternal,\n  ServiceSubmitBatchHeaders\n>;\nexport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDownloadHeaders,\n  BlobDownloadResponseInternal,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesHeaders,\n  BlobGetTagsHeaders,\n  BlobTags,\n  BlobQueryHeaders,\n  BlobQueryResponseInternal,\n  BlobSetHttpHeadersHeaders as BlobSetHTTPHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobGetBlockListResponseInternal,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccountInfoHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerRenameHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerUndeleteHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList as PageListInternal,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetStatisticsHeaders,\n  ServiceGetStatisticsResponseInternal,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentHeaders,\n  ServiceListContainersSegmentResponseInternal,\n  ServiceSetPropertiesHeaders,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchResponseInternal,\n  SignedIdentifierModel,\n  UserDelegationKeyModel,\n  WithResponse,\n  ResponseWithBody,\n  ResponseLike,\n  HttpResponse,\n  ResponseWithHeaders,\n  PageRange,\n};\n\nexport {\n  AccessPolicy,\n  AccessTier,\n  AccountKind,\n  ArchiveStatus,\n  BlobImmutabilityPolicyMode,\n  BlobCopySourceTags,\n  BlobDownloadOptionalParams,\n  BlobPropertiesInternal as BlobProperties,\n  BlobHttpHeaders as BlobHTTPHeaders,\n  BlobType,\n  Block,\n  BlockList,\n  BlockListType,\n  BlobServiceProperties,\n  BlobServiceStatistics,\n  BlobTag,\n  ContainerFilterBlobsResponse,\n  ContainerFilterBlobsHeaders,\n  ContainerGetAccessPolicyResponse as ContainerGetAccessPolicyResponseModel,\n  ContainerBreakLeaseOptionalParams,\n  ContainerProperties,\n  CopyStatusType,\n  CorsRule,\n  ClearRange,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  EncryptionAlgorithmType,\n  GeoReplication,\n  GeoReplicationStatusType,\n  LeaseAccessConditions,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  ListContainersSegmentResponse,\n  FilterBlobItem as FilterBlobItemModel,\n  FilterBlobSegment as FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  Logging,\n  Metrics,\n  ModifiedAccessConditions as ModifiedAccessConditionsModel,\n  PublicAccessType,\n  SequenceNumberActionType,\n  RehydratePriority,\n  RetentionPolicy,\n  AppendPositionAccessConditions,\n  SequenceNumberAccessConditions,\n  SkuName,\n  StaticWebsite,\n  ContainerItem,\n  ServiceSubmitBatchOptionalParams as ServiceSubmitBatchOptionalParamsModel,\n  ContainerEncryptionScope,\n  SyncCopyStatusType,\n} from \"./generated/src/models\";\n\n// Following definitions are to avoid breaking change.\nexport interface BlobPrefix {\n  name: string;\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsFlatSegmentResponseModel {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegmentModel;\n  continuationToken?: string;\n}\n\nexport interface BlobFlatListSegmentModel {\n  blobItems: BlobItemInternal[];\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsHierarchySegmentResponseModel {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegmentModel;\n  continuationToken?: string;\n}\n\nexport interface BlobHierarchyListSegmentModel {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItemInternal[];\n}\n\n/** An Azure Storage blob */\nexport interface BlobItemInternal {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  /** Properties of a blob */\n  properties: BlobProperties;\n  /** Dictionary of <string> */\n  metadata?: { [propertyName: string]: string };\n  /** Blob tags */\n  blobTags?: BlobTags;\n  /** Dictionary of <string> */\n  objectReplicationMetadata?: { [propertyName: string]: string };\n  /** Inactive root blobs which have any versions would have such tag with value true. */\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * Blob info from a {@link BlobServiceClient.findBlobsByTags}\n */\nexport interface FilterBlobItem {\n  /**\n   * Blob Name.\n   */\n  name: string;\n\n  /**\n   * Container Name.\n   */\n  containerName: string;\n\n  /**\n   * Blob Tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Tag value.\n   *\n   * @deprecated The service no longer returns this value. Use {@link tags} to fetch all matching Blob Tags.\n   */\n  tagValue: string;\n}\n\n/**\n * Segment response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface FilterBlobSegment {\n  serviceEndpoint: string;\n  where: string;\n  blobs: FilterBlobItem[];\n  continuationToken?: string;\n}\n\nexport interface PageRangeInfo {\n  start: number;\n  end: number;\n  isClear: boolean;\n}\n\n/** Known values of {@link EncryptionAlgorithmType} that the service accepts. */\nexport enum KnownEncryptionAlgorithmType {\n  AES256 = \"AES256\",\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RestError } from \"@azure/core-rest-pipeline\";\n\nexport * from \"./BlobServiceClient\";\nexport * from \"./Clients\";\nexport * from \"./ContainerClient\";\nexport * from \"./BlobLeaseClient\";\nexport * from \"./BlobBatch\";\nexport * from \"./BlobBatchClient\";\nexport * from \"./BatchResponse\";\nexport * from \"./StorageBrowserPolicyFactory\";\nexport * from \"./credentials/AnonymousCredential\";\nexport * from \"./credentials/Credential\";\nexport { SasIPRange } from \"./sas/SasIPRange\";\nexport { Range } from \"./Range\";\nexport {\n  BlockBlobTier,\n  BlobImmutabilityPolicy,\n  PremiumPageBlobTier,\n  Tags,\n  TagConditions,\n  ContainerRequestConditions,\n  HttpAuthorization,\n  ModificationConditions,\n  MatchConditions,\n} from \"./models\";\nexport {\n  Pipeline,\n  PipelineLike,\n  PipelineOptions,\n  isPipelineLike,\n  newPipeline,\n  StoragePipelineOptions,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n  HttpOperationResponse,\n  HttpHeaders,\n  HttpRequestBody,\n  IHttpClient,\n  StorageOAuthScopes,\n  ServiceClientOptions,\n} from \"./Pipeline\";\nexport { BaseRequestPolicy } from \"./policies/RequestPolicy\";\nexport * from \"./policies/AnonymousCredentialPolicy\";\nexport * from \"./policies/CredentialPolicy\";\nexport * from \"./StorageRetryPolicyFactory\";\nexport { CommonOptions } from \"./StorageClient\";\nexport * from \"./generatedModels\";\nexport { RestError };\nexport {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n  PageList,\n} from \"./PageBlobRangeResponse\";\nexport { logger } from \"./log\";\n","const { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nconst fileNameID = document.getElementsByName('fileName');\n\n// const selectContainer = document.getElementById('select-container');\n// const folderNameID = document.getElementsByName('folderName');\n// const createFolderID = document.getElementsById('createFolder');\n// let filesId = document.getElementById('files');\n\nlet containerNames = [];\nlet folderList = [];\nlet fileList = [];\nlet selectedFolder = '';\nlet selectedFile = '';\nlet containerIndex = 0;\n\n// Create a new BlobServiceClient\nconst blobSasUrl = \"https://masudastorage.blob.core.windows.net/?sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2024-08-24T15:57:57Z&st=2024-07-25T07:57:57Z&spr=https&sig=YREqciDdoSS1UlQG2%2FHlAXSO%2BgOHFOGNoNxXVhF6CMg%3D\";\nconst blobServiceClient = new BlobServiceClient(blobSasUrl);\n\nmain(blobServiceClient);\n\nasync function reDrawView() {\n    await setContainer();\n    await folderNames();\n    await fileNames();\n}\n    \nasync function main(blobServiceClient, containerNamePrefix) {\n    console.log(\"listContainers StorageName: masudastorage\");\n    const options = {\n        includeDeleted: false,\n        includeMetadata: true,\n        includeSystem: false,\n        prefix: containerNamePrefix\n    }\n    for await (const containerItem of blobServiceClient.listContainers(options)) {\n        var select = document.getElementById('select-container');\n        var option = document.createElement('option');\n        var text = document.createTextNode(containerItem.name);\n        option.appendChild(text);\n        containerNames.push(containerItem.name);\n        select.appendChild(option);\n    }\n    // console.log(\"containerNames:\", containerNames);\n    var select = document.getElementById('select-container');\n    select.addEventListener(\"change\", selectContainerFunc);\n\n    var select = document.getElementById('createButton');\n    select.addEventListener(\"click\", createFolderFunc);\n\n    var select = document.getElementById('loadFile');\n    select.addEventListener(\"click\", loadFileFunc);\n\n    var select = document.getElementById('deleteFile');\n    select.addEventListener(\"click\", deleteFileFunc);\n\n    var select = document.getElementById('uploadFile');\n    select.addEventListener(\"change\", uploadFileFunc);\n\n    await reDrawView();\n}\n\nconst uploadFileFunc = async () => {\n    try {\n        console.log(\"Uploading file\");\n        var select = document.getElementById('uploadFile');\n        console.log(\"  fileList:\", select.files);\n        console.log(\"  selectedFolder:\", selectedFolder);\n\n       // const checkFolder = selectedFolder + '/';\n        const promises = [];\n        let filename;\n        for (const file of select.files) {\n            if (selectedFolder === '/') {\n                filename = file.name;\n            } else {\n                filename = selectedFolder + '/' + file.name;\n            }\n            console.log(\"  filename:\", filename);\n\n            const containerClient = blobServiceClient.getContainerClient(containerNames[containerIndex]);\n            const blockBlobClient = containerClient.getBlockBlobClient(filename);\n            promises.push(blockBlobClient.uploadData(file));\n        }\n        await Promise.all(promises);\n        console.log(\"  Done.\");\n\n        await reDrawView();\n    }\n    catch (error) {\n        console.log(error.message);\n    }\n}\n\nasync function createFolderFunc() {\n    console.log(\"createFolder\");\n    var select = document.getElementById('newFolder');\n    // console.log(\"  createFolder:\", select.value);\n\n    if (select.value === \"\") {\n        console.log(\"  input folder name!:\");\n    } else {\n        const content = \"Dummy data to hold the folder\";\n        const blobName = select.value + \"/DummyData\";\n        selectedFolder = select.value;\n    \n        const containerClient = blobServiceClient.getContainerClient(containerNames[containerIndex]);\n        // console.log(\"setContainer containerName:\", containerNames[containerIndex]);\n    \n        const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n        const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n        console.log(`  Upload block blob ${blobName} successfully`);    \n    }\n\n    await reDrawView();\n}\n\nasync function selectContainerFunc() {\n    var select = document.getElementById('select-container');\n    // console.log(select.selectedIndex);\n    containerIndex = select.selectedIndex;\n\n    await reDrawView();\n}\n\nasync function loadFileFunc() {\n    console.log(\"loadFile\");\n\n    const containerClient = blobServiceClient.getContainerClient(containerNames[containerIndex]);\n    for (var i =0; i <  fileNameID.length; i++) {\n        if (fileNameID[i].checked === true) {\n            selectedFile = fileNameID[i].value;\n        }\n    }\n\n    let blobName;\n    if (selectedFolder === '/') {\n        blobName = selectedFile;\n    } else {\n        blobName = selectedFolder + '/' + selectedFile;\n    }\n    console.log(\"  blobName:\", blobName);\n\n    const blobClient = containerClient.getBlobClient(blobName);\n\n    // Download and convert a blob to a string\n    const downloadBlockBlobResponse = await blobClient.download();\n    const blobBody = await downloadBlockBlobResponse.blobBody;\n    const downloaded = await blobPromiseRead(blobBody);\n    // console.log(\"  downloaded blob:\", downloaded);\n\n    const exportLink = document.createElement('a');\n    // const blob = new Blob([downloaded], { type: 'text/plane' });\n    const blob = new Blob([downloaded]);\n    exportLink.href = URL.createObjectURL(blob);\n    exportLink.download = blobName;\n    exportLink.click();\n}\n\n// [Browsers only] A helper method used to convert a browser Blob by Promise.\nasync function blobPromiseRead(blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onloadend = (ev) => {\n            resolve(ev.target.result);\n        };\n        fileReader.onerror = reject;\n        // fileReader.readAsText(blob);\n        fileReader.readAsArrayBuffer(blob);\n    });\n}\n\nasync function deleteFileFunc() {\n    console.log(\"deleteFile\");\n\n    // console.log(\"  fileNameID:\", fileNameID);\n    // console.log(\"  fileNameID.length:\", fileNameID.length);\n\n    for (var i =0; i <  fileNameID.length; i++) {\n        if (fileNameID[i].checked === true) {\n            selectedFile = fileNameID[i].value;\n            // console.log(\"select file:\", selectedFile);\n        }\n    }\n\n    const containerClient = blobServiceClient.getContainerClient(containerNames[containerIndex]);\n    // console.log(\"setContainer containerName:\", containerNames[containerIndex]);\n\n    // const blobName = selectedFolder + '/' + selectedFile;\n    // console.log(blobName);\n\n    let blobName;\n    if (selectedFolder === '/') {\n        blobName = selectedFile;\n    } else {\n        blobName = selectedFolder + '/' + selectedFile;\n    }\n    console.log(\"  blobName:\", blobName);\n    \n    const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n    const deleteBlobResponse = await blockBlobClient.delete();\n\n    console.log(`  delete block blob ${blobName} successfully`);\n\n    await reDrawView();\n}\n\nasync function setContainer() {\n    const containerClient = blobServiceClient.getContainerClient(containerNames[containerIndex]);\n    // console.log(\"setContainer containerName:\", containerNames[containerIndex]);\n\n    folderList = [];\n    let delimiter = '/';\n    let iter = await containerClient.listBlobsByHierarchy(delimiter);\n    let blobItem = await iter.next();\n    while (!blobItem.done) {\n        folderList.push(blobItem.value.name);\n        blobItem = await iter.next();\n    }\n\n    fileList = [];\n    iter = await containerClient.listBlobsFlat();\n    blobItem = await iter.next();\n    while (!blobItem.done) {\n        fileList.push(blobItem.value.name);\n        blobItem = await iter.next();\n    }\n    // console.log(\"fileList\", fileList)\n    // console.log(\"folderList\", folderList)\n};\n\nfunction changeFolder() {\n    const folderNameID = document.getElementsByName('folderName');\n    for (var i =0; i <  folderNameID.length; i++) {\n        if (folderNameID[i].checked === true) {\n            selectedFolder = folderNameID[i].value;\n            console.log(\"select folder:\", selectedFolder);\n        }\n    }\n    fileNames();\n};\n\nasync function folderNames() {\n    // ReDrawにはこれは必須\n    // console.log(\"set folderNames\");\n    \n    const folderID = document.getElementById('folder');\n    const folderNameID = document.getElementsByName('folderName');\n\n    // console.log(\"  folderNameID.length:\", folderNameID.length);\n    let count = folderNameID.length;\n    for (var i =1; i < count; i++) {\n        // console.log(\"  fileNameID[]:\", fileNameID[i]);\n        let parent = folderNameID[1].parentElement;\n        // console.log(\"  parent:\", i, parent);\n        parent.remove();\n    }\n\n    for (const element of folderList) {\n        if(element.endsWith('/')) {\n            // console.log(\"  \", element.slice(0, element.length-1));\n            const label = document.createElement('label');\n            const input = document.createElement('input');\n            input.type = 'radio';\n            input.name = 'folderName';\n            input.value = element.slice(0, element.length-1);\n            folderID.appendChild(label);\n            label.appendChild(input);\n            label.appendChild(document.createTextNode(element.slice(0, element.length-1)));\n            const br = document.createElement( \"br\" );\n            label.appendChild( br );\n        };\n    }\n    if (selectedFolder == \"\") {\n        selectedFolder = '/';\n    }\n    \n    // folderNameID[0].checked =true;\n    folderNameID[0].value = '/';\n    for (var i =0; i < folderNameID.length; i++) {\n        if (folderNameID[i].value == selectedFolder) {\n            folderNameID[i].checked =true;\n        }\n        // console.log(folderNameID[i].value);\n        folderNameID[i].addEventListener(\"change\", changeFolder);\n    }\n    // console.log(\"  folderNameID.length:\", folderNameID.length);\n};\n\nasync function fileNames() {\n    // console.log(\"fileNames selectedFolder:\", selectedFolder);\n    // console.log(\"fileList:\", fileList);\n    const checkFolder = selectedFolder + '/';\n    console.log(\"  checkFolder:\", checkFolder);\n    filesId = document.getElementById('files');\n\n    // console.log(\"  fileNameID.length:\", fileNameID.length);\n    let count = fileNameID.length;\n    for (var i =0; i < count; i++) {\n        // console.log(\"  fileNameID[]:\", fileNameID[i]);\n        let parent = fileNameID[0].parentElement;\n        // console.log(\"  parent:\", i, parent);\n        parent.remove();\n    }\n\n    for (const element of fileList) {\n        if (checkFolder==='//') {\n            if(element.indexOf('/')===-1) {\n                // console.log(\" \", element);\n                \n                const label = document.createElement('label');\n                const input = document.createElement('input');\n                input.type = 'radio';\n                input.name = 'fileName';\n                input.value = element;\n                filesId.appendChild(label);\n                label.appendChild(input);\n                label.appendChild(document.createTextNode(element));\n                const br = document.createElement( \"br\" );\n                label.appendChild( br );\n            }        \n        }\n        else {\n            if(element.indexOf(checkFolder)===0) {\n                // console.log(\" \", element);\n                let element2 =  element.substr( checkFolder.length );\n\n                const label = document.createElement('label');\n                const input = document.createElement('input');\n                input.type = 'radio';\n                input.name = 'fileName';\n                input.value = element2;\n                filesId.appendChild(label);\n                label.appendChild(input);\n                label.appendChild(document.createTextNode(element2));\n                const br = document.createElement( \"br\" );\n                label.appendChild( br );\n            }        \n        }\n    }\n    filesId = document.getElementById('files');\n    // console.log(\"  fileNameID.length:\", fileNameID.length);\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}